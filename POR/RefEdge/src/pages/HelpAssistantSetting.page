<!--
 * ReferenceEdge
 * 
 * Point of Reference, Inc. - Copyright 2014 All rights reserved.
 *
 * @company : Point of Reference, Inc.
 * @website : www.point-of-reference.com 
 *
 * Disclaimer: THIS SOFTWARE IS PROVIDED "AS-IS" BY POINT OF REFERENCE ("POR"), 
 * WITH NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY OF THE SOFTWARE, 
 * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT. 
 * POR SHALL NOT BE LIABLE FOR ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING, 
 * MODIFYING OR DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES. POR IS NOT LIABLE FOR, 
 * AND MAKES NO REPRESENTATIONS OR WARRANTIES REGARDING, THE ACTIONS OR OMISSIONS OF 
 * ANY THIRD PARTIES (OR THE PRODUCTS OR SERVICES OFFERED BY ANY THIRD PARTIES) INCLUDING, 
 * WITHOUT LIMIATION, SALESFORCE.COM. COPY, USE OR DISTRIBUTION PROHIBITED WITHOUT EXPRESS 
 * WRITTEN CONSENT FROM COMPANY.
 --> 
<apex:page id="pageId" sidebar="false"  tabStyle="Custom_Settings__c"  controller="HelpAssistantSetting" standardStylesheets="false" applyHtmlTag="true" applyBodyTag="true" docType="html-5.0"> 

    <html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
        <head>
            <apex:stylesheet value="{!URLFOR($Resource.LightningCSS, 'assets/styles/salesforce-lightning-design-system-vf.css')}" />
            <apex:includeScript value="{!URLFOR($Resource.AngularJS)}"/>
            <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.2/jquery.min.js"></script>
            <apex:stylesheet value="{!URLFOR($Resource.Font, 'font-awesome-4.5.0/css/font-awesome.min.css')}" />
            <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
            <apex:stylesheet value="{!URLFOR($Resource.BootstrapFiles, 'bootstrap.css')}"/>
            <apex:stylesheet value="{!URLFOR($Resource.TextAngular, 'textAngular.css')}" />
            <script src="{!URLFOR($Resource.AngularMaterialRepo, 'angular.min.js')}"></script>
            <script src="{!URLFOR($Resource.TextAngular, 'textAngular-rangy.min.js')}"></script>
            <script src="{!URLFOR($Resource.TextAngular, 'textAngular-sanitize.min.js')}"></script>
            <script src="{!URLFOR($Resource.TextAngular, 'textAngular.min.js')}"></script>
            
            
            <script>
                var isSLDS;
                var globalHeaderHeight = 0
                var counter = 1;
            
                if (jQuery('.globalHeaderBar')[0]) {
                    globalHeaderHeight = jQuery("#AppBodyHeader").height() + jQuery("#globalHeaderBar").height();
                } else {            
                    globalHeaderHeight = jQuery("#AppBodyHeader").height();
                }
                $(document).ready(function() {
                    $('#phHeader td.left div').css({"width": "19vw", "height": "auto"});
                });
                jQuery(window).load(function() {
                    initialFunction();
                });
                function initialFunction() {
                    var index;
                    var length = document.getElementsByClassName("isSLDSSet").length;
                    for (index  = 0 ; index < length ; index++) {
                        var itemId = document.getElementsByClassName("isSLDSSet")[0].id;
                        document.getElementById(itemId).className = 'isSLDSSetClassic'
                    }
                }
                function ShowOrHideComponent(element) {  
                    if (counter == 1) {
                        var namespace = '{!JSENCODE(namespace)}'; 
                        action = true;               
                        content = element[namespace + 'DC_Message__c']
                        header = element[namespace + 'Label__c'];
                        addcls = '';
                        removcls = 'arrow_compbox arrow_box_top arrow_box_top_right arrow_box_top_Corner arrow_box_bottom';
                        loc = 'pagehrd';
                        frmTop = 180 - globalHeaderHeight;
                        frmLft = isSLDS ? '550' : '475';
                        showHideHelpOverlays(action, header, content, loc, addcls, removcls, 1, frmTop, frmLft);  
                        counter++ ;
                    } else {
                        action = false; 
                        showHideHelpOverlays(action, header, content, loc, addcls, removcls, 1, frmTop, frmLft);  
                        counter = 1;     
                    }
                }
            </script>
            <style>
                body { 
                    font-family: Arial,Helvetica,sans-serif;
                    font-size: 12px;
                }

                .classictable {
                    background: white;
                    display: table;
                    border-spacing: 2px;
                }
                .isSLDSSet {
                    visibility:hidden;
                }
                .isSLDSSetClassic {
                    visibility:visible;
                }
                #error-block {
                    background-color: #B60202;
                    color: WHITE;
                    font-size: 15px;
                    border-radius: 5px;
                }
                .required {
                    color:red;
                    display: inline;
                    font-weight:bold;
                }
                .classicTableHeaderCell {
                    background: #f2f3f3;
                    border-width: 0 0 1px 1px;
                    border-color: #e0e3e5;
                    color: #000;
                    font-size: 1.2em;
                    color: #54698d;
                    padding: 5px 2px 4px 5px;
                    border: 1px solid #ededed;
                }
                .tooltip:hover .tooltipHelpShow {
                    display : inline;
                    bottom: 65px;
                    position: absolute;
                }
                .tooltip:hover .tooltipHelpHide {
                    display : none;
                    bottom: 65px;
                    position: absolute;
                }
                #classic {
                    font-family: Arial,Helvetica,sans-serif!important;
                }
                .tooltipHelpShow {
                    display : none;
                    bottom: 65px;
                    line-height: 0.95rem;
                    position: absolute;
                }
                .tooltipHelpHide {
                    display : inline;
                    bottom: 65px;
                    position: absolute;
                }
                .tooltip:hover .tooltipHelpShowTA {
                    display : inline;
                    bottom: 105px;
                    position: absolute;
                }
                .tooltip:hover .tooltipHelpHideTA {
                    display : none;
                    bottom: 105px;
                    position: absolute;
                }
                .tooltipHelpShowTA {
                    display : none;
                    bottom: 105px;
                    line-height: 0.95rem;
                    position: absolute;
                }
                .tooltipHelpHideTA {
                    display : inline;
                    bottom: 105px;
                    position: absolute;
                }
                div.tooltipClassic {
                    opacity:0.35;
                    width: 20px;
                    float: right;
                    margin-right: 1px;
                    display:inline;
                }
                div.tooltipClassic:hover {
                    opacity:1;
                    width: 20px;
                    float: right;
                    margin-right: 1px;
                    display:inline;
                }
                div.tooltipClassic span {
                    display: none;
                    font-weight:normal;
                    text-align:left;
                    padding: 3px 5px;
                    margin-left: 8px;
                    width: 250px;
                }
                div.tooltipClassic:hover span {
                    display: inline;
                    position: absolute;
                    border: 1px solid orange;
                    width: 15em;
                    z-index: 1;
                    background-color: #fefdb9;
                    padding: 2px 5px;
                    border: 1px solid orange;
                    text-align: left;
                    right: 25px;
                    top: 25px;
                    white-space: normal;
                    font-weight: normal;
                    color: #000;
                }
                .activity-div:after {
                    content: "";
                    position: absolute;
                    right: -4px;
                    top: 30px;
                    width: 1px;
                    bottom: 0;
                    background: #ccc;
                }
                .required {
                    color:red;
                    display: inline;
                    font-weight:bold;
                }
                .slds {
                    background: white !important;
                }
                @media only screen and (max-width: 500px) {
                    .toast-msg {
                        position: fixed;
                        top: 10px;
                        left: 0;
                        right: 0;
                        //width: 90%;
                        max-width: 380px;
                        margin: 0 auto;
                        z-index: 1100000;
                    }
                    .buttonStyle {
                        width: 160px;
                        margin: 10px auto 0 auto;
                    }
                    #loading-image {
                        position: fixed;
                        top: 40%;
                        left: 42%;
                        width:15%;
                    }
                }
                @media only screen and (min-width: 501px) {
                    .toast-msg {
                        position: fixed;
                        top: 10px;
                        left: 0;
                        right: 0;
                        width: 50%;
                        margin: 0 auto;
                        z-index: 1100000;
                    }
                    .buttonStyle {
                        float: right;
                    }
                    #loading-image {
                        position: fixed;
                        top: 40%;
                        left: 47%;
                        width:4%;
                    }
                }
                .slds-notify--toast {
                    min-width: auto !important;
                    padding: 15px 12px;
                }  
                #loading { 
                    width: 100%;
                    height: 100%;
                    top: 0px;
                    left: 0px;
                    position: absolute;
                    display: block;
                    opacity: 0.7;
                    filter: alpha(opacity = 50);
                    -moz-opacity: 0.7;
                    background-color: #fff;
                    text-align: center;
                    z-index: 19005;
                }
                .remove-flex{
                    flex: none !important;
                    -webkit-flex: none !important;
                }
                .container {
                    position: fixed;
                    top: 0;
                    left: 0;
                    right: 0;
                    bottom: 0;
                    overflow-x: hidden;
                    overflow-y: scroll;
                }
                #adp-time {
                    display: none !important;
                }
                .pbTitle {
                    font-size: 0.8em !important;
                    font-weight: bold !important;
                    padding: 12px !important;
                }
                #classicDiv .tertiaryPalette {
                    background: #79b4cd;
                    border-color: #79b4cd;
                    margin-bottom: 0.5rem;
                }
                #classicDiv .tertiaryPalette h3 {
                    font-size: 1.1em !important;
                }
                .classicSpinner {
                    position: absolute;
                    top: 50%;
                    left: 50%;
                    margin-left: -30px;
                }
                .classicSpinnerBackground {
                    top: 0;
                    height: 70vh;
                    left: 0;
                    right: 0;
                    background-color: WHITE;
                    opacity: 0.7;
                    z-index: 9999;
                }
                .pageHeader {
                    background-color: #F4F6F9;
                }
                .classicRequiredDiv {
                    background-color: #C00;
                    display: inline-block;
                    position: absolute;
                    left: -5px;
                    height: 95%;
                }
                .classicModal {
                    background-color: #f8f8f8;
                    box-shadow: 0 0 20px #6D6D6D;
                    position: fixed;
                    left: 50%;
                    z-index: 999;
                }
                .classicModalHeader {
                    background-color: #03a7e5;
                    border-radius: 3px;
                    margin: 2px;
                    padding: 0.3rem 0.3rem 0.3rem 1.2rem;
                }
                .classicModalHeader a {
                    float: right;
                    line-height: 1.5em;
                    color: #f8f8f8;
                    border-radius: 3px;
                    padding: 0 0.28rem;
                    cursor: pointer;
                }
                .classicModalHeader a:HOVER {
                    background-color: #f8f8f8;
                    color: #ff6a00;
                }
                .classicModalHeader span {
                    color: #f8f8f8;
                    font-weight: bold;
                    line-height: 150%;
                }
                .classicModalContent {
                    padding: 0.5rem 1rem;
                    max-height: 30rem;
                    overflow-y: auto;
                }
                .classicModalFooter {
                    padding: 0.6rem 1.6rem;
                    text-align: right;
                    background-color: #eeeeee;
                    border-top: 1px solid lightgray;
                }
                .classicModalFooter a {
                    text-decoration: none !important;
                    color: black;
                }
                .classicModalbackdrop {
                    background-color: black;
                    opacity: 0.20;
                    filter: alpha(opacity = 20);
                    position: absolute;
                    width: 100%;
                    height: 100%;
                    top: 0;
                    left: 0;
                    z-index: 99;
                }
                .modalErrorMsg {
                    border-radius: 4px;
                    background-color: #ffc;
                    border-style: solid;
                    border-width: 1px;
                    color: #000;
                    padding: 6px 8px 6px 6px;
                    margin: 4px 4px 10px 4px;
                    float: left;
                    width: 98%;
                    display: block;
                }
                .errorPageMsgDiv {
                    border-radius: 4px;
                    background-color: #ffc;
                    border-style: solid;
                    border-width: 1px;
                    color: #000;
                    padding: 6px 8px 6px 6px;
                    margin: 4px 20px;
                }
                .successImg {
                    background-image: url(/img/msg_icons/info32.png);
                    background-position: 0 0;
                    width: 32px;
                    height: 32px;
                    background-size: 32px;
                }
                .errorImg {
                    background-image: url(/img/msg_icons/error24.png);
                    background-position: 0 0;
                    width: 32px;
                    height: 32px;
                    background-size: 32px;
                }  
            </style> 
            <script>
                var myapp = angular.module('myapp',  ['textAngular']);
                myapp.controller('controller', function ($scope, $q, $window, $filter, $location) {
                    $scope.isSLDS = {!isSLDS};
                    isSLDS = $scope.isSLDS;
                    $scope.isLoading = true;
                    $scope.showEditModal = false;
                    $scope.currentItem = {};
                    $scope.isSaveError = false;
                    $scope.confirmMessage = '';
                    $scope.showConfirmReset = false;
                    $scope.cs = {};
                    $scope.pageList = [];
                    $scope.helpListClassic = {};
                    $scope.helpListLightning = {};
                    $scope.hasCounterPart = {};
                    $scope.showConfirmCopyModal = false;
                    $scope.namespace = '{!JSENCODE(namespace)}';
                    $scope.initialFunction = function() {   
                        $scope.getData().then(function(result) {
                            result = $scope.parseResult(result);
                            result = JSON.parse(result); 
                            $scope.isLoading = false;
                            $scope.pageList = JSON.parse(result[0]);
                            $scope.helpListLightning = JSON.parse(result[1]);
                            $scope.helpListClassic = JSON.parse(result[2]);
                            $scope.cs = JSON.parse(result[3]);
                            
                            angular.forEach($scope.pageList, function(page) {
                                angular.forEach($scope.helpListClassic[page.classicPage], function(classicEntry) {
                                    angular.forEach($scope.helpListLightning[page.lightningPage], function(lightningEntry) {
                                        if (lightningEntry.Name == classicEntry.Name) {
                                            $scope.hasCounterPart[lightningEntry.Name] = true;
                                        } else {
                                            $scope.hasCounterPart[lightningEntry.Name] = $scope.hasCounterPart[lightningEntry.Name] == null ? false : $scope.hasCounterPart[lightningEntry.Name];
                                        }
                                    });
                                });
                                angular.forEach($scope.helpListLightning[page.lightningPage], function(classicEntry) {
                                    angular.forEach($scope.helpListClassic[page.classicPage], function(lightningEntry) {
                                        if ($scope.hasCounterPart[lightningEntry.Name] == null || !$scope.hasCounterPart[lightningEntry.Name]) {
                                            if (lightningEntry.Name == classicEntry.Name) {
                                                $scope.hasCounterPart[lightningEntry.Name] = true;
                                            } else {
                                                $scope.hasCounterPart[lightningEntry.Name] = $scope.hasCounterPart[lightningEntry.Name] == null ? false : $scope.hasCounterPart[lightningEntry.Name];
                                            }
                                        }
                                    });
                                });
                            });
                        });
                    }

                    $scope.showEdit = function(item) { 
                        if (item != null) {
                            $scope.showEditModal = true;
                            $scope.isSaveError = false;
                            $scope.currentItem = angular.copy(item);
                        }
                    } 
                    
                    
                    $scope.showPreview = function(entry) {
                        ShowOrHideComponent(entry);
                    }

                    $scope.cancelEdit = function() {
                        $scope.showEditModal = false;
                        $scope.currentItem = {};
                    }

                    $scope.showCopyConfirm = function(entry) {
                        $scope.currentItem = angular.copy(entry);
                        $scope.showConfirmCopyModal = true;
                        if (entry[$scope.namespace +'Visible__c']) {
                            $scope.confirmMessage = 'Are you sure you want to copy Header and Body to Lighning?';
                        } else {
                            $scope.confirmMessage = 'Are you sure you want to copy Header and Body to Classic?';
                        }
                    }
                    $scope.confirmCopy = function() {
                        var entry = angular.copy($scope.currentItem);
                        $scope.showConfirmCopyModal = false;
                        $scope.currentItem = {};
                        var continueLoop = true;
                        
                        if (entry[$scope.namespace +'Visible__c']) {
                            $scope.confirmMessage = 'Are you sure you want to copy Header and Body to Lighning?';
                            angular.forEach($scope.pageList, function(page) {
                                if (continueLoop && page.classicPage == entry[$scope.namespace + 'Field_API_Name__c']) {
                                    
                                    angular.forEach($scope.helpListLightning[page.lightningPage], function(lighningEntry) {
                                        if (continueLoop && lighningEntry.Name == entry.Name) {
                                            lighningEntry[$scope.namespace + 'Label__c'] = entry[$scope.namespace + 'Label__c'];
                                            lighningEntry[$scope.namespace + 'DC_Message__c'] = entry[$scope.namespace + 'DC_Message__c'];                                            
                                            $scope.currentItem = lighningEntry;
                                            continueLoop = false;
                                        }
                                    });
                                }
                            });
                            $scope.saveEdit(); 
                        } else {
                            $scope.confirmMessage = 'Are you sure you want to copy Header and Body to Classic?';
                            angular.forEach($scope.pageList, function(page) {
                                if (continueLoop && page.lightningPage == entry[$scope.namespace + 'Field_API_Name__c']) {
                                    
                                    angular.forEach($scope.helpListClassic[page.classicPage], function(classicEntry) {
                                        if (continueLoop && classicEntry.Name == entry.Name) {
                                            classicEntry[$scope.namespace + 'Label__c'] = entry[$scope.namespace + 'Label__c'];
                                            classicEntry[$scope.namespace + 'DC_Message__c'] = entry[$scope.namespace + 'DC_Message__c'];                                            
                                            $scope.currentItem = classicEntry;
                                            continueLoop = false;
                                        }
                                    });
                                }
                            });
                            $scope.saveEdit();
                        }
                    }
                    
                    $scope.showResetConfirm = function(entry) {
                        $scope.showConfirmReset = true;
                        $scope.confirmMessage = 'Are you sure you want to reset Header and Body to default?';
                        $scope.currentItem = angular.copy(entry);
                        $scope.currentItem[$scope.namespace + 'Label__c'] = $scope.currentItem.Name;
                        $scope.currentItem[$scope.namespace + 'DC_Message__c'] = $scope.currentItem[$scope.namespace + 'Default__c'];
                    }

                    
                    $scope.resetDefault = function(isConfirm) {
                        if (!isConfirm) {
                            $scope.currentItem[$scope.namespace + 'Label__c'] = $scope.currentItem.Name;
                            $scope.currentItem[$scope.namespace + 'DC_Message__c'] = $scope.currentItem[$scope.namespace + 'Default__c'];
                        } else {
                            $scope.showConfirmReset = false;
                            $scope.isLoading = true;
                            $scope.saveEdit();
                        }
                    }

                    $scope.resetDefault = function(isConfirm) {
                        if (!isConfirm) {
                            $scope.currentItem[$scope.namespace + 'Label__c'] = $scope.currentItem.Name;
                            $scope.currentItem[$scope.namespace + 'DC_Message__c'] = $scope.currentItem[$scope.namespace + 'Default__c'];
                        } else {
                            $scope.showConfirmReset = false;
                            $scope.isLoading = true;
                            $scope.saveEdit();
                        }
                    }
                    $scope.saveEdit = function() {
                        $scope.isSaveError = false;

                        if ($scope.currentItem[$scope.namespace + 'Label__c'] != null && $scope.currentItem[$scope.namespace + 'Label__c'] != '' 
                            && $scope.currentItem[$scope.namespace + 'DC_Message__c'] != null && $scope.currentItem[$scope.namespace + 'DC_Message__c'] != '') {
                            $scope.showEditModal = false;
                            var str = $scope.currentItem[$scope.namespace + 'DC_Message__c'].replace('<p>' ,'')
                            var re = new RegExp('<p>', 'g');
                            str = str.replace(re,'<br/>');
                            re = new RegExp('</p>', 'g');
                            str = str.replace(re,'');
                            var continueCheck = true;
                            var count = 10;
                            while (continueCheck && count > 0) {
                                var start = str.indexOf('<span');
                                var end = str.indexOf('</span>');
                                count --;
                                if (start != -1 && end != -1) {
                                    str = str.replace(str.substring(start, end + 7),'');
                                } else {
                                    continueCheck = false;
                                }
                            }
                            $scope.currentItem[$scope.namespace + 'DC_Message__c'] = str;
                            $scope.isLoading = true;
                            $scope.save().then(function(result) {
                                var continueLoop = true;
                                
                                if ($scope.currentItem[$scope.namespace + 'Visible__c']) {
                                    angular.forEach($scope.helpListClassic[$scope.currentItem[$scope.namespace + 'Field_API_Name__c']], function(entry) {
                                        if (continueLoop && entry['Name'] == $scope.currentItem['Name']) {
                                            entry[$scope.namespace + 'Label__c'] = $scope.currentItem[$scope.namespace + 'Label__c'];
                                            entry[$scope.namespace + 'DC_Message__c'] = $scope.currentItem[$scope.namespace + 'DC_Message__c'];
                                            continueLoop = false;
                                        }
                                    });
                                } else {
                                    angular.forEach($scope.helpListLightning[$scope.currentItem[$scope.namespace + 'Field_API_Name__c']], function(entry) {
                                        if (continueLoop && entry['Name'] == $scope.currentItem['Name']) {
                                            entry[$scope.namespace + 'Label__c'] = $scope.currentItem[$scope.namespace + 'Label__c'];
                                            entry[$scope.namespace + 'DC_Message__c'] = $scope.currentItem[$scope.namespace + 'DC_Message__c'];
                                            continueLoop = false;
                                        }
                                    });
                                }
                            });
                        } else {
                            $scope.isSaveError = true;
                        }
                        $scope.isLoading = false;
                    }

                    $scope.backToCustomSetting = function() {
                        if ($scope.isSLDS) {
                            sforce.one.navigateToURL('/' + $scope.cs.Id + '?nooverride=1', true);
                        } else {
                            window.location.href = '/' + $scope.cs.Id + '?nooverride=1';
                        }
                    }

                    $scope.save = function(errorRecord) {            	
                        var deferred = $q.defer();
                        Visualforce.remoting.Manager.invokeAction(
                                '{!$RemoteAction.HelpAssistantSetting.saveEdit}',
                                JSON.stringify($scope.currentItem),
                                function(result, event) {                        
                                deferred.resolve(result);
                                },
                            {escape: true}
                        ); 
                        return deferred.promise;     
                    }

                    $scope.getData = function(errorRecord) {            	
                        var deferred = $q.defer();
                        Visualforce.remoting.Manager.invokeAction(
                                '{!$RemoteAction.HelpAssistantSetting.getData}',
                                function(result, event) {                        
                                deferred.resolve(result);
                                },
                            {escape: true}
                        ); 
                        return deferred.promise;     
                    }

                    $scope.parseResult = function(result) {
                        if (result != null) {
                            result = result.replace(/&quot/gi, '"');
                            result = result.replace(/&amp/g, '&');
                            result = result.replace(/&lt/g, '<');
                            result = result.replace(/&gt/g, '>');
                            result = result.replace(/;/g, '');
                            result = result.replace(/&#39/g, '\'');
                            return result;
                        }
                    }
						
                });
            </script>
        </head>
        <div id="angularPanel" align="left" ng-app="myapp" ng-controller="controller" class="isSLDSSet">
            <div ng-init="initialFunction();" >
                <div ng-show="isSLDS" id="lightningDiv" class="slds">
                    <div id="lightning" ng-show="!isloading">
                        <div id="pagehrd" style="padding: 1px 1px;position: fixed;"></div>
                        
                        <div style="width: 100%;" role="banner">
                            <div style="display: inline-block;width:100%;">
                                <a ng-click="backToCustomSetting();" style="font-size: 91%;cursor: pointer;" >{!$Label.Back_to_the_Custom_Setting_Page}</a>
                                <div style="display: inline-block;width: 65%;">
                                    <h1 style="width: 100%;text-align: center;font-size: 2.5rem;" class="slds-page-header__title slds-m-right--small slds-align-middle slds-truncate">Help Assistant Setting</h1>
                                </div>
                            </div>
                        </div>
                        <div style="padding: 1rem 2rem;">
                            <div ng-repeat="page in pageList" style="font-size: 91%;">
                                <div class="slds-section">
                                    <h3 class="slds-section-title"  style="background: #f4f6f9; margin-bottom:3px">
                                        <button ng-click="page.show = !page.show" aria-controls="expando-unique-id" aria-expanded="true" class="slds-button slds-section__title-action" style="color:black">
                                        <svg class="slds-section__title-action--icon slds-button__icon slds-button__icon--left" aria-hidden="true">
                                            <use ng-show="page.show" xlink:href="{!URLFOR($Resource.LightningCSS,'/assets/icons/utility-sprite/svg/symbols.svg#chevrondown')}"></use>
                                            <use ng-show="!page.show" xlink:href="{!URLFOR($Resource.LightningCSS,'/assets/icons/utility-sprite/svg/symbols.svg#chevronright')}"></use>
                                        </svg>
                                        <span class="slds-truncate">{{page.header}}</span>
                                        </button>
                                    </h3>
                                    <div  class="slds-section__content" style="display:flex;margin:1rem 0" ng-show="page.show">
                                        <table class="slds-table slds-no-row-hover" style="flex:1;width:auto!important;max-width:50%!important;">
                                            <tbody>
                                                <tr>
                                                    <th scope="row" colspan="5" style="text-align:center">
                                                        <span class="slds-item_label slds-text-color_weak slds-truncate" style="text-align:center;color: #54698d;">{!$Label.Lightning}</span>
                                                    </th>
                                                </tr>
                                                <tr ng-repeat="entry in helpListLightning[page.lightningPage]">
                                                    <th scope="row" style="padding-right: 2rem;text-align:right;width:55%;">
                                                        <div class="slds-item_label slds-text-color_weak slds-truncate" ng-bind="entry[namespace + 'Label__c']" style="min-width: 10px!important;max-width: 100%!important;color: #54698d;"></div>
                                                    </th>
                                                    <td style="width:7%;">
                                                        <div class="slds-truncate" style="min-width: 10px!important;max-width: 100%!important;" ng-click="showEdit(entry);"><a style="cursor:pointer;">{!$Label.Edit}</a></div>
                                                    </td>
                                                    <td style="width:11%;">
                                                        <div class="slds-truncate" style="min-width: 10px!important;max-width: 100%!important;" ng-click="showPreview(entry);"><a style="cursor:pointer;">Preview</a></div>
                                                    </td>
                                                    <td style="width:9%;">
                                                        <div class="slds-truncate" style="min-width: 10px!important;max-width: 100%!important;" ng-click="showResetConfirm(entry);"><a style="cursor:pointer;">Reset</a></div>
                                                    </td>
                                                    <td ng-show="hasCounterPart[entry.Name]" style="width:18%;">
                                                        <div class="slds-truncate" style="min-width: 10px!important;max-width: 100%!important;" ng-click="showCopyConfirm(entry)"><a style="cursor:pointer;">Copy To Classic</a></div>
                                                    </td>
                                                </tr> 
                                            </tbody>
                                        </table>
                                        <table class="slds-table slds-no-row-hover" style="flex:1;width:auto!important;max-width:50%!important;">
                                            <tbody>
                                                <tr>
                                                    <th scope="row" colspan="5" style="text-align:center">
                                                        <span class="slds-item_label slds-text-color_weak slds-truncate" style="color: #54698d;">Classic</span>
                                                    </th>
                                                </tr>
                                                <tr ng-repeat="entry in helpListClassic[page.classicPage]">
                                                    <th scope="row" style="text-align:right;padding-right: 2rem;width:55%;">
                                                        <div class="slds-item_label slds-text-color_weak slds-truncate;" style="min-width: 10px!important;max-width: 100%!important;color: #54698d;" ng-bind="entry[namespace + 'Label__c']"></div>
                                                    </th>
                                                    <td style="width:7%;">
                                                        <div class="slds-truncate" ng-click="showEdit(entry);" style="min-width: 10px!important;max-width: 100%!important;"><a style="cursor:pointer;">{!$Label.Edit}</a></div>
                                                    </td>
                                                    <td style="width:11%;">
                                                        <div class="slds-truncate" ng-click="showPreview(entry);" style="min-width: 10px!important;max-width: 100%!important;"><a style="cursor:pointer;">Preview</a></div>
                                                    </td>
                                                    <td style="width:9%;">
                                                        <div class="slds-truncate" ng-click="showResetConfirm(entry);" style="min-width: 10px!important;max-width: 100%!important;"><a style="cursor:pointer;">Reset</a></div>
                                                    </td>
                                                    <td ng-show="hasCounterPart[entry.Name]" style="width:18%;">
                                                        <div class="slds-truncate" ng-click="showCopyConfirm(entry);" style="min-width: 10px!important;max-width: 100%!important;"><a style="cursor:pointer;">Copy To Lightning</a></div>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div ng-show="showEditModal" ng-cloak="true">
                            <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open slds-modal_large">
                                <div class="slds-modal__container">
                                    <header class="slds-modal__header">
                                        <button class="slds-button slds-button--icon-inverse slds-modal__close" ng-click="cancelEdit()">
                                            <img id="close-Image" src="{!URLFOR($Resource.LightningCSS, '/assets/icons/action/close_120.png')}" alt="close" height="20" width="20"/>
                                            <span class="slds-assistive-text">{!$Label.Close}</span>
                                        </button>
                                        <h2 id="modal-heading-01" class="slds-text-heading_medium slds-hyphenate slds-text-color_weak" ng-bind="currentItem[namespace + 'Label__c']"></h2>
                                    </header>
                                    <div id="error-block" ng-show="isSaveError" class="slds-p-around--small">
                                        <p>
                                            {!$Label.ERROR_SELECT_REQUIRED_VALUE}
                                        </p>
                                    </div>
                                    <div class="slds-modal__content slds-p-around_medium">
                                        <div class="slds-form-element">
                                            <div class="slds-col top-padding" style="display:flex;padding: 0.25rem;">
                                                <label class="slds-form-element__label" style="flex:1.15">
                                                    Header <p clas="slds-truncate" style="color:red;font-size: 0.9rem;">(Max 80 Characters)</p>
                                                </label>
                                                <div class="slds-form-element__control" style="flex:5">
                                                    <input type="text" id="text-input-id-1" class="slds-input" ng-model="currentItem[namespace + 'Label__c']" autofocus="true"/>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="slds-form-element">
                                            <div class="slds-col top-padding" style="display:flex;padding: 0.25rem;">
                                                <label class="slds-form-element__label" style="flex:1.15">
                                                    Body <p clas="slds-truncate" style="color:red;font-size: 0.9rem;">(Max 500 Characters)</p>
                                                </label>
                                                <div class="slds-form-element__control" style="flex:5">
                                                    <div class="slds-rich-text-editor__textarea slds-grid slds-wrap">
                                                        <text-angular style="width: 100%; overflow: auto;border: 1px solid #d8dde6;border-radius: 4px;"
                                                                ng-model="currentItem[namespace + 'DC_Message__c']"
                                                                ta-toolbar="[['bold', 'italics', 'underline']]"></text-angular>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <footer class="slds-modal__footer">
                                        <button class="slds-button slds-button--neutral" ng-click="resetDefault(false)">Reset</button>
                                        <button class="slds-button slds-button--neutral" ng-click="cancelEdit()">{!$Label.Cancel}</button>
                                        <button class="slds-button slds-button--brand" ng-click="saveEdit()">{!$Label.Save}</button>
                                    </footer>
                                </div>
                            </section>
                            <div class="slds-backdrop slds-backdrop--open"></div>
                        </div>
                        <div ng-show="showConfirmReset" ng-cloak="true">
                            <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open slds-modal_large">
                                <div class="slds-modal__container">
                                    <div class="slds-modal__content slds-p-around_medium">
                                        <div class="slds-form-element">
                                            <div class="slds-col top-padding">
                                                {{confirmMessage}}
                                            </div>
                                        </div>
                                    </div>
                                    <footer class="slds-modal__footer">
                                        <button class="slds-button slds-button--brand" ng-click="resetDefault(true);">{!$Label.Yes}</button>
                                        <button class="slds-button slds-button--neutral" ng-click="showConfirmReset = false;">{!$Label.No}</button>
                                    </footer>
                                </div>
                            </section>
                            <div class="slds-backdrop slds-backdrop--open"></div>
                        </div>
                        <div ng-show="showConfirmCopyModal" ng-cloak="true">
                            <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open slds-modal_large">
                                <div class="slds-modal__container">
                                    <div class="slds-modal__content slds-p-around_medium">
                                        <div class="slds-form-element">
                                            <div class="slds-col top-padding">
                                                {{confirmMessage}}
                                            </div>
                                        </div>
                                    </div>
                                    <footer class="slds-modal__footer">
                                        <button class="slds-button slds-button--brand" ng-click="confirmCopy(true);">{!$Label.Yes}</button>
                                        <button class="slds-button slds-button--neutral" ng-click="showConfirmCopyModal = false;">{!$Label.No}</button>
                                    </footer>
                                </div>
                            </section>
                            <div class="slds-backdrop slds-backdrop--open"></div>
                        </div>
                        <div ng-show="isloading" class="slds-spinner--medium" id="loading">
                            <img id="loading-image" src="{!URLFOR($Resource.LightningCSS, '/assets/images/spinners/slds_spinner_brand.gif')}" alt="Loading..." />
                        </div>
                    </div>
                </div>
                <div ng-show="!isSLDS" id="classicDiv">
                    <div id="classic">
                        <div ng-show="!isSLDS" id="classicDiv">
                            <div class="classicSpinnerBackground" ng-show="isloading">
                                <apex:image styleClass="classicSpinner" id="theImage" value="{!$Resource.LoaderSpinner}" width="60" height="60" />
                            </div>
                            <div ng-show="!isloading">
                                <div id="pagehrd" style="padding: 1px 1px;position: fixed;"></div>
                                <div style="width: 100%;" role="banner">
                                    <div style="display: inline-block;width:100%;">
                                        <a ng-click="backToCustomSetting();" style="text-decoration: underline;cursor: pointer;">{!$Label.Back_to_the_Custom_Setting_Page}</a>
                                        <div style="display: inline-block;width: 65%;text-align: center;">
                                            <div style="font-size: 1.5em;font-weight: bold;width: 100%;">Help Assistant Setting</div>
                                        </div>
                                    </div>
                                </div>
                                <div class="bPageBlock brandSecondaryBrd bEditBlock secondaryPalette" style="font-size: 109%!important;">
                                    <div ng-repeat="page in pageList">
                                        <div>
                                            <div class="pbSubheader brandTertiaryBgr first tertiaryPalette" style="color: white !important;">
                                                <span class="pbSubExtra" style="float: left" ng-click="page.show = !page.show" >
                                                    <img style="background: transparent url(/img/alohaSkin/twisty_sprite.png) 0 -11px no-repeat;color: white;background-position: 1px -39px;cursor:pointer;" ng-show="page.show" src="{!URLFOR($Resource.LightningCSS_2_3, '/assets/icons/utility-sprite/svg/symbols.svg#down')}" alt="Hide Section" class="hideListButton" tabindex="0"/>
                                                    <img style="background: transparent url(/img/alohaSkin/twisty_sprite.png) 0 0 no-repeat;color: white;background-position: 1px -26px;cursor:pointer;" ng-show="!page.show" src="{!URLFOR($Resource.LightningCSS_2_3, '/assets/icons/utility-sprite/svg/symbols.svg#right')}" alt="Show Section" class="showListButton" tabindex="0"/>
                                                    <h3>{{page.header}}</h3>
                                                </span>
                                            </div>
                                            <div ng-show="page.show" class="pbSubsection" style="width:95%; margin-left:2%;display:flex;">
                                                <table class="detailList classictable" style="width:auto!important;flex:1;margin-left: 2%;margin-bottom:2%;">
                                                    <tbody>
                                                        <tr class="headerRow" style="background: #f2f3f3;">
                                                            <th scope="row" colspan="5" style="text-align: center;padding: 1%;">
                                                                <span style="text-align:center;color: #54698d;">{!$Label.Lightning}</span>
                                                            </th>
                                                        </tr>
                                                        <tr ng-repeat="entry in helpListLightning[page.lightningPage]" class="dataRow" style="border: 1px solid #ededed;border-right-width: 0;line-height: 20px;">
                                                            <th scope="row" style="text-align:right;padding-right:2rem;font-weight:bold;width: 40%;word-wrap: break-word;" class="labelCol">
                                                                <div ng-bind="entry[namespace + 'Label__c']" style="color: #4a4a56;"></div>
                                                            </th>
                                                            <td class="dataCell vfLabelColTextWrap" style="width: 7%">
                                                                <div ng-click="showEdit(entry);"><a style="cursor: pointer;">{!$Label.Edit}</a></div>
                                                            </td>
                                                            <td class="dataCell vfLabelColTextWrap" style="width: 11%">
                                                                <div ng-click="showPreview(entry);"><a style="cursor: pointer;">Preview</a></div>
                                                            </td>
                                                            <td class="dataCell vfLabelColTextWrap" style="width: 9%">
                                                                <div ng-click="showResetConfirm(entry);"><a style="cursor: pointer;">Reset</a></div>
                                                            </td>
                                                            <td ng-show="hasCounterPart[entry.Name]" class="dataCell vfLabelColTextWrap" style="width: 18%">
                                                                <div ng-click="showCopyConfirm(entry)"><a style="cursor: pointer;">Copy To Classic</a></div>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                                <table class="detailList classictable" style="width:auto!important;flex:1;margin-bottom:2%;margin-right: 2%;" >
                                                    <tbody>
                                                        <tr class="headerRow" style="background: #f2f3f3;">
                                                            <th scope="row" colspan="5" style="text-align: center;padding: 1%;">
                                                                <span style="text-align:center;color: #54698d;">Classic</span>
                                                            </th>
                                                        </tr>
                                                        <tr ng-repeat="entry in helpListClassic[page.classicPage]" class="dataRow" style="border: 1px solid #ededed;border-left-width: 0;line-height: 20px;">
                                                            <th scope="row" style="text-align:right;padding-right:2rem;font-weight:bold;width: 40%; word-wrap: break-word;" class="labelCol">
                                                                <div ng-bind="entry[namespace + 'Label__c']" style="color: #4a4a56;"></div>
                                                            </th>
                                                            <td class="dataCell vfLabelColTextWrap" style="width: 7%">
                                                                <div ng-click="showEdit(entry);"><a style="cursor: pointer;">{!$Label.Edit}</a></div>
                                                            </td>
                                                            <td class="dataCell vfLabelColTextWrap" style="width: 11%">
                                                                <div ng-click="showPreview(entry);"><a style="cursor: pointer;">Preview</a></div>
                                                            </td>
                                                            <td class="dataCell vfLabelColTextWrap" style="width:9%">
                                                                <div ng-click="showResetConfirm(entry);"><a style="cursor: pointer;">Reset</a></div>
                                                            </td>
                                                            <td ng-show="hasCounterPart[entry.Name]" class="dataCell vfLabelColTextWrap" style="width: 18%">
                                                                <div ng-click="showCopyConfirm(entry)"><a style="cursor: pointer;">Copy To Lightning</a></div>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div ng-show="showEditModal" ng-cloak="true">
                                    <section role="dialog" tabindex="-1" class="classicModal" style="margin-left: -20%; width: 40%; top: 25vh;">
                                        <div>
                                            <header class="classicModalHeader">
                                                <a ng-click="cancelEdit();" title="Close">
                                                    <i class="fa fa-times" aria-hidden="true"></i>
                                                </a>
                                                <span ng-bind="currentItem[namespace + 'Label__c']"></span>
                                            </header>
                                            <div class="classicModalContent">
                                                <div class="modalErrorMsg" style="border-color: #cc0000; position: relative" ng-show="isSaveError">
                                                    <img class="errorImg" src="/s.gif" />
                                                    <span style="position: absolute; padding-top: 0.2rem; padding-left: 0.4rem">
                                                        <span style="font-weight: bold; color: #cc0000">Error:</span>
                                                        <span>{!$Label.ERROR_SELECT_REQUIRED_VALUE}</span>
                                                    </span>
                                                </div>
                                                <div>
                                                    <div style="display:flex;padding: 0.25rem;">
                                                        <label style="flex:1.25;padding-right: 10px;padding-left: 2px;text-align: right;font-size: 91%;font-weight: bold;color: #333;margin:0" class="labelCol">
                                                            Header <p clas="slds-truncate" style="color:red;font-size: 0.9rem;margin: 0;">(Max 80 Characters)</p>
                                                        </label>
                                                        <div style="flex:5">
                                                            <input style="width: 100%;" type="text" id="text-input-id-1" ng-model="currentItem[namespace + 'Label__c']" autofocus="true"/>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div>
                                                    <div style="display:flex;padding: 0.25rem;">
                                                        <label style="flex:1.25;padding-right: 10px;padding-top: 20px;padding-left: 2px;text-align: right;font-size: 91%;font-weight: bold;color: #333;" class="labelCol">
                                                            Body <p clas="slds-truncate" style="color:red;font-size: 0.9rem;margin: 0;">(Max 500 Characters)</p>
                                                        </label>
                                                        <div style="flex:5">
                                                            <div style="display: inline-flex;width: 100%;">
                                                                <text-angular style="width: 100%; overflow: auto;border: 1px solid #d8dde6;border-radius: 4px;"
                                                                        ng-model="currentItem[namespace + 'DC_Message__c']"
                                                                        ta-toolbar="[['bold', 'italics', 'underline']]"></text-angular>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <footer class="classicModalFooter">
                                                <a class="btn" ng-click="resetDefault(false)">Reset</a>
                                                <a class="btn" ng-click="cancelEdit()">{!$Label.Cancel}</a>
                                                <a class="btn" ng-click="saveEdit()">{!$Label.Save}</a>
                                            </footer>
                                        </div>
                                    </section>
                                    <div class="classicModalbackdrop"></div>
                                </div>
                                <div ng-show="showConfirmReset" ng-cloak="true">
                                    <section role="dialog" tabindex="-1" class="classicModal" style="margin-left: -20%; width: 40%; top: 35vh;">
                                        <div>
                                            <div class="classicModalContent">
                                                {{confirmMessage}}
                                            </div>
                                            <footer class="classicModalFooter">
                                                <a class="btn" ng-click="resetDefault(true);">{!$Label.Yes}</a>
                                                <a class="btn" ng-click="showConfirmReset = false;">{!$Label.No}</a>
                                            </footer>
                                        </div>
                                    </section>
                                    <div class="classicModalbackdrop"></div>
                                </div>
                                
                                
                                <div ng-show="showConfirmCopyModal" ng-cloak="true">
                                    <section role="dialog" tabindex="-1" class="classicModal" style="margin-left: -20%; width: 40%; top: 35vh;">
                                        <div>
                                            <div class="classicModalContent">
                                                {{confirmMessage}}
                                            </div>
                                            <footer class="classicModalFooter">
                                                <a class="btn" ng-click="confirmCopy(true);">{!$Label.Yes}</a>
                                                <a class="btn" ng-click="showConfirmCopyModal = false;">{!$Label.No}</a>
                                            </footer>
                                        </div>
                                    </section>
                                    <div class="classicModalbackdrop"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </html>
    <c:HelpOverlays /> 
</apex:page>