<!--
* ReferenceEdge
*
* Point of Reference, Inc. - Copyright 2014 All rights reserved.
*
* @company : Point of Reference, Inc.
* @website : www.point-of-reference.com
*
* Disclaimer: THIS SOFTWARE IS PROVIDED "AS-IS" BY POINT OF REFERENCE ("POR"), 
* WITH NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY OF THE SOFTWARE, 
* EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES 
* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT. 
* POR SHALL NOT BE LIABLE FOR ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING,  
* MODIFYING OR DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES. POR IS NOT LIABLE FOR, 
* AND MAKES NO REPRESENTATIONS OR WARRANTIES REGARDING, THE ACTIONS OR OMISSIONS OF 
* ANY THIRD PARTIES (OR THE PRODUCTS OR SERVICES OFFERED BY ANY THIRD PARTIES) INCLUDING, he
* WITHOUT LIMIATION, SALESFORCE.COM. COPY, USE OR DISTRIBUTION PROHIBITED WITHOUT EXPRESS 
* WRITTEN CONSENT FROM COMPANY.
-->
<apex:page controller="RfSearchController" sidebar="false" id="pageId" tabStyle="Ref_Search__tab" docType="html-5.0" action="{!userMappingRecord}">     
    <!-- Message -->
    <apex:pageMessages id="pgmsgId"/>
    <apex:pageMessage summary="{!$Label.User_License}" strength="3" severity="Info" rendered="{!NOT(isFullLicenseAccessible)}" />
    
    <!-- Section Header-->
    <apex:sectionHeader title="{!IF(refMatch, $Label.Reference_Match, $Label.Reference_Search)}" rendered="{!isFullLicenseAccessible}"/>   
    
    <!-- Add POR_ModalLoader Component-->
    <c:POR_ModalLoader id="PORLoader" Info="{!IF(preFilter,'Applying Pre-filter...','')}"/>
    
    <!-- Add Style-->
    <apex:stylesheet value="{!URLFOR($Resource.JqueryFiles, 'jquery-ui-1.9.2.custom.min.css')}"/>
    <apex:includeScript value="{!URLFOR($Resource.BootstrapFiles,'bootstrap.js')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.Jplayer, 'Jplayer/css/jplayer.blue.monday.css')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Jplayer, 'Jplayer/js/jquery.jplayer.min.js')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.BootstrapFiles,'bootstrap.css')}"/>
    <script language="JavaScript" type="text/javascript" src="https://sadmin.brightcove.com/js/BrightcoveExperiences.js">
    </script>
    <style>
        .actionWidth{
        width: 80px;
        }
        table {
        border-collapse: none !important;
        border-spacing: 10 !important;
        }
        #accountTable th{
        background: #f2f3f3;
        border-width: 0 0 1px 1px;
        border-color: #e0e3e5;
        color: #000;
        font-size: .9em;
        font-weight: bold;
        padding: 10px 2px 10px 5px;
        border-bottom: 2px solid #ccc;
        white-space: nowrap;
        border: 1px solid #ededed;
        /*border-bottom: 2px solid #ccc;*/
        white-space: nowrap; 
        } 
        
        #accountTable, #contentTable, #contactTable{
        /*border: 1px solid #e0e3e5;*/
        background-color: #fff;
        width: 100%;
        border-bottom:none;
        border-top-color: #ffffff;
        }
        #accountTable th:nth-child(1) {
        text-align: center;
        }
        #accountTable td{
        padding: 4px 2px 4px 5px;
        color: #333;
        
        border-bottom: 1px solid #ededed;
        font-family: Arial,Helvetica,sans-serif;  
        }
        
        #accountTable tr:hover {
        background-color: #F8F8F8;
        border-color: #F8F8F8;
        }  
       
        #contentTable tr:hover {
        background-color: #F8F8F8;
        border-color: #F8F8F8;
        }
        
        #contactTable tr:hover {
        background-color: #F8F8F8;
        border-color: #F8F8F8;
        }
        
        
        #contentTable th {
        background: #ffffff;
        border-width: 0 0 1px 1px;
        border-color: #e0e3e5;
        color: #000;
        font-size: .9em;
        font-weight: bold;
        padding: 3px 2px 10px 6px;
        border-bottom: 1px solid #ededed;
        white-space: nowrap;
        /*border: 1px solid #ededed;
        border-bottom: 2px solid #ccc;*/
        white-space: nowrap;
        } 
        
        #contentTable th:nth-child(1) {
        text-align: center;
        width: 50px;
        }
        #contentTable td:nth-child(1) {
        text-align: center;
         width: 50px;
        }
        #contentTable th:nth-child(2) {
        width: 40px;
        text-align:center;
        }
        #contentTable th:nth-child(3) {
        width: 70px;
        text-align:center;
        }
        #contentTable th:nth-child(4) {
        width: 70px;
        text-align:center;
        }
        #contentTable th:nth-child(5) {
        width: 250px;
        text-align:left;
        }
        #contentTable td{
        font-family: Arial,Helvetica,sans-serif;
        padding: 4px 2px 4px 5px;
        color: #333;
        border-bottom: 1px solid #ededed;  
        }
        
        #contactTable th{ 
        background: #ffffff;
        border-width: 0 0 1px 1px;
        border-color: #e0e3e5;
        color: #000;
        font-size: .9em;
        font-weight: bold;
        padding: 12px 2px 13px 6px;
        border-bottom: 1px solid #ededed;
        white-space: nowrap;
        /*border: 1px solid #ededed;*/
        /* border-bottom: 2px solid #ccc;*/
        white-space: nowrap;
        text-align: center;
        }
        
        #contactTable th:nth-child(2) {
        text-align: left;
        }
        #contactTable th:nth-child(3) {
        text-align: left;
        }
        #contactTable th:nth-child(4) {
        text-align: center;
        }
        #contactTable td:nth-child(4) {
        text-align: center;
        }
        #contactTable th:nth-child(5) {
        text-align: left;
        }
        #contactTable td:nth-child(6) img {
        text-align: center; 
        clear: both;
        display: block;
        margin-left: auto;
        margin-right: auto;
        }
        #contactTable td:nth-child(7) img {
        width: 70px;
        clear: both;
        display: block;
        margin-left: auto;
        margin-right: auto;
        }
        #contactTable th:nth-child(8) {
        text-align: left;
        }
        
        #contactTable td{
        font-family: Arial,Helvetica,sans-serif;
        padding: 4px 2px 4px 5px;
        color: #333;
        border-bottom: 1px solid #ededed;
        }
        #accountTable td{
        font-family: Arial,Helvetica,sans-serif;
        padding: 4px 2px 4px 5px;
        color: #333;
        border-bottom: 1px solid #ededed;
        }
        .content-popup:after {
        content: "";
        display: table;
        clear: both;
        }
        
        .content-popup .img-container {
        display: inline-block;
        width: 50px;
        height: 50px; 
        float: left;
        margin-right: 10px;
        }
        
        .content-popup .title-container {
        display: inline-block;
        float: left;
        }
        
        .fields__container .lable-text {
        font-weight: bold;
        padding-top: 5px;
        font-size: 12px;
        line-height: 1.25;
        text-transform: uppercase;
        letter-spacing: .0625em;
        color: #54698d;
        }
        .content__description{
        clear:both;
        }
        .description__container {
        clear: both;
        }
        .description__container  .lable-text {    
        font-weight: bold;
        padding-top: 9px;
        font-size: 12px;
        line-height: 1.25;
        text-transform: uppercase;
        letter-spacing: .0625em;
        color: #54698d;
        }
        .left__column {
        float: left;
        width: 20%;
        }
        
        
        .value-summary {
        width: 245px;
        max-height:136px;
        overflow-y:auto;
        }
        
        .fields__container .value-text {}
        
        .fields__container {
        margin-bottom: 5px;
        margin-top: 5px;
        }
        
        .right__column {
        float: left;
        }
        
        /* border bottom 0 */
        #contactTable tr:last-child td {
        border-bottom: 0;
        }
        
        #accountTable tr:last-child td {
        border-bottom: 0;
        }
        
        #contentTable tr:last-child td {
        border-bottom: 0;
        }
        
        .bPageBlock .detailList tr td {
        border-bottom: 0;
        }
        
        
        /*Table css end*/
        a.boxclose{
        float: right;
        margin-top: -7px;
        cursor: pointer;
        color: #fff;
        border: 1px solid #AEAEAE;
        border-radius: 16px;
        background: #605F61;
        font-size: 23px;
        font-weight: bold;
        display: inline-block;
        line-height: 0px;
        padding: 10px 3px;     
        }
        .sfdc_richtext img{
        width:100px;
        height:100px;
        }
        .collapse {
        display: none;
        }
        .boxclose:before {
        content: "X";
        }
        .helpOrb{
        display:none;
        }
        
        //Start Bound 3 Req
        /*        jQuery(".ui-icon ui-icon-closethick").removeAttr(); */
        /*         .ui-widget-content{ */
        /*             border : none !important; */
        /*         } */
        /*         .ui-widget-header{ */
        /*             background : none !important; */
        /*             border : none !important; */
        /*             color : black !important; */
        /*         }  */
        
        .showButton {
        display : inline;
        }
        .hideButton {
        display : none;
        }
        
        .showButton {
        display : inline;
        -moz-border-bottom-colors: none;
        -moz-border-left-colors: none;
        -moz-border-right-colors: none;
        -moz-border-top-colors: none;
        
        background: url("/img/alohaSkin/btn_sprite.png") repeat-x scroll right top #E8E8E9;
        border-color: #B5B5B5 #B5B5B5 #7F7F7F;
        border-image: none;
        border-radius: 3px 3px 3px 3px;
        border-style: solid;
        border-width: 1px;
        color: #333333;
        font-size: 0.9em;
        font-weight: bold;
        font-family: Arial,Helvetica,sans-serif;
        margin: 1px;
        padding: 2px 3px !important; 
        }
        a{
        color: black ;
        text-decoration: underline;
        }
        body{
        font-size: 12px ;
        line-height: 1.1;
        }
        .btn{
        line-height: 1.128571429;
        }
        h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6 {
        font-family: Arial,Helvetica,sans-serif !important;
        font-weight:bold ;
        //line-height: 1.1;
        }  
        .pbHeader .pbTitle h2, .pbHeader .pbTitle h3 {
        margin: 6px;
        }
        
        <!-- Css Changes Starts hear- #943 --> 
        span#sAccountName, span#stagAccountName {
        font-size: 14px;
        font-weight: normal;
        color: #000000;
        font-weight: bold;
        overflow: hidden;
        width: 80%;
        display: inline-block;
        white-space: nowrap;
        text-overflow: ellipsis;
        } 
         span#sContent, span#stagAccountName {
        font-size: 14px;
        font-weight: normal;
        color: #000000;
        font-weight: bold;
        overflow: hidden;
        width: 99%;
        display: inline-block;
        white-space: nowrap;
        text-overflow: ellipsis;
        } 
        .my-popover input[type="button"] {
        background: none;
        border: none;
        font-size: 13px;
        font-weight: normal;
        position: absolute;
        right: 6px;
        top: 12px;
        color: #9facb1;
        }
        
        .my-popover .description-text {
        font-size: 14px;
        margin-top: 20px;
        padding-left: 5px;
        }
        .my-popover .description-text span{
        display: block; 
        margin-top:5px;
        font-family: Arial,Helvetica,sans-serif;
        letter-spacing: 0.0611em;
        color: #666666;
        max-height: 60px;
        overflow-y: auto;
        font-size: 12px;
        }
         .my-popover .description-text-all span{
        display: block; 
        margin-top:5px;
        font-family: Arial,Helvetica,sans-serif;
        letter-spacing: 0.0611em;
        color: #666666;
        max-height: 60px; 
        font-size: 12px;
        }
        
        .my-popover .description-text label {
        display: block;
        margin-top: 5px;
        font-family: Arial,Helvetica,sans-serif;
        letter-spacing: 0.0611em;
        color: #666666;
        max-height: 130px;
        overflow-y: auto;
        font-weight: 500;
        font-size: 12px;
        }
        .my-popover .description-text p{
        margin-top: 20px;
        margin-bottom: 0px;
        line-height: 1.25;
        text-transform: uppercase;
        letter-spacing: .0625em;
        color: #000000;
        max-height: 130px;
        font-family: Arial,Helvetica,sans-serif;
        font-weight: 600;
        font-size: 10.8px;
        }
        .my-popover .description-text i {
            margin-top: 20px;
            margin-bottom: 0px;
            line-height: 1.25; 
            letter-spacing: .0625em;
            color: #919498;
            max-height: 130px;
            font-family: Arial,Helvetica,sans-serif; 
            font-size: 10.8px;
            font-style: normal;
            font-weight: 500; 
        }
        
        .my-popover .description-text .summary-heading{
        margin-top: 25px;
        }
        body .bPageBlock .pbBody .data2Col {
        padding-top: 0px;
        padding-bottom: 0px;
        border-top: 0px solid #ffffff;
        background-color: #ffffff;
        }
        
        .dialogButtonClass{
        margin-left: 3px !important;
        margin-right: 3px !important;
        color: #333 !important;
        border: 1px solid #b5b5b5 !important;
        border-bottom-color: #7f7f7f !important;
        background: #e8e8e9 url('/img/alohaSkin/btn_sprite.png') repeat-x right top !important;
        font-weight: bold !important;
        font-size: .9em !important;
        -moz-border-radius: 3px !important;
        -webkit-border-radius: 3px !important;
        border-radius: 3px !important;
        padding: 4px 12px 4px 12px !important;
        //padding-bottom: 4px !important;
        font-family: Arial,Helvetica,sans-serif !important;
        }
        
        .ui-button-text-only .ui-button-text {
        padding: .2em 1em !important;
        }
        
        .lookupHoverDetail .userProfileHoverUserBlock .bPageBlock {
        box-sizing: content-box;
        }
        
        .lookupHoverDetail .accountBlock .bPageBlock {
        box-sizing: content-box;
        }
        
        #accountTable td:nth-child(5) img{
        clear: both;
        display: block;
        margin-left:auto;
        margin-right:auto;
        }
        img.alert-imgs:nth-child(2) {
        margin-top: 5px;
        }
        
        .apexp .bPageBlock.apexDefaultPageBlock .pbBody {
        margin: 0;
        }
         
        td.data2Col.first {
        padding: 0 !important;
        }
        body .bPageBlock .pbBody .data2Col {
        padding-top: 5px;
        padding-bottom: 0px;
        border-top: 0px solid #ffffff;
        background-color: #ffffff;
        }
        thead#accountTableHeader {
        }
        .bPageBlock .detailList .data2Col {
        padding-top: 2px;
        /* padding-right: 2px; */
        padding-bottom: 2px;
        padding-left: 0px !important;
        /* text-align: left; */
        width: 82%;
        }
        #accountTable th {
        background: #fff;
        border-right: 1px solid #fff;
        border-left: 1px solid #fff;
        text-align: center;
        border-top-color: #ffffff;
        }
        
        #accountTable td {
        /*border-left: 1px solid #fff;
        border-right: 1px solid #fff; */
        text-align: center;
        vertical-align: middle;
        }
        
        #accountTable th:nth-child(8) {
        text-align: left;
        }
        
        #accountTable td:nth-child(8) {
        text-align: left;
        }
        #accountTable td:nth-child(3) {
        text-align: left;
        }
        #accountTable th:nth-child(3) {
        text-align: left;
        }
        
        .apexp .detailList .list .headerRow th {
        /* border-bottom: 7px solid #ccc; */
        text-align: left;
        white-space: nowrap;
        background: #fff;
        border-right: 1px solid #fff;
        border-left: 1px solid #fff;
        padding-top: 10px;
        padding-bottom: 10px;
        }
        .apexp .detailList .list td, .apexp .detailList .list tr  {
        padding: 11px 12px 11px 5px;
        color: #333;
        
        } 
        
        body .pbBody table.list tr.dataRow.highlight td, body .pbBody table.list tr.dataRow.highlight th {
        background-color: #F8F8F8;
        border-color: #F8F8F8;
        }
        
        .my-popover {
        width: 350px;
/*         height: 287px;   */ 
        padding: 3px 16px 16px 16px;
        max-width: 350px;  
        box-shadow: none; 
        }
        .arrow_box {
        background: #f4f6f9;
        }
        .arrow_box:after {
        right: 100%;
        top: 34px;
        border: solid transparent;
        content: " ";
        height: 0;
        width: 0;
        position: absolute;
        pointer-events: none;
        border-color: rgba(244, 246, 249, 0);
        border-right-color: #f4f6f9;
        border-width: 15px;
        margin-top: -15px;
        }
        
        .arrow_box:before {
        right: 100%;
        top: 41px;
        border: solid #1797c0;
        content: " ";
        height: 0;
        width: 0;
        position: absolute;
        pointer-events: none;
        border-color: rgba(244, 246, 249, 0);
        border-right-color: #a7a0a0;
        border-width: 16px;
        margin-top: -23px;
        } 
        .arrow_box-left {
        
        background: #f4f6f9;
        
        } 
        .arrow_box-left:before {
        left: 100%;
        top: 34px;
        border: solid transparent;
        content: " ";
        height: 0;
        width: 0;
        position: absolute;
        pointer-events: none;
        border-color: rgba(244, 246, 249, 0);
        border-left-color: #a7a0a0;
        border-width: 16px;
        margin-top: -21px;
        } 
        .content-popover.arrow_box:before {
        z-index: -1;
        right: 99%;
        }

        .content-popover.arrow_box:after{
        right: 99%;
        z-index: 999999999;
        }
        
        .arrow_box-left:after {
        left: 100%;
        top: 29px;
        border: solid transparent;
        content: " ";
        height: 0;
        width: 0;
        position: absolute;
        pointer-events: none;
        border-color: rgba(244, 246, 249, 0);
        border-left-color: #f4f6f9;
        border-width: 15px;
        margin-top: -15px;
        }
        
        .ui-dialog .ui-dialog-content {
        position: relative;
        border: 0;
        padding: .5em 1em;
        background: none;
        overflow: auto;
        zoom: 1;
        padding-right: 2px;
        max-height: 260px;
        }
        
        .bPageBlock .detailList th, .bPageBlock .detailList td {
        vertical-align: middle;
        }
        
        .tag-popover {
        display: none;
        z-index: 1010; 
        border: 1px solid #cccccc;
        border-top-color: rgba(0, 0, 0, 0.2);
        border-top-style: solid;
        border-top-width: 1px;
        border-right-color: rgba(0, 0, 0, 0.2);
        border-right-style: solid;
        border-right-width: 1px;
        border-bottom-color: rgba(0, 0, 0, 0.2);
        border-bottom-style: solid;
        border-bottom-width: 1px;
        border-left-color: rgba(0, 0, 0, 0.2);
        border-left-style: solid;
        border-left-width: 1px;
        border-image-source: initial;
        border-image-slice: initial;
        border-image-width: initial;
        border-image-outset: initial;
        border-image-repeat: initial;
        border: 1px solid rgba(0, 0, 0, 0.2);
        border-top-color: rgba(0, 0, 0, 0.2);
        border-top-style: solid;
        border-top-width: 1px;
        border-right-color: rgba(0, 0, 0, 0.2);
        border-right-style: solid;
        border-right-width: 1px;
        border-bottom-color: rgba(0, 0, 0, 0.2);
        border-bottom-style: solid;
        border-bottom-width: 1px;
        border-left-color: rgba(0, 0, 0, 0.2);
        border-left-style: solid;
        border-left-width: 1px;
        border-image-source: initial;
        border-image-slice: initial;
        border-image-width: initial;
        border-image-outset: initial;
        border-image-repeat: initial;
        border-radius: 6px;
        border-top-left-radius: 6px;
        border-top-right-radius: 6px;
        border-bottom-right-radius: 6px;
        border-bottom-left-radius: 6px; 
        }
        
        .content-popover {
        display: none;
        z-index: 1010; 
        border: 1px solid #cccccc;
        border-top-color: rgba(0, 0, 0, 0.2);
        border-top-style: solid;
        border-top-width: 1px;
        border-right-color: rgba(0, 0, 0, 0.2);
        border-right-style: solid;
        border-right-width: 1px;
        border-bottom-color: rgba(0, 0, 0, 0.2);
        border-bottom-style: solid;
        border-bottom-width: 1px;
        border-left-color: rgba(0, 0, 0, 0.2);
        border-left-style: solid;
        border-left-width: 1px;
        border-image-source: initial;
        border-image-slice: initial;
        border-image-width: initial;
        border-image-outset: initial;
        border-image-repeat: initial;
        border: 1px solid rgba(0, 0, 0, 0.2);
        border-top-color: rgba(0, 0, 0, 0.2);
        border-top-style: solid;
        border-top-width: 1px;
        border-right-color: rgba(0, 0, 0, 0.2);
        border-right-style: solid;
        border-right-width: 1px;
        border-bottom-color: rgba(0, 0, 0, 0.2);
        border-bottom-style: solid;
        border-bottom-width: 1px;
        border-left-color: rgba(0, 0, 0, 0.2);
        border-left-style: solid;
        border-left-width: 1px;
        border-image-source: initial;
        border-image-slice: initial;
        border-image-width: initial;
        border-image-outset: initial;
        border-image-repeat: initial;
        border-radius: 6px;
        border-top-left-radius: 6px;
        border-top-right-radius: 6px;
        border-bottom-right-radius: 6px;
        border-bottom-left-radius: 6px; 
        }
        
        #accountContentTable td {
        font-family: Arial,Helvetica,sans-serif;
        padding: 4px 2px 4px 5px;
        color: #333;
        border-bottom: 1px solid #ededed;
        background: #F8F8F8;
        }
        #accountContentTable {
        min-width: 100% !important; 
        
        }
        #accountContentTable th { 
        font-family: Arial,Helvetica,sans-serif;
        background: #F8F8F8;
        border-width: 0 0 1px 1px;
        border-color: #e0e3e5;
        color: #000;
        font-size: .9em;
        font-weight: bold;
        padding: 5px 2px 4px 5px;
        border-bottom: 2px solid #ccc;
        white-space: nowrap;
        /* border: 1px solid #ededed; */
        border-bottom: 1px solid #ededed;
        /* border-top: 3px solid #04A7E3; */
        white-space: nowrap;
        } 
        
        .ui-dialog .ui-dialog-buttonpane {
        text-align: left;
        border-width: 1px 0 0 0;
        background-image: none;
        margin: 0px 0 0; 
        }
        .greenCircle {
            border-radius: 50%;
            width: 11px;
            height: 11px;
            margin-left: 31px !important;
            background: green !important;
            margin-top: 3px !important;
        }
        
        .redCircle {
            border-radius: 50%;
            width: 11px;
            height: 11px;
            margin-left: 31px !important;
            background: red !important;
            margin-top: 3px !important;
        }
        .ui-dialog-titlebar,.ui-widget-header {background-color:#79B4CD; display:block; border: 1px solid #79B4CD !important;}
        <!-- Css Changes Ends hear- #943 --> 

    .helpTraining {
        position: relative;
        border-radius: .25rem;
        width: 22rem;
        min-height: 2rem;
        z-index: 60;        
       // display: inline-block;              
        font-family: "Salesforce Sans", Arial, sans-serif;
        color: #706e6b;
        display : none;
    }
        
    .arrowHelpTraining {
        background: #f1f3f3;
    }
    .arrowHelpTraining:after {
    bottom: 100%;
    left: 90%;
    border: solid transparent;
    content: " ";
    height: 0;
    width: 0;
    position: absolute;
    pointer-events: none;
    border-color: rgba(244, 246, 249, 0);
    border-bottom-color: #f1f3f3;
    border-width: 11px;
    margin-left: -12px;
    margin-top: -53px;
    }    
    
    .header {
        padding: 1.65rem;
        padding-left: 2.5rem;
        padding-top: 2.5rem;
        font-size: 1.3rem;    
    }
    
    .tour {
        padding: 0.5rem; 
        border-radius: 0;
        font-size: 1.27rem;
        
    }
    .tour:hover{
      background-color : #E5F1EE;
        
    }
    
    .help {
        padding: 0.5rem; 
        border-radius: 0;
        font-size: 1.27rem;
        
    }
    .help:hover{
      background-color : #E5F1EE;
        
    }

    #helpmessageId{
        position: relative;
        top: -35px;
    }
    
    .ui-dialog {
        position: absolute;
        top: 0;
        left: 0;
        padding: 0;
        width: 300px;
        overflow: hidden;
    }

    .ui-dialog .ui-dialog-content {
        position: relative;
        border: 0;
        padding: 0;
        background: none;
        overflow: auto;
        zoom: 1;
        padding-right: 0;
        max-height: 260px;
        font-size:12px;
        font-family: Arial,Helvetica,sans-serif;
    }
    
    .ui-widget input,.ui-widget textarea {      
        font-family: Arial,sans-serif;      
        font-size: 12px;        
    }
    .ui-widget {
        font-family: Arial,sans-serif;
        font-size: 1.1em;
    }

    #accountContentTable {
        min-width: 100% !important;
    }
    .ui-dialog .ui-dialog-buttonpane .ui-dialog-buttonset { 
    float: right;
    margin-right: 3px;
    }
    .ui-dialog .ui-dialog-title {
        float: left;
        margin: .1em 16px .1em 0;
        font-size: 13.3px;
    }
    .ui-dialog .ui-dialog-titlebar {
        padding: 0.4em 1em;
        position: relative;
        margin-left: 2px;
        margin-right: 2px;
        margin-top: 2px;
    }
    #accountContentTable td {
        font-family: Arial,Helvetica,sans-serif;
        padding: 4px 2px 4px 5px;
        color: #333;
        border-bottom: 1px solid #ededed;
        background: #F8F8F8;
        font-size: 12px;
    }
    .ui-dialog .ui-dialog-content {
        position: relative;
        border: 0;
        /* padding: 0; */
        background: none;
        overflow: auto;
        zoom: 1;
        padding-right: 0;
        max-height: 260px;
        font-size: 12px;
        font-family: Arial,Helvetica,sans-serif;
    }
    .dialogButtonClass{
      margin-left: 3px !important;
      margin-right: 3px !important;
      color: #333 !important;
      border: 1px solid #b5b5b5 !important;
      border-bottom-color: #7f7f7f !important;
      background: #e8e8e9 url('/img/alohaSkin/btn_sprite.png') repeat-x right top !important;
      font-weight: bold !important;
      font-size: .9em !important;
      -moz-border-radius: 3px !important;
      -webkit-border-radius: 3px !important;
      border-radius: 3px !important;
      font-family : arial !important;
     }
     .ui-button-text-only .ui-button-text {
        padding: .2em 1em !important;
     }
     
     .ui-dialog .ui-dialog-buttonpane {
            text-align: left;
            border-width: 1px 0 0 0;
            /* background-image: none; */
            margin: .5em 0 0 0;
            padding: 0em 1em 0em .4em;
            background: #eeeeee;
        }
        
        .ui-widget {
            font-family: Arial;
            font-size: 1.1em;
        }
        
        .ui-dialog .ui-dialog-content {
            position: relative;
            border: 0;
            padding: .5em 1em;
            background: #f8f8f8;
            overflow: auto;
            zoom: 1;
            background: #f8f8f8;
        }
        .ui-widget-content {
            border: 1px solid #ddd0; 
            background: #eee url(images/ui-bg_highlight-soft_100_eeeeee_1x100.png) 50% top repeat-x;
            color: #333;
        }
        .ui-dialog {
            position: absolute;
            top: 0;
            left: 0;
            padding: 0em;
            width: 300px;
            overflow: hidden;
        }
        
        .ui-dialog .ui-dialog-buttonpane {
            text-align: left;
            border-width: 1px 0 0 0;
            /* background-image: none; */
            margin: .5em 0 0 0;
            padding: 0em 1em 0em .4em;
            background: #eeeeee;
            border-top: 1px solid #dddddd;
            margin-top: 0;
        }
        .ui-dialog .ui-dialog-buttonpane .ui-dialog-buttonset {
            float: right;
            margin-right: 3px;
            margin-top: 5px;
        }
        .ui-dialog {
            background: #f8f8f8 !important;
        }
        
        #contactTable th.text-left {
		    text-align: left;
		}
		#contactTable td.text-left {
		    text-align: left;
		}
		#contactTable th.text-center {
		    text-align: center;
		}
		#contactTable td.text-center {
		    text-align: center;
		}
        
		/* Start: Columns sequencing and alignment issues fixed */
		#accountTable thead th.selection-checkbox,
		#contactTable thead th.selection-checkbox {
			width: 50px;
		}
		
		#accountTable thead th.assign-hit-action,
		#contactTable thead th.assign-hit-action {
			width: 80px;
		}
		#accountTable thead th.acc-ref-content {
			width: 150px;
		}
		
		#accountTable thead th.col-notice,
		#contactTable thead th.col-notice {
			width: 130px;
		}
		
		#accountTable thead th.col-about,
		#contactTable thead th.col-about {
			width: 80px;
		}
		#accountTable thead th.col-tag,
		#contactTable thead th.col-tag {
			width: 80px;
		}
		#accountTable thead th.col-assigned-count,
		#contactTable thead th.col-assigned-count {
			width: 65px;
		}
		#accountTable thead th.col-hitlist-count,
		#contactTable thead th.col-hitlist-count {
			width: 52px;
		}
		#contactTable tbody td.col-notice img {
			width: unset;
		}
		/* End: Columns sequencing and alignment issues fixed */
    </style>
        
    <apex:outputPanel id="TestPannel">
        <script language="javascript" type="text/javascript">
            function getTags1(id, accName, refType, attribute, isShowRefType, isForContact) {  
                    
                if('{!rbiRecord.Id != null}' == 'true' && !isShowRefType) {   
                                
                    refType = '{!JSENCODE(rbiRecord.Referenceability__c)}';
                    attribute = '{!JSENCODE(rbiRecord.Attributes__c)}'
                    isShowRefType = true;
                    isForContact = {!isContactSec};

                    if(!isForContact) {
                        id = 'tag_{!rbiRecord.Account__c}';
                        accName = '{!JSENCODE(rbiRecord.Account__r.name)}';
                    } else {
                        id = 'tag_{!rbiRecord.Contact__c}';
                        accName = '{!JSENCODE(rbiRecord.Contact__r.name)}';
                    }                                   
                } else if(isShowRefType) {
                    
                    isShowRefType = false;
                    attribute = '{!JSENCODE(contentAttribute)}';
                    isForContact = false;
                    id = 'tag_{!recordId}_Content';
                    accName = '{!JSENCODE(contentTitle)}';
                }
                getTags(id, accName, refType, attribute, isShowRefType, isForContact);
            }
        </script>
    </apex:outputPanel>
    
    <!-- Add JavaScript & Jquery-->
    <script language="javascript" type="text/javascript">
        var lastRecordId = '';
        var lastClickedObj = '';
        var selectedContectIdsSet = [];
        var selectedAllContectIdsSet = [];
        var selectedLinkContectIdsSet = [];
        var refcontentId='';

        /*
        * This function will call when we click on Create Collection button
        * @param contentListSize
        * @param collectionName
        */
        function createCollectionCall(size,collectionName){
            var ids = '';
            
            if(selectedAllContectIdsSet.length > 0 ){
                ids = selectedAllContectIdsSet.join();
            }
            
            createCollectionCall2(ids,collectionName)
        }
        
        /*
        * Call Share content action when we click on Share Button
        * @param contentListSize
        */
        function shareContentCall(size){
            var ids = '';
            
            if(selectedAllContectIdsSet.length > 0 ){
                ids = selectedAllContectIdsSet.join();
            }
            
            shareContentSearchCall(ids);
            return false;
        }
        
        /*
        * Call this function when we click on Next Button in contact search block in refedge page
        */
        function contactSearchNext(){
            PORShowLoading();
            
            contactSearchNextAction();
        }
        
        /*
        * Call this function when we click on Prev Button in contact search block in refedge page
        */
        function contactSearchPrev(){
            PORShowLoading();
            
            contactSearchPrevAction();
        }
        
        function removeEmptyColumn(){
            var tables = ['accountTable','contactTable'];
            jQuery.each( tables, function( index, value ){
                jQuery('#'+value).each(function(a, tbl) {
                    jQuery(tbl).find('th').each(function(i) {
                        var remove = 0;
                        var currentTable = jQuery(this).parents('#'+value);
                        var headText = this.innerHTML.trim();
                        var tds = currentTable.find('tr td:nth-child(' + (i + 1) + ')');
                        tds.each(function(j) { if (this.innerHTML == '') remove++; });
                        
                        if (headText == '') {
                            jQuery(this).hide();
                            tds.hide();
                        }
                    });
                });
            });
        }
        //this fuinction will update selected content when we come back from invitation page to refsearch page
        function updateSelectedContent(selectedIds){
            if(typeof selectedIds != "undefined"){
                var selIds = selectedIds.trim();
                if(selIds != ''){
                    jQuery.each( selIds.split(","), function( i, val ) {
                        updateSelectedIdsContent(val,'',false);
                    });
                }
            }
        } 
        jQuery(".content img").css("background-image","none");
        jQuery(".content img").attr("src","{!URLFOR($Resource.RESearchFilterIcons, 'search-icon.png')}");
        PORShowLoading();
        jQuery(window).load(function() {
            //removeEmptyColumn();
            updateSelectedContent('{!JSENCODE(contentSearch.selectContentDocumentId)}');
            if({!isFullLicenseAccessible} || {!isFullLicenseAccessible} == true){
                if({!refMatch} || {!refMatch} == true){
                    //if(document.getElementById('pageId_formId_refMatchblockId_refMatchSectionId_specPbtRequest_0_ArstatusFieldId_ileinner') != null || document.getElementById('pageId_formId_refMatchblockId_refMatchSectionId_specPbtRequest_0_UrstatusFieldId_ileinner') != null){
                    PORHideLoading();
                    //}
                    //else{
                    //updateInlineEditingValue(true);
                    //}
                }
                else{
                    if({!preFilter} || {!preFilter} == true){
                        preFilterRecords();                        
                    }
                    else{
                        PORHideLoading();     
                        afterHideOverlayCall();
                    }
                }
            }
            else{
                PORHideLoading();
            }
            
            if({!len(opportunityId)}==0) {
                document.getElementById('backToOpp').style.display = "none";;
            }

            //  REF - 1228 
            //  To hide helpAndTraining option             
            if({!refMatch}) {
                jQuery("#helpmessageId").hide();
            }
    
        });
        function openSite(siteUrl){
            if(siteUrl != '' && siteUrl != null){
                if (siteUrl.indexOf("http://")>=0 || siteUrl.indexOf("https://") >=0){ 
                    window.open('','_blank').location.href = siteUrl;
                }
                else{
                    window.open('','_blank').location.href = 'http://'+siteUrl;
                }
            }
        }
        
        //this method is Use uncheck header checkbox.
        function deSelectAllChk(selectAllBlockId){
            var selectAllId = 'input:checkbox[id*='+ selectAllBlockId +']';
            jQuery(selectAllId).removeAttr('checked');  
        }
        var totalSelectedAccount = {!noOfSelectedAccount};
        //this method is Use to check & uncheck header checkbox.
        function enableDisable(cb, selectSingleBlockId, selectAllBlockId, limit ){
            var selectSingleId = 'input:checkbox[id*='+ selectSingleBlockId +']';
            var selectAllId = 'input:checkbox[id*='+ selectAllBlockId +']';
            
            if(selectSingleBlockId == 'selectSingleAccountId'){
                if(jQuery(cb).attr("checked")){
                    totalSelectedAccount+=1;
                    if(totalSelectedAccount > {!numberOfRequestAccounts}){
                        var msg = '{!$Label.Maximum_Account_No_Message_Part1}';
                        var infoMsg = msg.replace('@@@', '{!numberOfRequestAccounts}');
                        alert(infoMsg);
                        jQuery(cb).attr("checked", false);
                        var indexOfAccId = jQuery.inArray(jQuery(cb).parent().children().eq(1).html(), selectedAccIdsSet);
                        if (indexOfAccId >= 0) {
                            selectedAccIdsSet.splice(indexOfAccId, 1);
                        }
                        totalSelectedAccount-=1;
                        return false;
                    }
                }
                else if(!jQuery(cb).attr("checked")){
                    totalSelectedAccount-=1;
                }
                
            }
            if(!jQuery(cb).attr("checked")){
                
                jQuery(selectAllId).removeAttr('checked');
            }
            else{
                if(limit == '{!$Label.Limit_Reached}'){
                    alert('{!$Label.Limit_Reached_Message}');
                }
                if(jQuery(selectSingleId+":checked").length == jQuery(selectSingleId).length)
                    jQuery(selectAllId).attr('checked', 'checked');
                else
                    jQuery(selectAllId).removeAttr('checked');
            }
        }

        function textSearch(e) {
            let key = 0;

            if (window.event) {
                key = e.keyCode;
            } else if (e.which) {
                key = e.which;
            }

            if (key == 13) {
                e.preventDefault();
                doSearch();
            }
        }

        //this method call on click of search button
        function doSearch() {
            var ids = '';
            if (selectedAllContectIdsSet.length > 0 ) {
                ids = selectedAllContectIdsSet.join();
            }
            var searchText = jQuery('input:text[id*=inputTextId]').val();
            if (searchText.length == 1) {
                alert('{!$Label.Atleast_two_characters}');
                return false;
            } else {
                PORShowLoading();
                searchRecord(ids,searchText);
            }
        }
        var previouslyselectedaccount = false;
        var previouslyselectedcontent = false;
        //this method to check Account is selected or Not and also pass ids
        function validateSelection(size, pageBlockNo, selectSingleAccountId, edition){
            if('{!JSENCODE(minimumStageError)}' != ''){
                alert('{!JSENCODE(minimumStageError)}');
            }
            else{
                var ids2 = '';
                var hasChecked = isAccountSelected(size);
                var count = countAccount(size);
                
                if(count  > '{!numberOfRequestAccounts}'){
                    var msg = '{!$Label.Maximum_Account_No_Message_Part1}';
                    var infoMsg = msg.replace('@@@', '{!numberOfRequestAccounts}');
                    alert(infoMsg);
                    return false;
                }
                
                if((hasChecked == false && previouslyselectedaccount == false) && selectedAccIdsSet.length == 0){
                    alert('{!$Label.Select_Atleast_One_Account}');
                    return false;
                }
                
                PORShowLoading();
                
                if(selectedAccIdsSet.length > 0){
                    ids2 = selectedAccIdsSet.toString();
                }else{
                    ids2 = getAccountIds(size) ;
                }
                
                if(edition == '') {
                    moveToMixManaged(ids2);
                } else {
                    moveToSelfService(ids2);
                }
            }
            return false;
        }
        
        //this method call on mouse over on Image 
        var IE = document.all ? true : false;
        var tempX = 0;
        var tempY = 0;
        
        function showDiv(contentId, refconId, e, id) {   
            tempX = jQuery("#" + id).offset().left + 17;
            tempY = jQuery("#" + id).offset().top + 127 - globalHeaderHeight;
            refcontentId = refconId;
            PORShowLoading();
            fetchContentItem(contentId, refconId);
        }
        
        function openDiv(contentId, refconId, path, id) { 
            jQuery("#divContentPopupover").css({top: jQuery("#"+id).offset().top - 15 - globalHeaderHeight, left: jQuery("#"+id).offset().left + 28, position:'absolute'});
            jQuery(".content-popover").show(); 
        }   
        
        
        
        //this method call on mouse out on Image 
        function hideDiv() {
            document.getElementById('pageId:formId:dvContentDetails').style.display = 'none';
        }
        
        // Method to open Link
        function openLinkContent(contentUrl) {  
        
            if (contentUrl.indexOf("http://") >= 0 || contentUrl.indexOf("https://") >= 0) {
                window.open('','_blank').location.href = contentUrl;
            } else {
                window.open('','_blank').location.href = 'http://' + contentUrl;
            }
        }
        
        
        //Start Bound 3 Req 
        //this method to call when click on Continue without selecting Accounts Link
        function continueWitoutAccount(size, pageBlockNo, selectSingleAccountId){
            if('{!JSENCODE(minimumStageError)}' != ''){
                alert('{!JSENCODE(minimumStageError)}');
            }
            else{
                var hasChecked = isAccountSelected(size);
                
                if(hasChecked){
                    var ids2 = getAccountIds(size) ;
                    var count = countAccount(size);
                    
                    if(count  > '{!numberOfRequestAccounts}'){
                        var msg = '{!$Label.Maximum_Account_No_Message_Part1}';
                        var infoMsg = msg.replace('@@@', '{!numberOfRequestAccounts}');
                        
                        alert(infoMsg);
                        return false;
                    }
                    
                    jQuery( "#dialogBoxDiv" ).dialog({
                        width: '400px',
                        modal: true,
                        resizable: false,
                        draggable: false,
                        buttons: [
                            {
                                text: "{!$Label.Discard}",
                                "class": "dialogButtonClass",
                                click: function() {
                                    jQuery( this ).dialog( "close" );
                                    PORShowLoading();
                                    discardAccount();
                                }
                            },
                            {
                                text: "{!$Label.Keep}",
                                "class": "dialogButtonClass",
                                click: function() {
                                    jQuery( this ).dialog( "close" ); 
                                    PORShowLoading();
                                    keepAccount(ids2);
                                }
                            }
                        ]
                    });
                    jQuery(".ui-dialog-titlebar").hide();
                    jQuery(".ui-dialog-buttonpane").css("padding-bottom", "6px");
                    jQuery(".ui-dialog-content ui-widget-content").css("height", "auto");
                    
                    return false;
                }
                
                //If account is not selected
                PORShowLoading(); 
                discardAccount();
            }
            return false;
        } 
        var resource = '{!URLFOR($Resource.LightningCSS)}';
        // re #956
        jQuery("body").click(function(e){
            if(jQuery(e.target).attr("rel") != "popup-ui"){
                jQuery("#divPopupover").hide();
            }
            
            if(jQuery(e.target).attr("rel") != "tag-popup-ui"){
                jQuery("#divTagPopupover").hide();
            } 
            
            if(jQuery(e.target).attr("rel") != "content-popup-ui"){
                jQuery("#divContentPopupover").hide();
            }
            
            if (jQuery(e.target).attr("rel") != "helpTraining_popup") {
                jQuery(".helpTraining").hide();
            }
            
        });
        
        function openContent(id, url, type, isView) {
            
            if (type != 'LINK' || isView) {
                incrementRefContentViewCount(); 
                window.open('/' + id, '_blank');
            } else {
                incrementRefContentOpenCount(); 
                openLinkContent(url); 
            } 
        }
        
        function getUrl() {
            return 'assets/icons/doctype/pdf_60.png'; 
        }
        
        function getAboutAccount(id, accName, datelable, days, lastActDate, summery) {
            jQuery('.my-popover').css('max-height','287px');    
            var date = new Date(lastActDate);   
            jQuery("#sAccountName").text(parseResult(accName));  
            jQuery("#sLastDays").text('{!$Label.Last}'+' ' + datelable + ' '  + '{!$Label.days}' +': ' + days);
            
            if (summery.length > 0) {
                jQuery("#sSummary").text(summery);
                jQuery('#divSummary').css('display','block');
            } else { 
                jQuery("#sSummary").text('');
                jQuery('#divSummary').css('display','none');   
                jQuery('.my-popover').css('max-height','115px');    
                //jQuery("#divSummary").hide();
            }
            
            if (!(!lastActDate || 0 === lastActDate.length)) {
                jQuery("#sLastUsedDays").text('{!$Label.T_Last_Used}' + ': ' + (date.getMonth() + 1) + '/' + date.getDate() + '/' +  date.getFullYear());
            } else {
                jQuery("#sLastUsedDays").text('{!$Label.T_Last_Used}' + ': ');
            }        
            
            PopoverShowOrHide(true,id);
            return true;
        } 
        
        function loadReferenceContent(id, isAllow) {   
            
            if (isAllow != 0) {
                //showPopup();
                PORShowLoading();
                getAccountContents(id);
            }
            return true;
        } 
        
        function getTags(id, accName, refType, attribute, isShowRefType, isForContact) {             
            
            jQuery("#stagAccountName").text(parseResult(accName)); 
            jQuery("#sReferenceability").text(refType);
            jQuery("#sAttributes").text(attribute);
            
            if (!isShowRefType) {
                jQuery("#divRef").hide();
                jQuery('.my-popover').css('max-height','180px'); 
            } else {
                jQuery('.my-popover').css('max-height','255px');
                jQuery("#divRef").show();
            }
            PopoverTagShowOrHide(true,id,isForContact);
            return true;
        }
        
        function PopoverShowOrHide(action,id) {  
            
            if (action == true) {  
                jQuery("#divPopupover").css({top: jQuery("#"+id).offset().top - 24 - globalHeaderHeight, left: (jQuery("#"+id).offset().left - 375), position:'absolute'});
                jQuery(".popover").show();
            } else {
                jQuery(".popover").hide();
            } 
        }
        
        function PopoverTagShowOrHide(action,id, isForContact) {
            
            if (action == true) {    
                jQuery("#divTagPopupover").css({top: jQuery("#"+id).offset().top - 18 - globalHeaderHeight, left: jQuery("#"+id).offset().left-380, position:'absolute'});
                jQuery(".tag-popover").show();
            } else {
                jQuery("tag-popover").hide();
            } 
        }
        
        var contactBlockDisplayed = false;
        function checkUnspecSelected(reqId, accId, conId) {
            
            if (jQuery('input[id=radioID]:checked').size() > 0) {
                
                if (accId.trim() != '') {
                    PORShowLoading();
                    assignAccount(accId);
                } else if (conId.trim() != '') {
                    PORShowLoading();
                    assignContact(conId);
                } else {
                    
                    if (reqId.trim() != '' && reqId != oldRequestId) {
                        alert('{!$Label.Click_Selected_Request_Message}');
                        
                        if (contactBlockDisplayed) {
                            showContactBlock(true, false, accId, reqId);
                        } else {
                            showContactBlock(false, true, accId, reqId);
                        }
                    } else {
                        PORShowLoading();
                        showContactBlock(true, false, accId, reqId);
                    }
                }
            } else {
                alert('{!$Label.Select_Item_Message}');
                return false;
            }
        }
        var urSelected;
        function assignUnspecReqIdJS(reqId,cb,isUr){
            var chkCount=0;
            urSelected = isUr;
            jQuery('input[id=radioID]').each(function() {
                if(jQuery(this).is(':checked')) {
                    var id = "pageId:formId:refMatchblockId:refMatchSectionId:specPbtRequest:"+ chkCount +":radioPanelId";
                    var ele = document.getElementById(id) ;
                    setBackground(true, jQuery(ele), "#B0E1FA");
                } 
                else if (jQuery(this).is(':disabled')) {
                    var id = "pageId:formId:refMatchblockId:refMatchSectionId:specPbtRequest:"+ chkCount +":radioPanelId2";
                    var ele = document.getElementById(id) ;
                    setBackground(false, jQuery(ele), "#FFFFFF");
                }
                    else{
                        var id = "pageId:formId:refMatchblockId:refMatchSectionId:specPbtRequest:"+ chkCount +":radioPanelId";
                        var ele = document.getElementById(id) ;
                        setBackground(false, jQuery(ele), "#FFFFFF");
                    }
                chkCount = chkCount+1;
            });
            assignUnspecReqId(reqId);
        }
        function setBackground(CheckedOrUnchecked, ele, color) {
            if(CheckedOrUnchecked == true) {
                ele.closest('tr').css("background-color",color);
            }else {
                ele.closest('tr').css("background-color",color);
            }
        } 
        
        function setColorOnStatus(){
            
            var chkCount=0;
            jQuery('input[id=radioID]').each(function() {
                if (jQuery(this).is(':disabled')) {
                    if(jQuery(this).val() == newRequestId || jQuery(this).val() == oldRequestId){
                        var id = "pageId:formId:refMatchblockId:refMatchSectionId:specPbtRequest:"+ chkCount +":radioPanelId2";
                        var ele = document.getElementById(id) ;
                        setBackground(true, jQuery(ele), "#B0E1FA");
                    }
                }
                else {
                    if(jQuery(this).val() == newRequestId || jQuery(this).val() == oldRequestId){
                        var id = "pageId:formId:refMatchblockId:refMatchSectionId:specPbtRequest:"+ chkCount +":radioPanelId";
                        var ele = document.getElementById(id) ;
                        setBackground(false, jQuery(ele), "#B0E1FA");
                    }
                }
                chkCount = chkCount+1;
            });
        }
        
        jQuery(document).ready(function() {
            jQuery(window).load( function() {
                if({!isFullLicenseAccessible} || {!isFullLicenseAccessible} == true){
                    checkRadio();
                }
                
                //REF-1964
                if ('{!isRefHubMatch}' == 'true') {
                	preSelectHubContacts();
                }
            });
        });
        var isFromContact = false;
        
        function checkRadio() {
            var chkCount = 0;
            var isSizeOne = true;
            var checkedReqId = '';
            
            if ({!allActiveReq.size} > 1) {
                isSizeOne = false;
            } else {
                isSizeOne = true;
            }
            
            if (!isSizeOne) {
                var tempCount = 0;
                
                jQuery('input[id=radioID]').each(function() {
                    
                    if (jQuery(this).is(':disabled') == false) {
                        tempCount++;
                    }
                });
                
                if (tempCount == 1) {
                    isSizeOne = true;
                }
            }
            jQuery('input[id=radioID]').each(function() {
                
                if (jQuery(this).is(':disabled') == false) {
                    var id = "pageId:formId:refMatchblockId:refMatchSectionId:specPbtRequest:"
                    + chkCount + ":radioPanelId";
                    var ele = document.getElementById(id) ;
                    
                    if (jQuery(this).val() == oldRequestId || isSizeOne) {
                        jQuery(this).attr("checked", "checked");
                        setBackground(true, jQuery(ele), "#B0E1FA");
                        
                        if (isSizeOne && !isFromContact) {
                            checkedReqId = document.getElementById("pageId:formId:refMatchblockId:refMatchSectionId:specPbtRequest:"
                                                                + chkCount + ":selectsingleHiddenReq").value;
                        }
                    } else {
                        setBackground(true, jQuery(ele), "#FFFFFF");
                    }
                }
                chkCount = chkCount+1;
            });
            
            if (checkedReqId != '') {
                assignUnspecReqId(checkedReqId);
            }
            isFromContact = false;
        }
        
        function sendSelectedIdsAccount(size,showMoreLink,button){
            var ids2= getAccountIds(size);
            var count= countAccount(size);
            if(showMoreLink){
                callShowMoreLink(ids2,true,false,false);
            }
            else{
                ids2 = '';
                for(var i=0; i < selectedAccIdsSet.length; i++){
                    if(ids2 == '') {
                        ids2 = selectedAccIdsSet[i];
                    } else {
                        ids2 = ids2+','+selectedAccIdsSet[i];
                    }
                }
                if(button == 'previous'){
                    accountPrevious(ids2);
                }
                else if(button == 'next'){
                    
                    accountNext(ids2);
                }
            }
            return false;
        }
        
        function getAccountIds(size){
            var ids2 = "";
            for(var i=0; i < size; i++) {
                var id = ".selectSingleAccountId"+i; 
                var id2 = "#selectsingleHidden"+i;//+" > input:hidden"; 
                
                if(jQuery(id).is(':checked')) {
                    if(ids2 == '') {
                        ids2 = jQuery(id2).html();
                    } else {
                        ids2 = ids2+','+jQuery(id2).html();
                    }
                }
            }
            return ids2;
        }
        
        function getContentIds(size){
            var ids2 = "";
            for(var i=0; i < size; i++) {
                var id = '.selectSingleContentPbtId'+i;
                var id2 = "#selectRefContentIdHidden"+i;//+" > input:hidden";
                if(jQuery(id).is(':checked')) {
                    if(ids2 == '') {
                        ids2 = jQuery(id2).html();
                    } else {
                        ids2 = ids2+','+jQuery(id2).html();
                    }
                }
            }
            return ids2;
        }
        
        function isContentSelected(size){
            var hasChecked = false;
            for(var i=0; i < size; i++) {
                var id = '.selectSingleContentPbtId'+i;
                
                if(jQuery(id).is(':checked')) {
                    hasChecked = true;
                    break ;  
                }
            }
            return hasChecked;
        }
        
        function isAccountSelected(size){
            var hasChecked = false;
            for(var i=0; i < size; i++) {
                var id = ".selectSingleAccountId"+i; 
                if(jQuery(id).is(':checked')) {
                    hasChecked = true;
                    break ;  
                }
            }            
            return hasChecked;
        }
        
        function countAccount(size){
            var count = 0;
            for(var i=0; i < size; i++) {
                var id = ".selectSingleAccountId"+i; 
                if(jQuery(id).is(':checked')) {
                    count++; 
                }
            }            
            return count;
        }
        
        function countContent(size){
            var count = 0;
            for(var i=0; i < size; i++) {
                var id = ".selectSingleContentPbtId"+i;                
                if(jQuery(id).is(':checked')) {
                    count++; 
                }
            }            
            return count;
        }
        
        //to parse any string
        function parseResult(result) { 
            if (result != null) {
                result = result.replace(/&quot/gi, '"'); 
                result = result.replace(/&#39/g, '\''); 
                return result;
            }
        } 
        
        //to parse any string
        function deParseResult(result) { 
            if (result != null) {
                result = result.replace('"',/&quot/gi); 
                result = result.replace('\'',/&#39/g); 
                return result;
            }
        } 
        
        function sendSelectedIdsContent(size,showMoreLink,button){ 
            var ids2 = getContentIds(size);
            var count = countContent(size);  
            
            if (showMoreLink) {  
                callShowMoreLinkForContent(ids2,false,false,true,ids2);
            } else {
                ids2 = '';   
                
                for (var i=0; i < selectedAllContectIdsSet.length; i++) {
                    if (ids2 == '') {
                        ids2 = selectedAllContectIdsSet[i];
                    } else {
                        ids2 = ids2+','+selectedAllContectIdsSet[i];
                    }
                }
                
                if (button == 'previous') {
                    contentPrevious(ids2,ids2); 
                } else if (button == 'next') {
                    contentNext(ids2,ids2);
                }
            }
            return false;
        }
        var process = '';
        var isUrRequest = false; 
        
        function enabletoUpdateJS(reqId,clickedObj,statusClicked,isUr){
            document.getElementById('pageId:formId:refMatchblockId:refMatchSectionId:saveButton').className = 'showButton';
            document.getElementById('pageId:formId:refMatchblockId:refMatchSectionId:cancelButton').className = 'showButton';
            isUrRequest = isUr;
            var singleChange = true;
            var Id = '';
            jQuery('.inlineEditUndo').each(function() {
                if(jQuery(this).parent().parent().css('display') != 'none'){
                    id = jQuery(this).parent().parent().attr('id');
                    if(id.indexOf("specPbtRequest") > -1){
                        singleChange = false;
                    }
                }
            });
            if(singleChange == false && previousRequestId != '' && previousRequestId != reqId){
                jQuery( "#dialogBoxDivNew" ).dialog({
                    width: '400px',
                    modal: true,
                    resizable: false,
                    draggable: false,
                    buttons: [{
                        text: "{!$Label.Ok}",
                        "class": "dialogButtonClass",
                        click: function() {
                            jQuery( this ).dialog( "close" );
                            return false;
                        }
                    }]
                });
            }
            else{
                previousRequestId = reqId;
                if(!statusClicked){
                    lastClickedObj = clickedObj;
                    lastRecordId = reqId;
                }
                enabletoUpdate(reqId);
            }
        }
        
        var previousRequestId = '';
        
        function checkProcess(){
            var chkCount=0;
            var flag = false;
            var breakloop = false;
            var statusValue = '';
            var changedEntity = '';
            if(lastClickedObj != ''){
                var newId = lastClickedObj.id;
                var find = ':';
                var re = new RegExp(find, 'g');
                var newId1 = newId.replace(re, '_');
                if(newId1.search('inlineEditStatusId') != -1){
                    if(isUrRequest)
                        var newId1 = newId1.replace('inlineEditStatusId','UrstatusFieldId');
                    else
                        var newId1 = newId1.replace('inlineEditStatusId','ArstatusFieldId');
                    var e = document.getElementById(newId1);
                    statusValue = e.options[e.selectedIndex].value;
                    changedEntity = 'status';
                }
                if(newId1.search('processId') != -1){
                    var newId1 = newId1.replace('processId','inlineProcessId');
                    var e = document.getElementById(newId1);
                    statusValue = e.options[e.selectedIndex].value;
                    changedEntity = 'process';
                }
                getAccReqDetails(lastRecordId,statusValue,changedEntity);
            }
            else{
                lastRecordId = previousRequestId;
                getAccReqDetails(lastRecordId,'','');
            }
            /*jQuery('input[id=radioID]').each(function() {
                    if(!breakloop){
                        if (jQuery(this).is(':disabled') == false) {
                            if(rep2repIds.indexOf(jQuery(this).val()) != -1){
                                var id = '';
                                if({!isInlineEditingDisabled}){
                                    id = "pageId:formId:refMatchblockId:refMatchSectionId:specPbtRequest:"+ chkCount +":inlineProcessIdEdit";
                                    if(document.getElementById(id) != null){
                                        if(document.getElementById(id).value.indexOf('Managed') != -1){
                                            var r=confirm('{!$Label.Change_Request_Type_Message}')
                                            breakloop = true;
                                            if (r==true){
                                                flag = false;
                                                return;
                                            }
                                            else {
                                                flag = true;
                                                return;
                                            }
                                        }
                                    }
                                }
                                else{
                                    id = "pageId_formId_refMatchblockId_refMatchSectionId_specPbtRequest_"+ chkCount +"_inlineProcessId_ileinner";
                                    if(document.getElementById(id) != null){
                                        if(document.getElementById(id).innerHTML.indexOf('Managed') != -1){
                                            var r=confirm('{!$Label.Change_Request_Type_Message}')
                                            breakloop = true;
                                            if (r==true){
                                                flag = false;
                                                return;
                                            }
                                            else {
                                                flag = true;
                                                return;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    chkCount = chkCount+1;
                });
                
                if( ! flag){
                    saveAllReq(lastRecordId,statusValue,changedEntity);
                    return false;
                
                }
                else {
                    PORShowLoading();
                    cancelAllReq();
                    return false;
                }
                */
                
            }
        
        function getReqInfoDetailsEdit(RecordId,isUr){
            
            isUrRequest = isUr;
            lastRecordId = RecordId;
            getAccReqDetails(lastRecordId,'','');
        }
        
        /*hit list*/
        function checkForRadioSelected(isAccount,isContact,accId,conId,isAlreadyHit){
            if(!isAlreadyHit){
                PORShowLoading();
                createHitRecord(isAccount,isContact,accId,conId);
            }
            else{
                return false;
            }
        }
        
        function showHideTab(Id){
            
            if(Id == 'filterBasicId'){
                document.getElementById('filterBasicId').style.display = 'block';
                document.getElementById('filterOrderId').style.display = 'none';
            }
            if(Id == 'filterOrderId'){
                document.getElementById('filterBasicId').style.display = 'none';
                document.getElementById('filterOrderId').style.display = 'block';
            }
        }
        
        //Change for R14.87
        function contentSwitch(val){
            var ids = '';
            
            if(selectedAllContectIdsSet.length > 0 ){
                ids = selectedAllContectIdsSet.join();
            }
            var value = jQuery(val).attr("id");
            PORShowLoading();
            var isContentShowMore = (jQuery("input[id*='contentSharingFlag']").val() == "false")?false:true;
            if (value == 'radio-yes') {
                removeClass();
                jQuery(".radio-wrapper").css("background", 'red');
                if(isContentShowMore){
                    callShowMoreShareableSwitch(ids,true,'true');
                }else{
                    searchRfContents('true',ids);
                }
            } else if (value == 'radio-neutral') {
                addNeutralClass();
                if(isContentShowMore){
                    callShowMoreShareableSwitch(ids,true,null);
                }else{
                    searchRfContents(null,ids);
                }
            } else if (value == 'radio-no') {
                removeClass();
                jQuery(".radio-wrapper").css("background", 'green');
                if(isContentShowMore){
                    callShowMoreShareableSwitch(ids,true,'false');
                }else{
                    searchRfContents('false',ids);
                }
            }
        }
        
        function removeClass(){
            jQuery("#yesLabel").removeClass("neutralYesLabel");
            jQuery("#noLabel").removeClass("neutralNoLabel");
        }
        
        function addNeutralClass(){
            jQuery(".radio-wrapper").css("background", 'green');
            jQuery("#yesLabel").addClass("neutralYesLabel");
            jQuery("#noLabel").addClass("neutralNoLabel");
        }
        
        function onCompleteHandler(){
            //PORHideLoading();
            var state = jQuery("input[id*='cSharingFlag']").val();
            jQuery("div:visible[id*='contentPbId']").find('.pbTitle').attr('style', 'width: 12% !important');
            jQuery("div:visible[id*='contentPbId']").find('input:radio[name="event"]').attr('style', 'display:none');
            var searchContentSize = jQuery("input[id*='contntSizeFlag']").val();
            
            if (state == "true") {
                removeClass();
                jQuery(".radio-wrapper").css("background", 'red');
                jQuery('input:radio[name="event"]').prop('checked', false);
                jQuery("#radio-yes").attr('checked', true);
            } else if (state == "") {
                addNeutralClass();
                jQuery('input:radio[name="event"]').prop('checked', false);
                jQuery("#radio-neutral").attr('checked', true);
            } else if (state == "false") {
                removeClass();
                jQuery(".radio-wrapper").css("background", 'green');
                jQuery('input:radio[name="event"]').prop('checked', false);
                jQuery("#radio-no").attr('checked', true);
            }
        }
        
        var selectedAccIdsSet = [];
        <apex:repeat value="{!accounts}" var="accWrap">
            
            if ({!accWrap.isSelected} && jQuery.inArray('{!accWrap.acc.Account__c}', selectedAccIdsSet) == -1) {
                selectedAccIdsSet.push('{!accWrap.acc.Account__c}');
            }
        </apex:repeat>
        function updateSelectedIdsSet(accId) {
            accId = accId.trim();
            var indexOfAccId = jQuery.inArray(accId, selectedAccIdsSet);
            
            if (indexOfAccId == -1) {
                selectedAccIdsSet.push(accId);
            } else {
                selectedAccIdsSet.splice(indexOfAccId, 1);
            }
        }
        
        /**
            * This function will use to create selected content Id Set
            * @param contentId
            * @param fileType
            * @param checkBox value(true/false)
            */
        function updateSelectedIdsContent(contentId,fileType,value) {
            
            if(fileType == 'LINK'){
                var indexOfLinkContentId = jQuery.inArray(contentId, selectedLinkContectIdsSet);
                if (indexOfLinkContentId == -1) {
                    selectedLinkContectIdsSet.push(contentId);
                }
                if(value == false && indexOfLinkContentId >= 0) {
                    selectedLinkContectIdsSet.splice(indexOfLinkContentId, 1);
                }
            } else {
                var indexOfContentId = jQuery.inArray(contentId, selectedContectIdsSet);
                if (indexOfContentId == -1) {
                    selectedContectIdsSet.push(contentId);
                } 
                if(value == false && indexOfContentId >= 0) {
                    selectedContectIdsSet.splice(indexOfContentId, 1);
                }
            }
            var indexOfAllContentId = jQuery.inArray(contentId, selectedAllContectIdsSet);
            if (indexOfAllContentId == -1) {
                selectedAllContectIdsSet.push(contentId);
            } 
            if(value == false && indexOfAllContentId >= 0) {
                selectedAllContectIdsSet.splice(indexOfAllContentId, 1);
            }  
        }
    </script>
    <!-- REF-1964 -->
    <apex:outputPanel id="scriptHubPanel">
        <script  language="javascript" type="text/javascript">
        
        function saveSelectedContacts() {
            var selectedAdvocates = JSON.parse(localStorage.getItem("selectedAdvocates"));
            PORShowLoading();
            rediretToRequestPage();
        }
        
        function preSelectHubContacts() {
            
            //REF-2304
            if ('{!isRefHubMatch}' == 'true') {
                var selectedAdvocates = JSON.parse(localStorage.getItem("selectedAdvocates"));
                PORShowLoading();
                preSelectContacts(selectedAdvocates);
            } else {
                PORHideLoading();
            }
        }

        //REF-2304
        function onSelectAllContacts() {
            var selectedAdvocates = JSON.parse(localStorage.getItem("selectedAdvocates"));
            var contactsList = '{!selectedContactIds}';
            contactsList =  contactsList.substring(1, (contactsList.length - 1));
            contactsList =  contactsList.replace(/ /g, '');
            var contactsToRemove = '{!contactIdsToRemove}';
            contactsToRemove =  contactsToRemove.substring(1, (contactsToRemove.length - 1));
            contactsToRemove =  contactsToRemove.replace(/ /g, '');
            
            var temSelectedAdvocatesList, tempContactsList, tempContactsToRemoveList;
            
            if (selectedAdvocates === "") {
                temSelectedAdvocatesList = [];
            } else if (selectedAdvocates.includes(',')) {
                temSelectedAdvocatesList = selectedAdvocates.split(',');
            } else {
                temSelectedAdvocatesList = [];
                temSelectedAdvocatesList.push(selectedAdvocates);
            }
            
            if (contactsList.includes(',')) {
                tempContactsList = contactsList.split(',');
            } else {
                tempContactsList = [];
                tempContactsList.push(contactsList);
            }
            
            if (contactsToRemove.includes(',')) {
                tempContactsToRemoveList = contactsToRemove.split(',');
            } else {
                tempContactsToRemoveList = [];
                tempContactsToRemoveList.push(contactsToRemove);
            }
            
            if (tempContactsList.length > 0) {
                
                for (var i = tempContactsList.length - 1; i >= 0; i--) {
                    
                    if (!temSelectedAdvocatesList.includes(tempContactsList[i]) && tempContactsList[i] != "") {
                        temSelectedAdvocatesList.push(tempContactsList[i]);
                    }
                }
            }
            
            if (tempContactsToRemoveList.length > 0) {
                
                for (var i = tempContactsToRemoveList.length - 1; i >= 0; i--) {
                    
                    if (temSelectedAdvocatesList.includes(tempContactsToRemoveList[i])) {
                        temSelectedAdvocatesList.splice(temSelectedAdvocatesList.indexOf(tempContactsToRemoveList[i]),1);
                    }
                }
            }
            
            if (temSelectedAdvocatesList.length > 0) {
                localStorage.setItem("selectedAdvocates", JSON.stringify(temSelectedAdvocatesList.join(',')));
            } else {
                localStorage.setItem("selectedAdvocates", JSON.stringify(''));
            }
        }
        
        function onSingleContactSelect(contactId) {
            var selectedAdvocates = JSON.parse(localStorage.getItem("selectedAdvocates"));
            var temSelectedAdvocatesList;
            
            if (selectedAdvocates === "") {
                temSelectedAdvocatesList = [];
            } else if (selectedAdvocates.includes(',')) {
                temSelectedAdvocatesList = selectedAdvocates.split(',');
            } else {
                temSelectedAdvocatesList = [];
                temSelectedAdvocatesList.push(selectedAdvocates);
            }
            
            if (!temSelectedAdvocatesList.includes(contactId)) {
                temSelectedAdvocatesList.push(contactId);
            } else {
                temSelectedAdvocatesList.splice(temSelectedAdvocatesList.indexOf(contactId),1);
            }
            
            if (temSelectedAdvocatesList.length > 0) {
                localStorage.setItem("selectedAdvocates", JSON.stringify(temSelectedAdvocatesList.join(',')));
            } else {
                localStorage.setItem("selectedAdvocates", JSON.stringify(''));
            }
            selectSingleContact(contactId);
        }
        </script>
    </apex:outputPanel>

    <apex:outputPanel id="scriptPanel">
        <script language="javascript" type="text/javascript">
            //this method is Use to check & uncheck all checkbox with header checkbox.
            function selectAllChk(cb, selectSingleBlockId, size, noticeId, isAccRefContent) {  
                var selectSingleId = 'input:checkbox[id*='+ selectSingleBlockId +']';
                var tempCount= 0;
                var selectedIds = 0;
                
                if (jQuery(cb).attr("checked")) {  
                
                    if (selectSingleBlockId == 'selectSingleContentPbtId') {
                        jQuery(selectSingleId).each(function() {
                            
                            if (jQuery(this).attr('disabled') != 'disabled') {
                                jQuery(this).attr('checked', 'checked');
                                selectedIds++;  
                            }
                        });
                    } else if (selectSingleBlockId == 'selectSingleRefContentPbtId') { 
                    
                        jQuery(selectSingleId).each(function() {  
                            
                            if (jQuery(this).attr('disabled') != 'disabled') {
                                jQuery(this).attr('checked', 'checked');
                                selectedIds++; 
                            }
                        }); 
                    } else {
                        
                        if (size > {!numberOfRequestAccounts} || totalSelectedAccount >= {!numberOfRequestAccounts}) {
                            var msg = '{!$Label.Maximum_Account_No_Message_Part1}';
                            var infoMsg = msg.replace('@@@', '{!numberOfRequestAccounts}');
                            alert(infoMsg);
                            jQuery(cb).attr("checked", false);
                            return false;
                        } else {
                            
                            for (var i = 0; i < size; i++) {
                                var id = ".selectSingleAccountId" + i; 
                                
                                if (jQuery(id).is(':checked')) {
                                    tempCount += 1;
                                }
                            }
                            var tempCount = totalSelectedAccount + (parseInt(size) - tempCount);
                            
                            if (tempCount > {!numberOfRequestAccounts}) {
                                var msg = '{!$Label.Maximum_Account_No_Message_Part1}';
                                var infoMsg = msg.replace('@@@', '{!numberOfRequestAccounts}');
                                alert(infoMsg);
                                jQuery(cb).attr("checked", false);
                                return false;
                            } else {
                                jQuery(selectSingleId).attr('checked', 'checked');
                                
                                for (var i = 0; i < size; i++) {
                                    var id = ".selectSingleAccountId" + i; 
                                    var id2 = "#selectsingleHidden" + i; 
                                    
                                    if (jQuery(id).is(':checked')) {
                                        updateSelectedIdsSet(jQuery(id2).html());
                                    }
                                }
                                totalSelectedAccount = tempCount;
                            }
                        }
                    }
                    
                    if (size > 0 && selectSingleBlockId != 'selectSingleContentPbtId' && selectSingleBlockId != 'selectSingleRefContentPbtId') {
                        var isAnyAccountLimitReached = false;
                        
                        <apex:repeat value="{!accounts}" var="accWrap">
                            
                            if (({!accWrap.acc.Is_Contact_Limit_Reached__c} && !{!accWrap.acc.Account_Level_RUL__c})
                                    || ({!accWrap.acc.RUL_Limit_Reached__c} && {!accWrap.acc.Account_Level_RUL__c})) {
                                isAnyAccountLimitReached = true;
                            }
                        </apex:repeat>

                        if (isAnyAccountLimitReached) {
                            alert('{!$Label.Limit_Reached_Message}');
                        }
                    }
                } else {      
                    
                    if (selectSingleBlockId != 'selectSingleContentPbtId' && selectSingleBlockId != 'selectSingleRefContentPbtId') {
                        
                        if (totalSelectedAccount >= size) {
                            
                            for(var i = 0; i < size; i++) {
                                totalSelectedAccount -= 1;
                                var id = ".selectSingleAccountId" + i; 
                                var id2 = "#selectsingleHidden" + i; 
                                
                                if (jQuery(id).is(':checked')) { 
                                    updateSelectedIdsSet(jQuery(id2).html());
                                }
                            }
                        } else {
                            totalSelectedAccount = 0;
                        }
                    } else {
                    
                        for (var i = 0; i < size; i++) {
                            var id = '' ;
                            var contentCheckBox = '';
                            var contentTypeId = '';
                            
                            if (isAccRefContent) { 
                                id = "#selectAccRefContentIdHidden"+i;
                                contentCheckBox = '.selectSingleRefContentPbtId' + i;
                                contentTypeId = '.fileRefTypeHiddenId' + i + " > input:hidden";
                            } else {
                                id = "#selectRefContentIdHidden" + i;
                                contentCheckBox = '.selectSingleContentPbtId' + i;
                                contentTypeId = '.fileTypeHiddenId' + i + " > input:hidden";
                            } 
                            var tmp = jQuery(id).html();  
                            var indexOfAllContentId = jQuery.inArray(tmp, selectedAllContectIdsSet);
                            var contentType = jQuery(contentTypeId).val();
                        
                            if (indexOfAllContentId >= 0) { 
                                updateSelectedIdsContent(tmp, contentType, false);
                            }
                        }
                    }
                    jQuery(selectSingleId).removeAttr('checked');
                }
                
                // on select all add id to idSetArray 
                if (selectedIds > 0) {
                    
                    for (var i = 0; i < size; i++) { 
                        var id ;
                        var contentCheckBox ;
                        var contentTypeId ;
                        
                        if (isAccRefContent) { 
                            id = "#selectAccRefContentIdHidden" + i;
                            contentCheckBox = '.selectSingleRefContentPbtId' + i;
                            contentTypeId = '.fileRefTypeHiddenId' + i + " > input:hidden";
                        } else { 
                            id = "#selectRefContentIdHidden" + i;
                            contentCheckBox = '.selectSingleContentPbtId' + i;
                            contentTypeId = '.fileTypeHiddenId' + i + " > input:hidden";
                        }
                    
                        if (jQuery(contentCheckBox).is(':checked')) { 
                            var tmp = jQuery(id).html();
                            var indexOfAllContentId = jQuery.inArray(tmp, selectedAllContectIdsSet);
                            var contentType = jQuery(contentTypeId).val();
                            
                            if (indexOfAllContentId == -1) { 
                                updateSelectedIdsContent(tmp, contentType, true);
                            }
                        }
                    }
                }
            }
        </script>
    </apex:outputPanel>
    
    <apex:outputPanel id="exportScriptPanel">
        <script>
            var allAccountIds = '{!accountSearch.allAccountIds}';
            var allContactIds = '{!contactSearch.allContactIds}';
            var allContentIds = '{!contentSearch.allContentIds}';
            var exportObjectName = '{!exportObjectName}';
            
            function getDataToExport(exportObjName) {
                PORShowLoading();
                getSearchResults(exportObjName);
                return false;
            }
            
            function sendDataToExport() {
                var form = document.createElement('form');
                form.setAttribute('method', 'POST');
                form.setAttribute('action', '{!URLFOR($Page.ExportPage)}');
                form.setAttribute('target', '_self');
                var hiddenField = document.createElement('input');
                hiddenField.setAttribute('type', 'hidden');
                
                if (exportObjectName.indexOf('Account') != -1) {
                    var idsArray = allAccountIds.replace('[', '').replace(']', '').split(', ');
                    hiddenField.setAttribute('name', 'allAccountIds');
                    hiddenField.setAttribute('value', idsArray.join(','));
                } else if (exportObjectName.indexOf('Contact') != -1) {
                    var idsArray = allContactIds.replace('[', '').replace(']', '').split(', ');
                    hiddenField.setAttribute('name', 'allContactIds');
                    hiddenField.setAttribute('value', idsArray.join(','));
                } else if (exportObjectName.indexOf('Content') != -1) {
                    var idsArray = allContentIds.replace('[', '').replace(']', '').split(', ');
                    hiddenField.setAttribute('name', 'allContentIds');
                    hiddenField.setAttribute('value', idsArray.join(','));
                }
                form.appendChild(hiddenField);
                var hiddenField1 = document.createElement('input');
                hiddenField1.setAttribute('type', 'hidden');
                hiddenField1.setAttribute('name', 'exportObjectName');
                hiddenField1.setAttribute('value', exportObjectName);
                form.appendChild(hiddenField1);

                if ({!preFilterForRedirection}) {
                    var hiddenField2 = document.createElement('input');
                    hiddenField2.setAttribute('type', 'hidden');
                    hiddenField2.setAttribute('name', 'opportunityId');
                    hiddenField2.setAttribute('value', '{!opportunityId}');
                    form.appendChild(hiddenField2);
                    var hiddenField2_1 = document.createElement('input');
                    hiddenField2_1.setAttribute('type', 'hidden');
                    hiddenField2_1.setAttribute('name', 'leadId');
                    hiddenField2_1.setAttribute('value', '{!leadId}');
                    form.appendChild(hiddenField2_1);
                    var hiddenField3 = document.createElement('input');
                    hiddenField3.setAttribute('type', 'hidden');
                    hiddenField3.setAttribute('name', 'forAccount');
                    hiddenField3.setAttribute('value', '{!forAccount}');
                    form.appendChild(hiddenField3);
                    var hiddenField4 = document.createElement('input');
                    hiddenField4.setAttribute('type', 'hidden');
                    hiddenField4.setAttribute('name', 'forContent');
                    hiddenField4.setAttribute('value', '{!forContent}');
                    form.appendChild(hiddenField4);
                    var hiddenField5 = document.createElement('input');
                    hiddenField5.setAttribute('type', 'hidden');
                    hiddenField5.setAttribute('name', 'isSLDS');
                    hiddenField5.setAttribute('value', 'false');
                    form.appendChild(hiddenField5);
                }
                document.body.appendChild(form);
                form.submit();
            }

            /*  
            REF - 1288
            objective : To show HelpOverlays
            modified By : Rajneesh 14 mar 2018
            */            
            var counter = 0;
            var gettingMoreInfo = true;
            var viewMoreResult = true;
            var makingSelection = true;
            var selectContinue = true;
            var understandAlert = true;
            var helpInClick = true;
            var sharebtn = true;
            var totlstps = 0;
            var msg = '';
            var header = '';
            var content = '';
            var addcls = '';
            var removcls = '';
            var loc = '';
            var frmTop = '';
            var frmLft = '';
            var searchContentSize = 0;
            var searchAccountSize = 0;
            var helpAssistant = '{!JSENCODE(helpAssistant)}';
            
            //  REF-1532
            var globalHeaderHeight = 0
            
            if (jQuery('.globalHeaderBar')[0]) {
                globalHeaderHeight = jQuery("#AppBodyHeader").height() + jQuery("#globalHeaderBar").height();
            } else {            
                globalHeaderHeight = jQuery("#AppBodyHeader").height();
            }

            function ShowOrHideComponent(action) {                  
                counter ++;
               
                //  To check whether to show overlay or not
                if(action) {
                var helpOverlayMap = JSON.parse('{!JSENCODE(helpOverlay)}');

                    if(counter == 1) {                    
                        msg = helpAssistant + ' ' + JSON.parse('"' + helpOverlayMap[1].value + '"');
                        header = helpOverlayMap[1].header;
                        content = msg.replace('@@@', totlstps);
                        addcls = '';
                        removcls = 'arrow_compbox arrow_box_top arrow_box_top_right arrow_box_top_Corner arrow_box_bottom';
                        loc = 'searchBoxId';
                        frmTop = 90 - globalHeaderHeight;
                        // frmTop = '-20';
                        frmLft = '350';
                       
                    } else if(counter == 2) {   
                        header = helpOverlayMap[2].header;
                        content = JSON.parse('"' + helpOverlayMap[2].value + '"');
                        addcls = 'arrow_compbox';
                        removcls = 'arrow_box_top arrow_box_top_right arrow_box_top_Corner arrow_box_bottom';
                        loc = 'clearAllID'; 
                        frmTop = 70 - globalHeaderHeight;
                        // frmTop = '-40';
                        frmLft = '58';
                       
                    } else if(counter == 3) {
                        header = helpOverlayMap[3].header;
                        content = JSON.parse('"' + helpOverlayMap[3].value + '"');
                        addcls = 'arrow_compbox';
                        removcls = 'arrow_box_top arrow_box_top_right arrow_box_top_Corner arrow_box_bottom';
                        loc = 'clearAllID'; 
                        frmTop = -2 - globalHeaderHeight;
                        //frmTop = '-112';
                        frmLft = '90';
                       
                    } else if(counter == 4) {
                        header = helpOverlayMap[4].header;
                        content = JSON.parse('"' + helpOverlayMap[4].value + '"');
                         addcls = 'arrow_box_top';
                         removcls = 'arrow_compbox arrow_box_top_right arrow_box_top_Corner arrow_box_bottom';
                         loc = 'searchBoxId'; 
                         frmTop = 35 - globalHeaderHeight;
                        //frmTop = '-75';
                         frmLft = '125';
                       
                    } else if(gettingMoreInfo && {!showAccount} && searchAccountSize > 0) { 
                        gettingMoreInfo = false;                  
                         header = helpOverlayMap[5].header;
                        content = JSON.parse('"' + helpOverlayMap[5].value + '"');
                         addcls = 'arrow_box_top_right';
                         removcls = 'arrow_compbox arrow_box_top arrow_box_top_Corner arrow_box_bottom';
                         loc = 'accountAboutId'; 
                         frmTop = 22 - globalHeaderHeight;
                        //frmTop = '-88';
                         frmLft = '-378';
                     
                    } else if(viewMoreResult && ({!showAccount} && searchAccountSize > 5 || {!showRefContent} && searchContentSize > 5)) {
                        viewMoreResult = false;
                        header = helpOverlayMap[6].header;
                        content = JSON.parse('"' + helpOverlayMap[6].value + '"');
                         addcls = 'arrow_box_top';
                         removcls = 'arrow_compbox arrow_box_top_right arrow_box_top_Corner arrow_box_bottom'; 

                        if ({!showAccount}) {
                             loc = 'showMoreAccount';
                              window.scrollBy(0, jQuery('#showMoreAccount').offset().top - 150);
                        } else if ({!showRefContent}) {
                             loc = 'contentShowMore';
                              window.scrollBy(0, jQuery('#contentShowMore').offset().top -150);
                        }                       
                         frmTop = 32 - globalHeaderHeight;
                        //frmTop = '-78';
                         frmLft = '55';
                      
                    } else if(makingSelection && ({!showAccount} && searchAccountSize > 0 || {!showRefContent} && searchContentSize > 0)) {
                        makingSelection = false;
                        header = helpOverlayMap[7].header;
                        content = JSON.parse('"' + helpOverlayMap[7].value + '"');
                         addcls = 'arrow_compbox';
                         removcls = 'arrow_box_top arrow_box_top_right arrow_box_top_Corner arrow_box_bottom';

                        if ({!showAccount}) {
                            loc = 'accountActionColn';
                            frmTop = 0 - globalHeaderHeight;
                        //frmTop = '-110';
                            window.scrollBy(0, jQuery('#accountActionColn').offset().top - 450);
                        } else if ({!showRefContent}) {
                            loc = 'contentActionColn';
                            frmTop = -8 - globalHeaderHeight;
                        //frmTop = '-118';
                            window.scrollBy(0, jQuery('#contentActionColn').offset().top - 450);
                        } 
                        frmLft = '45';
                      
                    } else if(selectContinue && {!showAccount} && searchAccountSize > 0) {
                        selectContinue = false;
                        header = helpOverlayMap[8].header;
                        content = JSON.parse('"' + helpOverlayMap[8].value + '"');
                         addcls = 'arrow_box_top_Corner';
                         removcls = 'arrow_compbox arrow_box_top arrow_box_top_right arrow_box_bottom';
                         loc = 'accountBtnId'; 
                         frmTop = 39 - globalHeaderHeight;
                        //frmTop = '-75';
                         frmLft = '-295';
                     
                    } else if(understandAlert && {!showAccount} && searchAccountSize > 0) {
                        understandAlert = false;
                        header = helpOverlayMap[9].header;
                        content = JSON.parse('"' + helpOverlayMap[9].value + '"');
                         addcls = 'arrow_box_top_right';
                         removcls = 'arrow_compbox arrow_box_top arrow_box_top_Corner arrow_box_bottom';
                         loc = 'alertColn'; 
                         frmTop = -3 - globalHeaderHeight;
                        //frmTop = '-113';
                         frmLft = '-324';
                    
                    } else if(sharebtn && {!showRefContent} && searchContentSize > 0 && {!isCRMContentUser}) {   
                        sharebtn = false;                
                        header = helpOverlayMap[10].header;
                        content = JSON.parse('"' + helpOverlayMap[10].value + '"');
                         addcls = 'arrow_box_top_Corner';
                         removcls = 'arrow_compbox arrow_box_top arrow_box_top_right arrow_box_bottom';
                         loc = 'shareButton'; 
                         frmTop = 34 - globalHeaderHeight;
                        //frmTop = '-80';
                         frmLft = '-322';

                        if ({!showAccount} && searchAccountSize > 0) {
                            window.scrollBy(0, jQuery('#shareButton').offset().top - 400 );
                        }                      
                      
                    } else if (helpInClick) {
                        helpInClick = false;
                        header = helpOverlayMap[11].header;
                        content = JSON.parse('"' + helpOverlayMap[11].value + '"');
                        addcls = 'arrow_box_top_Corner';
                        removcls = 'arrow_compbox arrow_box_top arrow_box_top_right';
                        loc = 'helpmessageId'; 
                        window.scrollBy(0, jQuery('#helpmessageId').offset().top - 775);
                        frmTop = 30 - globalHeaderHeight;
                        //frmTop = '-80';
                        frmLft = '-275';
                        } else {
                        action = false;
                    } 
                   
                } else {
                    action = false;
                }
                showHideHelpOverlays(action, header, content, loc, addcls, removcls, totlstps, frmTop, frmLft);              
            }   
            
            function onHoverToLink() {            
                var locationVar = jQuery('#helpmessageId');             
                jQuery("#helpAndTraining").css({top: locationVar.offset().top + 30 - globalHeaderHeight, left: locationVar.offset().left - 135, position:'absolute'});
                jQuery(".helpTraining").show();
            }
        
            function rfSearchTour() {
                jQuery(".helpTraining").hide();
                counter = 0;
                gettingMoreInfo = true;
                viewMoreResult = true;
                makingSelection = true;
                selectContinue = true;
                understandAlert = true;
                helpInClick = true;
                sharebtn = true;
                msg = '';
                header = '';
                content = '';
                addcls = '';
                removcls = '';
                loc = '';
                frmTop = '';
                frmLft = '';
               // ShowOrHideComponent(true);
                stepCountForOverlay();
            }
            
            function rfSearchHelp() {
                jQuery(".helpTraining").hide();

               if ({!showAccount} && {!showRefContent}) {
                    window.open('{!URLFOR($Resource.RFSearchHelp, "RFSearchHelp/RFSearchHelpAll.html")}','_blank');
               } else if ({!showAccount}) {
                    window.open('{!URLFOR($Resource.RFSearchHelp, "RFSearchHelp/RFSearchHelpAccount.html")}','_blank');
               } else {
                    window.open('{!URLFOR($Resource.RFSearchHelp, "RFSearchHelp/RFSearchContent.html")}','_blank');
               }
               
            }

            function stepCountForOverlay() {
                searchContentSize = jQuery("input[id*='contntSizeFlag']").val();                
                searchAccountSize = jQuery("input[id*='accSizeFlagO']").val();

                if ({!showAccount} && {!showRefContent}) {

                    if (searchAccountSize > 0) {
                    
                        if (searchAccountSize > 5) {
                        
                            if ({!!isCRMContentUser}) {
                                totlstps = 10;
                                sharebtn = false;
                            } else if (!(searchContentSize > 0)) {
                                totlstps = 10;
                                sharebtn = false;
                            } else {
                                totlstps = 11;
                            } 
                        } else if (searchAccountSize <= 5) {
                            
                            if ({!!isCRMContentUser}) {
                                totlstps = 9;
                                sharebtn = false;                                
                            } else if (!(searchContentSize > 0)) {
                                totlstps = 9;
                                sharebtn = false;
                            } else {
                                totlstps = 10;
                            } 
                        }
                    } else if (searchContentSize > 0) {
                        
                        if ({!!isCRMContentUser}) {
                            totlstps = 5;
                            sharebtn = false;
                        } else {
                            totlstps = 6;
                        }
                    } else {
                        totlstps = 5;
                    }
                
                } else if ({!showAccount}) {
                    
                    if (searchAccountSize > 0 && searchAccountSize > 5) {
                        totlstps = 10;                      
                    } else if (searchAccountSize > 0 && searchAccountSize <= 5) {
                        totlstps = 9;
                    } else {
                        totlstps = 5;
                    }
                } else{
                    
                    if (searchContentSize > 0 && searchContentSize > 5) {
                        
                        if ({!!isCRMContentUser}) {
                            totlstps = 7;
                            sharebtn = false;
                        } else {
                            totlstps = 8;
                        }
                    } else if (searchContentSize > 0 && searchContentSize <= 5) {
                        
                        if ({!!isCRMContentUser}) {
                            totlstps = 6;
                            sharebtn = false;
                        } else {
                            totlstps = 7;
                        }
                    } else {
                        totlstps = 5;
                    }
                }
                ShowOrHideComponent(true);
            }

            function afterHideOverlayCall(){

                if({!showOveray} && !({!relatedMappingController.isHelpoverlay})) {              
                    stepCountForOverlay();
                } else {
                    ShowOrHideComponent(false);                
                }                
            }
        </script>
    </apex:outputPanel>
    
    <apex:outPutPanel id="SizePanel">
        <script>
            function updateMessage(){
                var flag=false;
                var writetoNote = false;
                writetoNote = document.getElementById('pageId:formId:writetoNoteId').checked;
                if({!showPeer2ManagedMessage}){
                    var r=confirm('{!$Label.Change_Request_Type_Message}')
                    if (r==true){
                        previewEmailOncomplete(writetoNote);
                        return;
                    }
                    else {
                        PORShowLoading();
                        cancelAllReq();
                        return;
                    }
                }
                else{
                    previewEmailOncomplete(writetoNote);
                    return false;
                }
            }
            
            function previewEmailOncomplete(writetoNote){
                var fieldId = '';
                var noteId = '';
                var typeId = '';
                var deadlineId = '';
                var isPreview = false;
                var subject = '';
                for(var chkCount = 0; chkCount < {!allActiveReq.size}; chkCount++){
                    if(lastRecordId == document.getElementById('pageId:formId:refMatchblockId:refMatchSectionId:specPbtRequest:'+ chkCount +':selectsingleHiddenReq').value){
                        if(isInlineEditingDisabled){
                            fieldId = 'pageId:formId:refMatchblockId:refMatchSectionId:specPbtRequest:'+ chkCount +':';
                        }
                        else {
                            fieldId = 'pageId_formId_refMatchblockId_refMatchSectionId_specPbtRequest_'+ chkCount +'_';
                        }
                        var e ;
                        var statusValue = '';
                        if(isUrRequest){
                            noteId = 'pageId:formId:refMatchblockId:refMatchSectionId:specPbtRequest:'+ chkCount +':denyNotesUn';
                            if(isInlineEditingDisabled){
                                typeId = fieldId+'typePanelFieldUnspecified1';
                                statusValue = document.getElementById(fieldId+'UrstatusFieldIdEdit').value;
                            }
                            else{
                                typeId = fieldId+'typePanelFieldUnspecified_ileinner';
                                if(document.getElementById(fieldId+'UrstatusFieldId') != null){
                                    e = document.getElementById(fieldId+'UrstatusFieldId');
                                    statusValue = e.options[e.selectedIndex].value;
                                }
                                else{
                                    statusValue = document.getElementById(fieldId+'UrstatusFieldId_ileinner').innerHTML;
                                }
                            }
                            if(statusValue != '{!JSENCODE(tempRRA.Account_Request_Status__c)}'){
                                if(statusValue == 'On Hold'){
                                    isPreview = true;
                                }
                            }
                        }
                        else {
                            noteId = 'pageId:formId:refMatchblockId:refMatchSectionId:specPbtRequest:'+ chkCount +':denyNotes';
                            if(isInlineEditingDisabled){
                                typeId = fieldId+'typePanelField1';
                                statusValue = document.getElementById(fieldId+'ArstatusFieldIdEdit').value;
                            }
                            else{
                                
                                typeId = fieldId+'typePanelField_ileinner';
                                if(document.getElementById(fieldId+'ArstatusFieldId') != null){
                                    e = document.getElementById(fieldId+'ArstatusFieldId');
                                    statusValue = e.options[e.selectedIndex].value;
                                }
                                else{
                                    statusValue = document.getElementById(fieldId+'ArstatusFieldId_ileinner').innerHTML;
                                }
                            }
                            if(statusValue != '{!JSENCODE(tempRRA.Account_Request_Status__c)}'){
                                if(statusValue != 'In Progress' && statusValue != 'Unavailable' && statusValue != 'No Longer Needed' && statusValue != '' && statusValue != 'Not Started' && statusValue != 'No Response'){
                                    isPreview = true;
                                }
                            }
                        }
                        if(isPreview || isPreview == true){
                            if(statusValue != '{!JSENCODE(tempRRA.Account_Request_Status__c)}'){
                                document.getElementById('pageId:formId:Subject').value = '{!STATUS_UPDATE_SUBJECT}';
                            }
                            document.getElementById('pageId:formId:account').innerHTML = '{!JSENCODE(tempRRA.Account__r.Name)}';
                            if(isInlineEditingDisabled){
                                document.getElementById('pageId:formId:UseRequested').innerHTML = document.getElementById(typeId).value;
                            }
                            else{
                                document.getElementById('pageId:formId:UseRequested').innerHTML = document.getElementById(typeId).children[0].innerHTML;
                            }
                            document.getElementById('pageId:formId:Status').innerHTML = statusValue;
                            
                            document.getElementById('pageId:formId:notes').value = document.getElementById(noteId).value;
                            
                            jQuery("#dialogBoxDivNoti").dialog({
                                height    : 150,
                                width     : 415,
                                modal     : true,
                                resizable : false,  
                                buttons: [{
                                    text: "{!$Label.Send}",
                                    "class": "dialogButtonClass",
                                    click: function() {
                                        jQuery( this ).dialog( "close" ); 
                                        PORShowLoading();
                                        previousRequestId = '';
                                        updateInformation(true,lastRecordId,writetoNote,'');
                                        return false;
                                    }
                                },
                                          {
                                              text: "{!$Label.Edit_then_Send}",
                                              "class": "dialogButtonClass",
                                              click: function() {
                                                  document.getElementById('pageId:formId:notes').value = document.getElementById('pageId:formId:notes').value.replace('Phone', '\nPhone').replace('Email', '\nEmail');
                                                  jQuery( this ).dialog( "close" ); 
                                                  jQuery("#dialogBoxDiv1").dialog({
                                                      height    : 420,
                                                      width     : 600,
                                                      modal     : true,
                                                      resizable : false,  
                                                      buttons: [{
                                                          text: "{!$Label.Done}",
                                                          "class": "dialogButtonClass",
                                                          click: function() {
                                                              document.getElementById(noteId).value = document.getElementById('pageId:formId:notes').value;
                                                              jQuery( this ).dialog( "close" ); 
                                                              writetoNote = document.getElementById('pageId:formId:writetoNoteId').checked;
                                                              subject = document.getElementById('pageId:formId:Subject').value;
                                                              PORShowLoading();
                                                              previousRequestId = '';
                                                              updateInformation(true,lastRecordId,writetoNote,subject);
                                                              return false;
                                                          }
                                                      }]              
                                                  });
                                              }
                                          },
                                          {
                                              text: "{!$Label.Do_Not_Send}",
                                              "class": "dialogButtonClass",
                                              click: function() {
                                                  jQuery( this ).dialog( "close" ); 
                                                  PORShowLoading();
                                                  previousRequestId = '';
                                                  updateInformation(false,lastRecordId,writetoNote,'');
                                                  return false;
                                              },
                                          },
                                          {
                                              text: "{!$Label.Cancel}",
                                              "class": "dialogButtonClass",
                                              click: function() {
                                                  jQuery( this ).dialog( "close" ); 
                                                  PORShowLoading();
                                                  cancelAllReq();
                                                  previousRequestId = '';
                                                  return false;
                                              }
                                          }]              
                            });
                            break;
                        }
                        else{
                            PORShowLoading();
                            previousRequestId = '';
                            updateInformation(true,lastRecordId,writetoNote,'');
                            return false;
                        }
                    }
                }
                if(!isPreview || isPreview == false){
                    PORShowLoading();
                    previousRequestId = '';
                    updateInformation(true,lastRecordId,writetoNote,'');
                    return false;
                }
                
            }
        </script>
    </apex:outPutPanel>
    <apex:outputPanel id="chkRadio">
        <script>
            function selectRadioButton(){
                //PORHideLoading();
                
                oldRequestId = '{!JSENCODE(selectedUnsepReq)}';
                checkRadio();
            }
        </script>
    </apex:outputPanel>
    
    <!-- Form -->
    <apex:form id="formId" rendered="{!isFullLicenseAccessible}">
        <script>
            var isInlineEditingDisabled = {!isInlineEditingDisabled};
        </script>
        
        <!-- added for #571 - Action functions to increment view/open count for ref contents -->
        <apex:actionFunction name="incrementRefContentOpenCount" action="{!contentSearch.incrementRefContentOpenCount}" reRender="pgmsgId"></apex:actionFunction> 
        <apex:actionFunction name="incrementRefContentViewCount" action="{!contentSearch.incrementRefContentViewCount}" reRender="pgmsgId"></apex:actionFunction>
 
        <!-- Added for shareable switch R14.87 -->
        <apex:actionFunction name="searchRfContents" action="{!search}" reRender="contentPbId, inputTextId, pageMsgId, scriptPanel" oncomplete="PORHideLoading();">
            <apex:param name="searchParam" value="" assignTo="{!contentSearch.sharableContent}"/>
            <apex:param name="selectedIds" value="" assignTo="{!contentSearch.selectContentDocumentId}"/>
        </apex:actionFunction>
        <apex:actionFunction name="callShowMoreShareableSwitch" action="{!callShowMoreLink}" reRender="contentPbId" oncomplete="PORHideLoading();">
            <apex:param name="selectedIds" value="" assignTo="{!contentSearch.selectContentDocumentId}"/>
            <apex:param name="contentParam" value="true" assignTo="{!contentSearch.showMoreContentRecords}"/>
            <apex:param name="shareableContents" value="" assignTo="{!contentSearch.sharableContent}"/>
        </apex:actionFunction>
        <!-- Added for shareable switch R14.87 -->
        <apex:actionFunction immediate="true" name="preFilterRecords" action="{!preFilterSearch}" rerender="formId,PORLoader, scriptPanel" onComplete="PORHideLoading();afterHideOverlayCall();"/> 
        <apex:actionFunction name="searchRecord" action="{!search}" reRender="accountOpId, contactOpId, contentOpId, inputTextId, pageMsgId, scriptPanel" oncomplete="PORHideLoading();">
            <apex:param name="selectedIds" value="" assignTo="{!contentSearch.selectContentDocumentId}"/>
            <apex:param name="searchParam" value="" assignTo="{!inputTextValue}"/>
        </apex:actionFunction>
        <apex:actionFunction name="updateInlineEditingValue" rerender="formId" onComplete="PORHideLoading();">
            <apex:param name="isInlineEditingDisabled" assignTo="{!isInlineEditingDisabled}" value=""/>
        </apex:actionFunction>
        <apex:actionFunction name="callShowMoreLink" action="{!callShowMoreLink}" reRender="accountOpId, contactOpId, contentOpId, scriptPanel" oncomplete="PORHideLoading();">
            <apex:param name="selectedIds" value="one" assignTo="{!selectedId}"/>
            <apex:param name="accountParam" value="" assignTo="{!accountSearch.showMoreAccountRecords}"/>
            <apex:param name="contactParam" value="" assignTo="{!contactSearch.showMoreContactRecords}"/>
            <apex:param name="contentParam" value="" assignTo="{!contentSearch.showMoreContentRecords}"/>
            
        </apex:actionFunction>
        <apex:actionFunction name="callShowMoreLinkForContent" action="{!callShowMoreLink}" reRender="accountOpId, contactOpId, contentOpId, scriptPanel" oncomplete="PORHideLoading();">
            <apex:param name="selectedIds" value="one" assignTo="{!selectedId}"/>
            <apex:param name="accountParam" value="" assignTo="{!accountSearch.showMoreAccountRecords}"/>
            <apex:param name="contactParam" value="" assignTo="{!contactSearch.showMoreContactRecords}"/>
            <apex:param name="contentParam" value="" assignTo="{!contentSearch.showMoreContentRecords}"/>
            <apex:param name="selectedIds" value="" assignTo="{!contentSearch.selectContentDocumentId}"/> 
        </apex:actionFunction>
        <apex:actionFunction name="createHitRecord" action="{!createHitRecord}" oncomplete="PORHideLoading();" rerender="pgmsgId,accountPbsId,contactPbsId">
            <apex:param name="isAccount" value="" assignTo="{!isAccount}"/>
            <apex:param name="isContact" value="" assignTo="{!isContact}"/>
            <apex:param name="hitAccount" value="" assignTo="{!hitAccount}"/>
            <apex:param name="hitContact" value="" assignTo="{!hitContact}"/>
        </apex:actionFunction>
        <apex:actionFunction name="getAccountContents" action="{!accountAssociatedContents}" oncomplete="PORHideLoading();showPopup();" rerender="pbtAccContent, scriptPanel">
            <apex:param name="isAccount" value="" assignTo="{!selectedAccountId}"/> 
        </apex:actionFunction>
        <apex:actionFunction name="contentPrevious" rerender="contentOpId, scriptPanel" action="{!contentSearch.previous}" onComplete="PORHideLoading();">
            <apex:param name="selectedIds" value="" assignTo="{!selectedId}"/>
            <apex:param name="selectedDocIds" value="" assignTo="{!contentSearch.selectContentDocumentId}"/>
        </apex:actionFunction>
        <apex:actionFunction name="contentNext" rerender="contentOpId, scriptPanel" action="{!contentSearch.next}" onComplete="PORHideLoading();">
            <apex:param name="selectedIds" value="" assignTo="{!selectedId}"/>
            <apex:param name="selectedDocIds" value="" assignTo="{!contentSearch.selectContentDocumentId}"/>
        </apex:actionFunction>
        <apex:actionfunction name="accountPrevious" reRender="accountOpId, scriptPanel" action="{!accountSearch.previous}" oncomplete="PORHideLoading();" >
            <apex:param name="selectedIds" value="" assignTo="{!selectedId}"/>
        </apex:actionFunction>
        <apex:actionFunction name="accountNext" reRender="accountOpId, scriptPanel" action="{!accountSearch.next}" oncomplete="PORHideLoading();">
            <apex:param name="selectedIds" value="" assignTo="{!selectedId}"/>
        </apex:actionFunction>
        <!-- REF-2304 -->
        <apex:actionfunction name="contactSearchPrevAction" reRender="contactOpId" action="{!contactSearch.previous}" oncomplete="preSelectHubContacts();" />
        <apex:actionFunction name="contactSearchNextAction" reRender="contactOpId" action="{!contactSearch.next}" oncomplete="preSelectHubContacts();"/>
        
        
        <apex:actionFunction name="moveToSelfService" reRender="accountOpId2,pgmsgId, scriptPanel" action="{!selectAndContinue}" oncomplete="PORHideLoading();">
            <apex:param name="basicAccId" value="" assignTo="{!selectedIds}"/>
        </apex:actionFunction> 
        
        <apex:actionFunction name="moveToMixManaged" reRender="accountOpId2,pgmsgId, scriptPanel" action="{!keepReqAccount}" oncomplete="PORHideLoading();">
            <apex:param name="otherAccId" value="" assignTo="{!selectedIds}"/> 
        </apex:actionFunction>
        
        <!-- added for #1135 - Gaurav Saini (2 Dec, 2017) -->
        <apex:actionFunction name="getSearchResults" reRender="pgmsgId, exportScriptPanel" action="{!getSearchResults}" oncomplete="PORHideLoading(); sendDataToExport();">
            <apex:param name="objName" value="" assignTo="{!exportObjectName}"/>
        </apex:actionFunction>
        
        <apex:actionFunction name="setTheFeaturedCheckbox" action="{!contentSearch.setTheFeaturedCheckbox}" oncomplete="PORHideLoading();" rerender="contentOpId"/>
        
        
        <apex:actionFunction name="fetchContentItem" action="{!contentSearch.fetchHoverContentItem}" reRender="pgmsgId, dvContentDetails,loadContent, pbtContent,notificationPanel" oncomplete="showDivOncompleteAction();">
            <apex:param name="contId" value="" assignTo="{!contentSearch.hoverContentId}"/>
            <apex:param name="refContId" value="" assignTo="{!contentSearch.hoverRefContentId}"/>
        </apex:actionFunction>
        
        <apex:actionFunction name="downloadContentFiles" reRender="pgmsgId" action="{!contentSearch.downloadContents}" oncomplete="PORHideLoading();">
            <apex:param name="contIds" value="" assignTo="{!contentSearch.selectContentDocumentId}"/>
        </apex:actionFunction>
        <apex:actionFunction name="shareContentSearchCall" action="{!setContentsIds}" onComplete="redirecttoInvitation();return false;">
            <apex:param name="contIds" value="" assignTo="{!contentSearch.selectContentDocumentId}"/>
        </apex:actionFunction>
        
        <apex:actionFunction name="createCollectionCall2" action="{!setContentsIds}"  onComplete="createCollection();return false;">
            <apex:param name="contIds" value="" assignTo="{!contentSearch.selectContentDocumentId}"/>
            <apex:param name="param" value="" assignTo="{!collectionName}"/>
        </apex:actionFunction>
        
        <apex:actionFunction name="downloadSingleContent" reRender="pgmsgId" action="{!contentSearch.singleContentDownload}" />
        
        <!-- Start Bound 3 Req -->
        <apex:actionfunction name="discardAccount" action="{!discardReqAccount}" reRender="pgmsgId, dialogBoxDiv, scriptPanel" oncomplete="PORHideLoading();"/>
        <apex:actionfunction name="keepAccount" action="{!keepReqAccount}" reRender="pgmsgId, dialogBoxDiv, scriptPanel" oncomplete="PORHideLoading();">
            <apex:param name="selectedParam" value="" assignTo="{!selectedIds}"/>
        </apex:actionFunction>
        <apex:actionFunction name="assignUnspecReqId" action="{!findAccountofReq}"  reRender="oppDetailPbsId,contactOpId,accountOpId,pgmsgId" oncomplete="PORHideLoading(); return false;">
            <apex:param name="selectedUnsepReq" value=""  assignTo="{!selectedUnsepReq}"/>
        </apex:actionFunction>
        <apex:actionFunction name="assignAccount" action="{!assignAccount}" reRender="reqId,accountOpId,pgmsgId" oncomplete="PORHideLoading(); setColorOnStatus(); selectRadioButton(); return false;">
            <apex:param name="selectedacc" value=""  assignTo="{!selectedacc}"/>
        </apex:actionFunction>
        <apex:actionFunction name="assignContact" action="{!assignContact}" reRender="reqId,contactOpId,chkRadio,pgmsgId" oncomplete="PORHideLoading();setColorOnStatus();selectRadioButton();return false;">
            <apex:param name="selectedCon" value=""  assignTo="{!selectedCon}"/>
        </apex:actionFunction>
        <apex:actionFunction name="findAccountofReq" action="{!findAccountofReq}" reRender="contactOpId,accountOpId,pgmsgId" oncomplete="PORHideLoading();"/>
        <apex:actionFunction name="enabletoUpdate" action="{!enabletoUpdate}" reRender="oppDetailPbsId,pgmsgId">
            <apex:param name="reqId" assignTo="{!updatableReq}" value=""/>
        </apex:actionFunction>
        <!--         <apex:actionFunction name="saveAllReq" action="{!saveReqList}" reRender="reqId, pgmsgId,contactOpId,accountOpId" oncomplete="PORHideLoading();"> -->
        <!--              <apex:param name="reqId" assignTo="{!updateReqId}" value=""/> -->
        <!--              <apex:param name="statusValue" assignTo="{!statusValue}" value=""/> -->
        <!--              <apex:param name="changesEntity" assignTo="{!changeField}" value=""/> -->
        <!--         </apex:actionFunction> -->
        <apex:actionFunction name="updateInformation" action="{!saveReqList}" rerender="blocksectionId,requestPanel,sectionId,msgId,Notes_ListId" onComplete="PORHideLoading();return false;">
            <apex:param name="isSend" assignTo="{!isSend}" value=""/>
            <apex:param name="reqId" assignTo="{!updateReqId}" value=""/>
            <apex:param name="writetoNote" assignTo="{!writetoNote}" value=""/>
            <apex:param name="subject" assignTo="{!subjectValue}" value=""/>
        </apex:actionFunction>
        <apex:actionFunction name="getAccReqDetails" action="{!getSelectedAccReqDetails}" rerender="SizePanel,dialogBoxDiv1" oncomplete="PORHideLoading();updateMessage();return false;">
            <apex:param name="reqId" assignTo="{!updateReqId}" value=""/>
            <apex:param name="statusValue" assignTo="{!statusValue}" value=""/>
            <apex:param name="changedEntity" assignTo="{!changeField}" value=""/>
        </apex:actionFunction>
        <apex:actionFunction name="cancelAllReq" action="{!cancelReqList}"  reRender="reqId, pgmsgId" oncomplete="PORHideLoading();"/>
        <apex:actionFunction name="showContactBlock" action="{!showContactBlock}" oncomplete="isFromContact=true;selectRadioButton();PORHideLoading();return false;"   reRender="contactOpId,accountOpId,chkRadio,pgmsgId">
            <apex:param name="contactParam" value="" assignTo="{!showContact}"/>
            <apex:param name="accountParam" value="" assignTo="{!showAccount}"/>
            <apex:param name="accountId" value="" assignTo="{!contactSearch.accountId}"/>
            <apex:param name="selectedUnsepReq" value=""  assignTo="{!selectedUnsepReq}"/>
        </apex:actionFunction>
        <apex:actionFunction name="showAll" action="{!showAll}"  reRender="contactOpId,accountOpId,pgmsgId" oncomplete="PORHideLoading();"/>
        
        <apex:actionFunction name="changeAccountType1" action="{!changeAccountType}" oncomplete="PORHideLoading();selectRadioButton();return false;"   reRender="accountOpId,accountPbsId,chkRadio,pgmsgId"/>
        <apex:actionFunction name="changeContactType1" action="{!changeContactType}" oncomplete="PORHideLoading();selectRadioButton();return false;"   reRender="contactOpId,contactPbsId,chkRadio,pgmsgId"/>
        <!-- End Bound 3 Req -->
        <!-- REF-1975 -->
        <apex:actionFunction action="{!rollUpAttribute}" name="getAttributeInfo" oncomplete="PORHideLoading();getTags1();" reRender="TestPannel">
            <apex:param name="firstParam" assignTo="{!recordId}" value="" />         
        </apex:actionFunction>
        <!--    REF-2181    -->
        <apex:actionFunction action="{!inheritAccountAttribute}" name="getConAttributeInfo" oncomplete="PORHideLoading();getTags1('', '', '', '', true, '');" reRender="TestPannel">
            <apex:param name="firstParam" assignTo="{!recordId}" value="" />         
        </apex:actionFunction>
        <!-- REF-1964 REF-2304 -->
        <apex:actionFunction name="selectAllContacts" action="{!selectAllContacts}"
                             oncomplete="onSelectAllContacts();PORHideLoading();return false;"
                             reRender="contactOpId,contactPbsId,pbtAccount,pgmsgId,scriptHubPanel,returnToRequestPannel"/>
        <apex:actionFunction name="selectSingleContact" action="{!selectSingleContact}"
                             oncomplete="PORHideLoading();return false;"
                             reRender="contactOpId,contactPbsId,pbtAccount,pgmsgId,scriptHubPanel,returnToRequestPannel">
            <apex:param name="selectedContactId" value="" assignTo="{!selectedContactId}"/>
        </apex:actionFunction>
        <apex:actionFunction name="rediretToRequestPage" action="{!redirectOnRequest}"
                             oncomplete="PORHideLoading();" />
        <apex:actionFunction name="preSelectContacts" action="{!preSelectHubContacts}"
                             oncomplete="PORHideLoading();return false;"
                             reRender="contactOpId,contactPbsId,pbtAccount,pgmsgId,scriptHubPanel,returnToRequestPannel">
            <apex:param name="selectedContactIds" value="" assignTo="{!preSelectedContactIds}"/>
        </apex:actionFunction><!-- Load for related content Popover- #943 --> 
        <apex:outputPanel id="loadContent">
            <script>
                function showDivOncompleteAction() { 
                    PORHideLoading(); 
                    jQuery("#btnOpen").hide();
                    jQuery("#btnDownload").hide();
                    jQuery("#btnView").hide(); 
                    document.getElementById('pageId:formId:dvContentDetails').style.display = 'block';
                    document.getElementById('pageId:formId:dvContentDetails').style.left = (tempX + 18) + 'px';
                    document.getElementById('pageId:formId:dvContentDetails').style.top = (tempY - 145)  + 'px';
                    jQuery(".content-popover").show(); 
                    //jQuery('#divCustomRefContent').hide();
                    jQuery('#divNoRefContent').hide();
                    jQuery('#divSumm').css('display','block');
                     
                    //REF-2294
                    var isCustomContent = '{!contentSearch.isCustomContent}';
                    var isRefInterviewType ='{!contentSearch.isRefInterviewType}';
                    var isContentVersionId = '{!contentSearch.isContentVersionId}'; 
                     
                    if (isContentVersionId == 'true') {  
                        jQuery(".content-popover").hide(); 
                        var showButton = '{!AND(isCRMContentUser, isViewDetailsUpdateable)}';
                        if (showButton) {
                            if ('{!contentSearch.hoverContentVersion.FileType}' == 'LINK') {
                                
                                jQuery( "#divRefContent").dialog({
                                    modal: true,
                                    resizable: false,
                                    draggable: false,
                                    width : 700,
                                    buttons: [{
                                        text: "{!$Label.Open}",
                                        "class": "dialogButtonClass",
                                        "style": "font-size:10.8px;cursor:pointer;text-align: center",
                                        click: function() {
                                            jQuery( this ).dialog( "close" );
                                            openContent('{!contentSearch.hoverRefContentId}', '{!contentSearch.hoverContentVersion.ContentUrl}', '{!contentSearch.hoverContentVersion.FileType}',false); 
                                            return false;
                                        }
                                    },{
                                        text: "{!$Label.View_Details}",
                                        "class": "dialogButtonClass",
                                        "style": "font-size:10.8px;cursor:pointer;text-align: center",
                                        click: function() {
                                            jQuery( this ).dialog( "close" );
                                            openContent('{!contentSearch.hoverRefContentId}', '{!contentSearch.hoverContentVersion.ContentUrl}', '{!contentSearch.hoverContentVersion.FileType}',true); 
                                            return false;
                                        }
                                    }] 
                                });
                            } else {
                                jQuery( "#divRefContent").dialog({
                                    modal: true,
                                    resizable: false,
                                    draggable: false,
                                    width : 700,
                                    buttons: [{
                                        text: "{!$Label.Download}",
                                        "class": "dialogButtonClass",
                                        "style": "font-size:10.8px;cursor:pointer;text-align: center",
                                        click: function() {
                                            jQuery( this ).dialog( "close" );
                                            downloadSingleContent(); 
                                            return false;
                                        }
                                    },{
                                        text: "{!$Label.View_Details}",
                                        "class": "dialogButtonClass",
                                        "style": "font-size:10.8px;cursor:pointer;text-align: center",
                                        click: function() {
                                            jQuery( this ).dialog( "close" );
                                            openContent('{!contentSearch.hoverRefContentId}', '{!contentSearch.hoverContentVersion.ContentUrl}', '{!contentSearch.hoverContentVersion.FileType}',true); 
                                            return false;
                                        }
                                    }]
                                });
                            } 
                        } else {
                            if ('{!contentSearch.hoverContentVersion.FileType}' == 'LINK') {
                                
                                jQuery( "#divRefContent").dialog({
                                    modal: true,
                                    resizable: false,
                                    draggable: false,
                                    width : 700,
                                    buttons: [{
                                        text: "{!$Label.Open}",
                                        "class": "dialogButtonClass",
                                        "style": "font-size:10.8px;cursor:pointer;text-align: center",
                                        click: function() {
                                            jQuery( this ).dialog( "close" );
                                            openContent('{!contentSearch.hoverRefContentId}', '{!contentSearch.hoverContentVersion.ContentUrl}', '{!contentSearch.hoverContentVersion.FileType}',false); 
                                            return false;
                                        }
                                    }]
                                });
                            } else {
                                jQuery( "#divRefContent").dialog({
                                    modal: true,
                                    resizable: false,
                                    draggable: false,
                                    width : 700,
                                    buttons: [{
                                        text: "{!$Label.Download}",
                                        "class": "dialogButtonClass",
                                        "style": "font-size:10.8px;cursor:pointer;text-align: center",
                                        click: function() {
                                            jQuery( this ).dialog( "close" );
                                            downloadSingleContent(); 
                                            return false;
                                        }
                                    }]
                                });
                            } 
                        }
                    } else if (isContentVersionId == 'false' && isCustomContent == 'true') {  
                        jQuery(".content-popover").hide(); 
                        var showButton = '{!isViewDetailsUpdateable}';
                        
                        if (showButton) {
                            jQuery(".content-popover").hide(); 
                            jQuery( "#dialogBoxDivCustom").dialog({
                                modal: true,
                                resizable: false,
                                draggable: false,
                                width : 700,
                                height : 500,
                                buttons: [{
                                    text: "{!$Label.View_Details}",
                                    "class": "dialogButtonClass",
                                    "style": "font-size:10.8px;cursor:pointer;text-align: center",
                                    click: function() {
                                        jQuery( this ).dialog( "close" );
                                        openContent('{!contentSearch.hoverRefContentId}', '{!contentSearch.hoverContentVersion.ContentUrl}', '{!contentSearch.hoverContentVersion.FileType}',true);
                                        return false;
                                    }
                                }]
                            });
                        } else {
                            jQuery( "#dialogBoxDivCustom").dialog({
                                modal: true,
                                resizable: false,
                                draggable: false,
                                width : 700,
                                height : 500,
                                buttons: []
                            });
                        }
                    } else if (isRefInterviewType == 'true') {  
                        jQuery('#divRefInterview').show();
                        jQuery('.my-popover').css('max-height','350');
                        jQuery('.my-popover').css('width','450');
                        jQuery('.my-popover').css('max-width','450');
                        jQuery("#btnView").show();
                    } else {  
                        jQuery('#divNoRefContent').show();
                        jQuery('.my-popover').css('max-height','100');
                    }
                }
            </script>
        </apex:outputPanel> 
        <!-- Main Div -->
        <apex:actionStatus id="porStatus" onStart="PORShowLoading();" onStop="PORHideLoading()"/>
        <div style="width:'100%';border:'0';" id="mainDivId"> 
            <!-- Left Div -->
            <div style="float: left; width: 15%; valign:'top';"> 
                <div id="backToOpp"><br/>
                <apex:outputPanel style="min-height: 39px; width: 90%;"  rendered="{!if(len(opportunityId)==0, false, true)}">
                    <apex:commandLink value="{!$Label.Back_to_Opportunity}" action="{!backToOpportunity}" rendered="{!if(len(opportunityId)==0, false, true)}" style="color: #015ba7;"/>
                </apex:outputPanel>
                </div>
            
                <div style="float: left; min-height: 90px; width: 90%; background-color:#CFEEF8; border-radius:5px;">  
                
                    <div style="float: left; height: 25px; width: 100%; background-color:#1797C0; font-weight: bold; color: white; border-radius:5px;line-height:25px;">&nbsp;&nbsp;&nbsp;&nbsp;{!$Label.Filter_Your_Results}</div>
                    {!$Label.use_the_filters}<br/>
                    <div id="clearAllID" style="height:0px;"><apex:commandLink value="{!$Label.Clear_All}" action="{!clearFilters}"/></div><br/>
                    <apex:commandLink value="{!$Label.View_All_Filters}" action="{!goToViewAllFilterResults}"/><br/> 
                    <apex:commandLink value="{!$Label.Advance_Filters}" action="{!gotoAdvancedFilter}"/><br/>
                    <!-- <apex:commandLink value="{!$Label.Advance_Search}" action="{!gotoAdvancedSearch}"/> -->
                </div>   
                <div style="height:20px;clear:both; "></div>
                <apex:outputPanel id="filterPanel">
                    <apex:outputPanel id="filterBasicId" rendered="{!isBasicSearchViewSelected}">
                        <apex:repeat value="{!basicFilterList}" var="filter">
                            <!-- Referenceability Div --> 
                            <apex:outputPanel rendered="{!AND(showAccount,filter.Field_API_Name__c=='Referenceability',OR(filter.Visible__c,filter.Required__c))}">
                                <div>
                                    <B><apex:outputLabel value="{!$Label.Referenceability}"/></B> <br/>
                                    <div> 
                                        <apex:commandLink value="{!$Label.Clear}" style="color:#9EB9DA" action="{!ClearInternalReferenciability}" />
                                    </div>
                                    <apex:repeat value="{!referenceabilityWrapper.selectedReferenceabilityTypes}" var="ref">
                                        <div>
                                            <apex:image url="{!$Resource.Tick}" height="12px" width="12px"/>
                                            {!ref.refType.Name}
                                        </div>
                                    </apex:repeat>
                                    <apex:commandLink value="{!$Label.See_All}" action="{!goToReferencibiltyresults}" />
                                </div> 
                                <div style="height:15px;">
                                </div> 
                            </apex:outputPanel>
                            <!--  Related Mapping Div re #1056 Also allow in case of Match Page-->
                            <apex:outputPanel rendered="{!AND(OR(showAccount, showRefContent),filter.From_Mapping__c,OR(filter.Visible__c,filter.Required__c))}">
                                <div style="float:left;width:100%;border-radius:5px;">
                                    <div style="float:left;width:100%;border-radius:5px;">
                                        <apex:repeat value="{!attributeResults[filter.Field_API_Name__c]}" var="attRecord">
                                            <div>
                                                <B><apex:outputLabel value="{!attRecord.Filter_Label_Name__c}"/></B> <br/>
                                                <div> 
                                                    <apex:commandLink value="{!$Label.Clear}" style="color:#9EB9DA" action="{!ClearMappings}" >
                                                        <apex:param name="attMapId" assignTo="{!relatedMappingController.attributeMappingId}" value="{!attRecord.Id}"/>
                                                    </apex:commandLink>
                                                </div>
                                                <apex:repeat value="{!relatedMappingController.mappingSelectedValuesLabel[attRecord.Id]}" var="ref">
                                                    <div>
                                                        <apex:image url="{!$Resource.Tick}" height="12px" width="12px"/>
                                                        {!ref}
                                                    </div>
                                                </apex:repeat> 
                                                <apex:commandLink value="{!$Label.See_All}" action="{!goToTheRelatedSearch}" >
                                                    <apex:param name="attMapId" assignTo="{!relatedMappingController.attributeMappingId}" value="{!attRecord.Id}"/>
                                                </apex:commandLink>
                                            </div>   
                                            <div style="height:15px;">
                                            </div> 
                                        </apex:repeat>
                                    </div>
                                </div>  
                            </apex:outputPanel> 
                            <!-- Content Languages Div --> 
                            <apex:outputPanel rendered="{!AND(showRefContent,NOT(refMatch),filter.Field_API_Name__c=='Content Language',OR(filter.Visible__c,filter.Required__c))}">
                                <div>
                                    <B><apex:outputLabel value="{!$Label.Content_Language}"/></B> <br/>
                                    <div> 
                                        <apex:commandLink value="{!$Label.Clear}" style="color:#9EB9DA" action="{!contentSearch.clearAllContentLanguages}">
                                            <apex:param name="" assignTo="{!showOveray}" value="false"/>
                                        </apex:commandLink>
                                    </div>
                                    <apex:repeat value="{!contentSearch.selectedContentLanguages}" var="contLang">
                                        <div>
                                            <apex:image url="{!$Resource.Tick}" height="12px" width="12px"/>
                                            {!contLang.contentLanguageName}
                                        </div>
                                    </apex:repeat>
                                    <apex:commandLink value="{!$Label.See_All}" action="{!goToContentLanguageResults}"/>
                                </div> 
                                <div style="height:15px;">
                                </div>
                            </apex:outputPanel>
                            <!-- Content Types Div --> 
                            <apex:outputPanel rendered="{!AND(showRefContent,NOT(refMatch), filter.Field_API_Name__c=='Content Types',OR(filter.Visible__c,filter.Required__c))}">
                                <div>
                                    <B><apex:outputLabel value="{!$Label.Content_Types}"/></B> <br/>
                                    <div> 
                                        <apex:commandLink value="{!$Label.Clear}" style="color:#9EB9DA" action="{!contentSearch.clearAllContentTypes}">
                                            <apex:param name="" assignTo="{!showOveray}" value="false"/>
                                        </apex:commandLink>
                                    </div>
                                    <apex:repeat value="{!contentSearch.selectedContentTypes}" var="contentType">
                                        <div>
                                            <apex:image url="{!$Resource.Tick}" height="12px" width="12px"/>
                                            {!contentType.contentTypeName}
                                        </div>
                                    </apex:repeat>
                                    <apex:commandLink value="{!$Label.See_All}" action="{!goToContentTypeResults}"/>
                                </div> 
                                <div style="height:15px;">
                                </div> 
                            </apex:outputPanel>
                            
                            <!-- Attributes Div -->
                            <apex:outputPanel rendered="{!AND(NOT(ISBLANK(filter.Field_API_Name__c)),NOT(filter.From_Mapping__c),NOT(ISNULL(filter.Field_API_Name__c)), filter.Field_API_Name__c != 'Content Types', filter.Field_API_Name__c != 'Content Language', filter.Field_API_Name__c != 'Referenceability',OR(filter.Visible__c,filter.Required__c))}">
                                <div><B>{!filter.Label__c}</B>
                                    <div > 
                                        <apex:commandLink value="{!$Label.Clear}" style="color:#9EB9DA" action="{!ClearInternalAttribute}">
                                            <apex:param name="p1" value="{!filter.Field_API_Name__c}" assignTo="{!attributeWrapper.selectedLabelId}"/>
                                        </apex:commandLink>
                                    </div>
                                    <apex:repeat value="{!attributeWrapper.mapAttributesLabels[filter.Field_API_Name__c]}" var="attr">
                                        <div>
                                            <apex:image url="{!$Resource.Tick}" height="12px" width="12px"/>
                                            {!attr.attributeLabel.Attribute__r.Name}
                                        </div>
                                    </apex:repeat>
                                </div>
                                <apex:commandLink action="{!goToAttributeResults}" value="{!$Label.See_All}" >
                                    <apex:param name="p1" value="{!filter.Field_API_Name__c}" assignTo="{!attributeWrapper.selectedLabelId}"/>
                                </apex:commandLink>                        
                                <div style="height:15px;">
                                </div>
                            </apex:outputPanel>
                        </apex:repeat>
                        <apex:commandLink value="{!$Label.more}" style="color:#0070c0;" action="{!changeBasicFilterView}" onclick="PORShowLoading();" oncomplete="PORHideLoading();" rendered="{!isShowMoreLink}" reRender="filterPanel"></apex:commandLink>
                    </apex:outputPanel>
                    <apex:outputPanel id="filterOrderId" rendered="{!!isBasicSearchViewSelected}">
                        <apex:repeat value="{!filterList}" var="filter">
                            <!-- Referenceability Div --> 
                            <apex:outputPanel rendered="{!AND(showAccount,filter.Field_API_Name__c=='Referenceability')}">
                                <div>
                                    <B><apex:outputLabel value="{!$Label.Referenceability}"/></B> <br/>
                                    <div> 
                                        <apex:commandLink value="{!$Label.Clear}" style="color:#9EB9DA" action="{!ClearInternalReferenciability}" />
                                    </div>
                                    <apex:repeat value="{!referenceabilityWrapper.selectedReferenceabilityTypes}" var="ref">
                                        <div>
                                            <apex:image url="{!$Resource.Tick}" height="12px" width="12px"/>
                                            {!ref.refType.Name}
                                        </div>
                                    </apex:repeat>
                                    <apex:commandLink value="{!$Label.See_All}" action="{!goToReferencibiltyresults}" />
                                </div> 
                                <div style="height:15px;">
                                </div> 
                            </apex:outputPanel>
                            <!--  Related Mapping Div re #1056 Also allow in case of Match Page-->
                            <apex:outputPanel rendered="{!AND(OR(showAccount, showRefContent),filter.From_Mapping__c)}">
                                <div style="float:left;width:100%;border-radius:5px;">
                                    <div style="float:left;width:100%;border-radius:5px;">
                                        <apex:repeat value="{!attributeResults[filter.Field_API_Name__c]}" var="attRecord">
                                            <div>
                                                <B><apex:outputLabel value="{!attRecord.Filter_Label_Name__c}"/></B> <br/>
                                                <div> 
                                                    <apex:commandLink value="{!$Label.Clear}" style="color:#9EB9DA" action="{!ClearMappings}" >
                                                        <apex:param name="attMapId" assignTo="{!relatedMappingController.attributeMappingId}" value="{!attRecord.Id}"/>
                                                    </apex:commandLink>
                                                </div>
                                                <apex:repeat value="{!relatedMappingController.mappingSelectedValuesLabel[attRecord.Id]}" var="ref">
                                                    <div>
                                                        <apex:image url="{!$Resource.Tick}" height="12px" width="12px"/>
                                                        {!ref}
                                                    </div>
                                                </apex:repeat> 
                                                <apex:commandLink value="{!$Label.See_All}" action="{!goToTheRelatedSearch}" >
                                                    <apex:param name="attMapId" assignTo="{!relatedMappingController.attributeMappingId}" value="{!attRecord.Id}"/>
                                                </apex:commandLink>
                                            </div>   
                                            <div style="height:15px;">
                                            </div> 
                                        </apex:repeat>
                                    </div>
                                </div>  
                            </apex:outputPanel> 
                            <!-- Content Languages Div --> 
                            <apex:outputPanel rendered="{!AND(showRefContent,NOT(refMatch),filter.Field_API_Name__c=='Content Language')}">
                                <div>
                                    <B><apex:outputLabel value="{!$Label.Content_Language}"/></B> <br/>
                                    <div> 
                                        <apex:commandLink value="{!$Label.Clear}" style="color:#9EB9DA" action="{!contentSearch.clearAllContentLanguages}">
                                            <apex:param name="" assignTo="{!showOveray}" value="false"/>
                                        </apex:commandLink>
                                    </div>
                                    <apex:repeat value="{!contentSearch.selectedContentLanguages}" var="contLang">
                                        <div>
                                            <apex:image url="{!$Resource.Tick}" height="12px" width="12px"/>
                                            {!contLang.contentLanguageName}
                                        </div>
                                    </apex:repeat>
                                    <apex:commandLink value="{!$Label.See_All}" action="{!goToContentLanguageResults}"/>
                                </div> 
                                <div style="height:15px;">
                                </div>
                            </apex:outputPanel>
                            <!-- Content Types Div --> 
                            <apex:outputPanel rendered="{!AND(showRefContent,NOT(refMatch), filter.Field_API_Name__c=='Content Types')}">
                                <div>
                                    <B><apex:outputLabel value="{!$Label.Content_Types}"/></B> <br/>
                                    <div> 
                                        <apex:commandLink value="{!$Label.Clear}" style="color:#9EB9DA" action="{!contentSearch.clearAllContentTypes}">
                                            <apex:param name="" assignTo="{!showOveray}" value="false"/>
                                        </apex:commandLink>
                                    </div>
                                    <apex:repeat value="{!contentSearch.selectedContentTypes}" var="contentType">
                                        <div>
                                            <apex:image url="{!$Resource.Tick}" height="12px" width="12px"/>
                                            {!contentType.contentTypeName}
                                        </div>
                                    </apex:repeat>
                                    <apex:commandLink value="{!$Label.See_All}" action="{!goToContentTypeResults}"/>
                                </div> 
                                <div style="height:15px;">
                                </div> 
                            </apex:outputPanel>
                            
                            <!-- Attributes Div -->
                            <apex:outputPanel rendered="{!AND(NOT(ISBLANK(filter.Field_API_Name__c)),NOT(filter.From_Mapping__c),NOT(ISNULL(filter.Field_API_Name__c)), filter.Field_API_Name__c != 'Content Types', filter.Field_API_Name__c != 'Content Language', filter.Field_API_Name__c != 'Referenceability')}">
                                <div><B>{!filter.Label__c}</B>
                                    <div > 
                                        <apex:commandLink value="{!$Label.Clear}" style="color:#9EB9DA" action="{!ClearInternalAttribute}">
                                            <apex:param name="p1" value="{!filter.Field_API_Name__c}" assignTo="{!attributeWrapper.selectedLabelId}"/>
                                        </apex:commandLink>
                                    </div>
                                    <apex:repeat value="{!attributeWrapper.mapAttributesLabels[filter.Field_API_Name__c]}" var="attr">
                                        <div>
                                            <apex:image url="{!$Resource.Tick}" height="12px" width="12px"/>
                                            {!attr.attributeLabel.Attribute__r.Name}
                                        </div>
                                    </apex:repeat>
                                </div>
                                <apex:commandLink action="{!goToAttributeResults}" value="{!$Label.See_All}" >
                                    <apex:param name="p1" value="{!filter.Field_API_Name__c}" assignTo="{!attributeWrapper.selectedLabelId}"/>
                                </apex:commandLink>                        
                                <div style="height:15px;">
                                </div>
                            </apex:outputPanel>
                        </apex:repeat>
                        <!--                    <apex:outputLink value="#" style="color:#0070c0;" onclick="showHideTab('filterBasicId');">{!$Label.less}</apex:outputLink> -->
                        <apex:commandLink value="{!$Label.less}" style="color:#0070c0;" onclick="PORShowLoading();" oncomplete="PORHideLoading();" action="{!changeBasicFilterView}" rendered="{!isShowMoreLink}" reRender="filterPanel"></apex:commandLink>
                    </apex:outputPanel>
                </apex:outputPanel>
            </div>
            <!-- REF-1964 -->
            <apex:outputPanel id="returnToRequestPannel" rendered="{!isRefHubMatch}">
                <div style="width: 40%;margin-bottom:10px;">
                    <apex:commandLink style="color:#5C95C4;" onclick="saveSelectedContacts(); return false;"
                                      value="{!$Label.Text_Back_To_Reference_Request}"  reRender="scriptHubPanel"/>
                </div>
            </apex:outputPanel>
            <!-- Right Div -->
            <div style="float: left; width: 85%; valign:'top';" id="refMatchId">    
                <!-- Start Bound 3 Req -->  
                <apex:outputPanel id="reqId" rendered="{!AND(refMatch,NOT(isthisBasic),NOT(isRefHubMatch))}">
                    <div style="float:left ; width: 40%;">
                        <apex:commandLink style="color:#5C95C4;" action="{!redirectOnRequest}" value="{!$Label.Text_Back_To_Reference_Request}" rendered="{!request != null}"/><br/>
                    </div>
                    <script>
                    var newRequestId = '{!JSENCODE(newAccountRequestId)}';
                    var oldRequestId = '{!JSENCODE(selectedUnsepReq)}';
                    var rep2repIds = '{!JSENCODE(rep2repId)}';
                    </script>
                    <apex:pageBlock id="refMatchblockId" rendered="{!request != null}">
                        <apex:pageBlockSection title="{!IF(request.Opportunity__r.Name != '', $Label.Opportunity_Information,$Label.General_information)}" columns="2" id="oppDetailPbsId">
                            <apex:outputField rendered="{!request.Opportunity__r.Name != ''}" value="{!request.Opportunity__r.Name}"/>
                            <apex:outputField rendered="{!request.Opportunity__r.Name != ''}" value="{!request.Opportunity__r.AccountId}" label="{!$Label.Opportunity_Account}"/>
                            <apex:outputField value="{!request.Requester__c}"/>
                            <apex:outputField value="{!request.Project_Type__c}"/>
                            <apex:outputField value="{!request.Case__c}" rendered="{!request.Case__c != null}"/>
                            <script>
                            var oldRequestId = '{!JSENCODE(selectedUnsepReq)}';
                            </script>
                        </apex:pageBlockSection>
                        <apex:pageBlockSection id="refMatchSectionId" title="{!$Label.Requested_Accounts}" columns="1">
                            <apex:outputPanel id="InlineEditButton">
                                <!--<apex:commandButton rendered="{!AND(!isEdit,isInlineEditingDisabled)}" reRender="refMatchSectionId" value="{!$Label.Edit}" id="editButton" action="{!editRow}" onclick="PORShowLoading();" oncomplete="PORHideLoading();document.getElementById('pageId:formId:refMatchblockId:refMatchSectionId:saveButton').className = 'showButton';document.getElementById('pageId:formId:refMatchblockId:refMatchSectionId:cancelButton').className = 'showButton';" style="margin-left:40%;width:50px;"/>-->
                                <apex:commandButton styleClass="hideButton" value="{!$Label.Save}" id="saveButton" onclick="PORShowLoading();checkProcess();return false;" style="margin-left:40%;width:50px;"/>
                                <apex:commandButton styleClass="hideButton" value="{!$Label.Cancel}" id="cancelButton" Onclick="PORShowLoading();cancelAllReq();return false;" style="width:50px;"/>
                            </apex:outputPanel>
                            <apex:pageBlockTable value="{!allActiveReq}" var="reqWrap" id="specPbtRequest" >
                                <apex:column id="headerFooterId" headerValue="{!$Label.Action}">
                                    <apex:inputhidden value="{!reqWrap.id}" id="selectsingleHiddenReq"/>
                                    <apex:outputPanel id="radioPanelId"  rendered="{!NOT(OR(reqWrap.rra.Account_Request_Status__c == 'Unavailable',reqWrap.unSpec.Unspecified_Request_Status__c == 'No Reference Match',reqWrap.unSpec.Unspecified_Request_Status__c == 'No Longer Needed', reqWrap.rra.Account_Request_Status__c == 'No Longer Needed', CONTAINS(reqWrap.rra.Account_Request_Status__c, 'Give Up'), reqWrap.rra.Account_Request_Status__c == 'No Response',reqWrap.rra.Account_Request_Status__c == 'Completed'))}"><input type="radio" id="radioID" Class="{!JSENCODE(reqWrap.Id)}"  name="radioName" value="{!reqWrap.id}"  onclick="PORShowLoading();assignUnspecReqIdJS('{!JSENCODE(reqWrap.id)}', this,{!reqWrap.isUr});" /></apex:outputPanel>
                                    <apex:outputPanel id="radioPanelId2" rendered="{!OR(reqWrap.rra.Account_Request_Status__c == 'Unavailable',reqWrap.unSpec.Unspecified_Request_Status__c == 'No Reference Match',reqWrap.unSpec.Unspecified_Request_Status__c == 'No Longer Needed', CONTAINS(reqWrap.rra.Account_Request_Status__c, 'Give Up'),reqWrap.rra.Account_Request_Status__c == 'No Response', reqWrap.rra.Account_Request_Status__c == 'No Longer Needed', reqWrap.rra.Account_Request_Status__c == 'Completed')}"><input type="radio" disabled="disabled" name="radioName" value="{!reqWrap.id}" /></apex:outputPanel>
                                </apex:column> 
                                <apex:column headerValue="{!$Label.Type}">
                                    <apex:outputPanel onclick="enabletoUpdateJS('{!JSENCODE(reqWrap.Id)}',this,false,{!reqWrap.isUr});" rendered="{!AND(reqWrap.id != selectedaccountReq, NOT(OR(reqWrap.rra.Account_Request_Status__c == 'Unavailable',reqWrap.rra.Account_Request_Status__c == 'No Response', CONTAINS(reqWrap.rra.Account_Request_Status__c, 'Give Up'), reqWrap.unSpec.Unspecified_Request_Status__c == 'No Longer Needed', reqWrap.rra.Account_Request_Status__c == 'No Longer Needed', reqWrap.rra.Account_Request_Status__c == 'Completed')))}">
                                        <apex:outputField id="typePanelField" value="{!reqWrap.rra.Reference_Type_Needed__c}" rendered="{!!(reqWrap.isUR)}">
                                            <apex:InlineEditSupport event="ondblclick"/>
                                        </apex:outputField>
                                        <apex:outputField id="typePanelFieldUnspecified" value="{!reqWrap.unSpec.Reference_Type_Needed__c}" rendered="{!(AND(reqWrap.isUR,reqWrap.unSpec.Unspecified_Request_Status__c != 'No Reference Match',reqWrap.isUR))}">
                                            <apex:InlineEditSupport event="ondblclick"/>
                                        </apex:outputField>
                                    </apex:outputPanel>
                                    <apex:outputPanel id="typePanelEdit" rendered="{!AND(isEdit, NOT(OR(reqWrap.rra.Account_Request_Status__c == 'Unavailable',reqWrap.rra.Account_Request_Status__c == 'No Response', CONTAINS(reqWrap.rra.Account_Request_Status__c, 'Give Up'), reqWrap.unSpec.Unspecified_Request_Status__c == 'No Longer Needed', reqWrap.rra.Account_Request_Status__c == 'No Longer Needed', reqWrap.rra.Account_Request_Status__c == 'Completed')))}">
                                        <apex:inputField id="typePanelField1"  value="{!reqWrap.rra.Reference_Type_Needed__c}" rendered="{!AND(!(reqWrap.isUR), reqWrap.id == selectedaccountReq)}"/>
                                        <apex:inputField id="typePanelFieldUnspecified1" value="{!reqWrap.unSpec.Reference_Type_Needed__c}" rendered="{!AND(reqWrap.isUR,reqWrap.unSpec.Unspecified_Request_Status__c != 'No Reference Match',reqWrap.unSpec.Unspecified_Request_Status__c != 'No Longer Needed', reqWrap.id == selectedaccountReq)}"/>
                                    </apex:outputPanel>
                                    <apex:outputPanel rendered="{!OR(reqWrap.rra.Account_Request_Status__c == 'Unavailable',reqWrap.unSpec.Unspecified_Request_Status__c == 'No Reference Match',reqWrap.unSpec.Unspecified_Request_Status__c == 'No Longer Needed',reqWrap.rra.Account_Request_Status__c == 'No Response', CONTAINS(reqWrap.rra.Account_Request_Status__c, 'Give Up'), reqWrap.rra.Account_Request_Status__c == 'No Longer Needed', reqWrap.rra.Account_Request_Status__c == 'Completed')}">
                                        <apex:outputField value="{!reqWrap.rra.Reference_Type_Needed__c}" rendered="{!AND(NOT(reqWrap.isUR),reqWrap.rra.Account_Request_Status__c != 'Unavailable')}"/>
                                        <apex:outputPanel id="editLinkDisableOp1" rendered="{!AND(NOT(reqWrap.isUR),reqWrap.rra.Account_Request_Status__c == 'Unavailable')}">
                                            <a href="#" style="pointer-events: none; color : lightgray;">{!reqWrap.rra.Reference_Type_Needed__r.Name}</a>
                                        </apex:outputPanel>
                                        <apex:outputField value="{!reqWrap.unSpec.Reference_Type_Needed__c}" rendered="{!reqWrap.isUR}"/>
                                    </apex:outputPanel>
                                </apex:column>
                                <apex:column headerValue="{!$Label.Account}" >
                                    <apex:outputField value="{!reqWrap.rra.Account__c}" rendered="{!AND(NOT(reqWrap.isUR),reqWrap.rra.Account_Request_Status__c != 'Unavailable')}"/>
                                    <apex:outputPanel id="editLinkDisableOp2" rendered="{!AND(NOT(reqWrap.isUR),reqWrap.rra.Account_Request_Status__c == 'Unavailable')}">
                                        <a href="#" style="pointer-events: none; color : lightgray;">{!reqWrap.rra.Account__r.Name}</a>
                                    </apex:outputPanel>
                                    <apex:outputText value="" rendered="{!(reqWrap.isUR)}"/>
                                </apex:column>
                                <apex:column headerValue="{!$Label.Contact}" >
                                    <apex:commandLink rendered="{!AND(NOT(reqWrap.isUR),NOT(OR(reqWrap.rra.Account_Request_Status__c == 'Unavailable',reqWrap.rra.Account_Request_Status__c == 'No Longer Needed', CONTAINS(reqWrap.rra.Account_Request_Status__c, 'Give Up'), reqWrap.rra.Account_Request_Status__c == 'Completed')), CONTAINS(refReqContactMap[reqWrap.Id], '*'))}" onClick="PORShowLoading();showContactBlock(true,false, '{!JSENCODE(reqWrap.rra.Account__c)}','{!JSENCODE(reqWrap.Id)}');return false;"  value="{!$Label.Display}"/>
                                    <apex:outputText style="{!IF(reqWrap.rra.Account_Request_Status__c == 'Unavailable', 'color : lightgray;', '')}" rendered="{!AND(NOT(reqWrap.isUR), NOT(CONTAINS(refReqContactMap[reqWrap.rra.Id], '*')))}" value="{!refReqContactMap[reqWrap.rra.Id]}"/>
                                </apex:column>
                                <apex:column headerValue="{!$Label.Deadline}">
                                    <apex:outputField value="{!reqWrap.rra.Deadline__c}" rendered="{!AND(NOT(reqWrap.isUR),reqWrap.rra.Account_Request_Status__c != 'Unavailable')}"/>
                                    <apex:outputText style="color : lightgray;" value="{!TEXT(MONTH(reqWrap.rra.Deadline__c))+'/'+TEXT(DAY(reqWrap.rra.Deadline__c))+'/'+TEXT(YEAR(reqWrap.rra.Deadline__c))}" rendered="{!AND(NOT(reqWrap.isUR),reqWrap.rra.Account_Request_Status__c == 'Unavailable')}"/>
                                    <apex:outputField value="{!reqWrap.unSpec.Deadline__c}" rendered="{!(reqWrap.isUR)}"/> 
                                </apex:column>
                                <apex:column headerValue="{!$Label.Process}">
                                    <apex:outputPanel Id="processId" onclick="enabletoUpdateJS('{!JSENCODE(reqWrap.Id)}',this,true,{!reqWrap.isUr});" rendered="{!AND(reqWrap.id != selectedaccountReq, NOT(OR(reqWrap.rra.Account_Request_Status__c == 'Unavailable',reqWrap.unSpec.Unspecified_Request_Status__c == 'No Longer Needed', CONTAINS(reqWrap.rra.Account_Request_Status__c, 'Give Up'), reqWrap.rra.Account_Request_Status__c == 'No Longer Needed', reqWrap.rra.Account_Request_Status__c == 'Completed')))}">
                                        <apex:outputText value="{!reqWrap.processStatus}" rendered="{!reqWrap.processStatus == 'Managed'}"/>
                                        <apex:outputField Id="inlineProcessId" value="{!reqWrap.rra.Process__c}" rendered="{!reqWrap.processStatus != 'Managed'}">
                                            <apex:InlineEditSupport event="ondblclick"/>
                                        </apex:outputField>
                                    </apex:outputpanel>
                                    <apex:outputPanel rendered="{!AND(isEdit, NOT(OR(reqWrap.rra.Account_Request_Status__c == 'Unavailable',reqWrap.unSpec.Unspecified_Request_Status__c == 'No Longer Needed', CONTAINS(reqWrap.rra.Account_Request_Status__c, 'Give Up'), reqWrap.rra.Account_Request_Status__c == 'No Longer Needed', reqWrap.rra.Account_Request_Status__c == 'Completed')))}">
                                        <apex:outputText value="{!reqWrap.processStatus}" rendered="{!AND(reqWrap.id == selectedaccountReq,reqWrap.processStatus == 'Managed')}"/>
                                        <apex:inputField Id="inlineProcessIdEdit" value="{!reqWrap.rra.Process__c}" rendered="{!AND(!(reqWrap.isUR), reqWrap.id == selectedaccountReq,reqWrap.processStatus != 'Managed')}"/>
                                    </apex:outputpanel>
                                    <apex:outputPanel rendered="{!OR(reqWrap.rra.Account_Request_Status__c == 'Unavailable',reqWrap.unSpec.Unspecified_Request_Status__c == 'No Longer Needed', reqWrap.rra.Account_Request_Status__c == 'No Longer Needed', CONTAINS(reqWrap.rra.Account_Request_Status__c, 'Give Up'), reqWrap.rra.Account_Request_Status__c == 'Completed')}">
                                        <apex:outputText style="{!IF(reqWrap.rra.Account_Request_Status__c == 'Unavailable', 'color : lightgray;', '')}" value="{!reqWrap.processStatus}"/>
                                    </apex:outputPanel>
                                </apex:column>
                                <apex:column headerValue="{!$Label.Status}" >
                                    <apex:outputPanel id="inlineEditStatusId" onclick="enabletoUpdateJS('{!JSENCODE(reqWrap.Id)}',this,true,{!reqWrap.isUr});" rendered="{!AND(reqWrap.id != selectedaccountReq, NOT(OR(reqWrap.rra.Account_Request_Status__c == 'No Response',reqWrap.unSpec.Unspecified_Request_Status__c  == 'No Reference Match',reqWrap.rra.Account_Request_Status__c == 'Unavailable',reqWrap.unSpec.Unspecified_Request_Status__c == 'No Longer Needed', CONTAINS(reqWrap.rra.Account_Request_Status__c, 'Give Up'), reqWrap.rra.Account_Request_Status__c == 'No Longer Needed', reqWrap.rra.Account_Request_Status__c == 'Completed')))}">
                                        <apex:outputField id="ArstatusFieldId" value="{!reqWrap.rra.Account_Request_Status__c}" rendered="{!!(reqWrap.isUR)}">
                                            <apex:InlineEditSupport id="Arinline" event="ondblclick"/>
                                        </apex:outputField>
                                        <apex:outputField id="UrstatusFieldId" value="{!reqWrap.unSpec.Unspecified_Request_Status__c}" rendered="{!reqWrap.isUR}">
                                            <apex:InlineEditSupport id="Urinline" event="ondblclick"/>
                                        </apex:outputField>
                                    </apex:outputPanel>
                                    <apex:outputPanel rendered="{!AND(isEdit, NOT(OR(reqWrap.rra.Account_Request_Status__c == 'No Response',reqWrap.rra.Account_Request_Status__c == 'Unavailable',reqWrap.unSpec.Unspecified_Request_Status__c == 'No Longer Needed', CONTAINS(reqWrap.rra.Account_Request_Status__c, 'Give Up'), reqWrap.rra.Account_Request_Status__c == 'No Longer Needed', reqWrap.rra.Account_Request_Status__c == 'Completed')))}">
                                        <apex:inputField id="ArstatusFieldIdEdit" value="{!reqWrap.rra.Account_Request_Status__c}" rendered="{!AND(!(reqWrap.isUR), reqWrap.id == selectedaccountReq)}"/>
                                        <apex:inputField id="UrstatusFieldIdEdit" value="{!reqWrap.unSpec.Unspecified_Request_Status__c}" rendered="{!AND(reqWrap.isUR,reqWrap.unSpec.Unspecified_Request_Status__c != 'No Longer Needed', reqWrap.id == selectedaccountReq)}"/>
                                    </apex:outputPanel>
                                    <apex:outputPanel rendered="{!OR(reqWrap.rra.Account_Request_Status__c == 'Unavailable',reqWrap.unSpec.Unspecified_Request_Status__c  == 'No Reference Match', CONTAINS(reqWrap.rra.Account_Request_Status__c, 'Give Up'), reqWrap.rra.Account_Request_Status__c == 'No Response',reqWrap.unSpec.Unspecified_Request_Status__c == 'No Longer Needed', reqWrap.rra.Account_Request_Status__c == 'No Longer Needed', reqWrap.rra.Account_Request_Status__c == 'Completed')}">
                                        <apex:outputField value="{!reqWrap.rra.Account_Request_Status__c}" rendered="{!AND(NOT(reqWrap.isUR),reqWrap.rra.Account_Request_Status__c != 'Unavailable')}"/>
                                        <apex:outputText style="color : lightgray;" value="{!reqWrap.rra.Account_Request_Status__c}" rendered="{!AND(NOT(reqWrap.isUR),reqWrap.rra.Account_Request_Status__c == 'Unavailable')}"/>
                                        <apex:outputField value="{!reqWrap.unSpec.Unspecified_Request_Status__c}" rendered="{!reqWrap.isUR}"/>
                                    </apex:outputPanel>
                                </apex:column>
                                <apex:column headerValue="{!$Label.Project}">
                                    <apex:outputLink style="{!IF(reqWrap.rra.Account_Request_Status__c == 'Unavailable', 'pointer-events: none; color : lightgray;', '')}" value="/{!reqWrap.Id}" target="_blank">{!$Label.Details}</apex:outputLink> 
                                </apex:column>
                                <apex:column headerValue="{!$Label.Notes}">
                                    <apex:outputpanel rendered="{!AND(!(reqWrap.isUR),reqWrap.rra.Request_Notes__c != '')}">
                                        <apex:outputText id="RRANotes" title="{!reqWrap.rra.Request_Notes__c}" value="{!$Label.Display}"/>
                                        <!--<a href="/{!reqWrap.rra.Id}" style="{!IF(reqWrap.rra.Account_Request_Status__c == 'Unavailable', 'pointer-events: none; color : lightgray;', '')}" id="{!reqWrap.rra.Id}" onblur="LookupHoverDetail.getHover('{!reqWrap.rra.Id}').hide();" onfocus="LookupHoverDetail.getHover('{!reqWrap.rra.Id}', '/{!reqWrap.rra.Id}/m?retURL=%2F{!reqWrap.rra.Id}&isAjaxRequest=1').show();" onmouseout="LookupHoverDetail.getHover('{!reqWrap.rra.Id}').hide();" onmouseover="LookupHoverDetail.getHover('{!reqWrap.rra.Id}', '/{!reqWrap.rra.Id}/m?retURL=%2F{!reqWrap.rra.Id}&isAjaxRequest=1').show();">{!$Label.Display}</a>-->
                                    </apex:outputpanel>
                                    <apex:outputpanel rendered="{!AND(reqWrap.isUR,reqWrap.unSpec.Request_Notes__c != '')}">
                                        <apex:outputText title="{!reqWrap.unSpec.Request_Notes__c}" value="{!$Label.Display}"/>
                                        <!--<a href="/{!reqWrap.unSpec.Id}" id="{!reqWrap.unSpec.Id}" onblur="LookupHoverDetail.getHover('{!reqWrap.unSpec.Id}').hide();" onfocus="LookupHoverDetail.getHover('{!reqWrap.unSpec.Id}', '/{!reqWrap.unSpec.Id}/m?retURL=%2F{!reqWrap.unSpec.Id}&isAjaxRequest=1').show();" onmouseout="LookupHoverDetail.getHover('{!reqWrap.unSpec.Id}').hide();" onmouseover="LookupHoverDetail.getHover('{!reqWrap.unSpec.Id}', '/{!reqWrap.unSpec.Id}/m?retURL=%2F{!reqWrap.unSpec.Id}&isAjaxRequest=1').show();">{!$Label.Display}</a>-->
                                    </apex:outputpanel>
                                    <apex:inputhidden id="denyNotes" value="{!reqWrap.rra.Approve_Deny_Notes__c}"/>
                                    <apex:inputhidden id="denyNotesUn" value="{!reqWrap.unSpec.Notes__c}"/>
                                </apex:column>
                                <apex:column id="headerFooterId2" headerValue="{!$Label.Edit}" rendered="{!isInlineEditingDisabled}">
                                    <apex:commandLink rendered="{!AND(!isEdit,NOT(OR(reqWrap.rra.Account_Request_Status__c == 'No Response', reqWrap.rra.Account_Request_Status__c == 'No Longer Needed', CONTAINS(reqWrap.rra.Account_Request_Status__c, 'Give Up'), reqWrap.rra.Account_Request_Status__c == 'Completed', reqWrap.rra.Account_Request_Status__c == 'Unavailable', reqWrap.unSpec.Unspecified_Request_Status__c == 'No Longer Needed', reqWrap.unSpec.Unspecified_Request_Status__c == 'Account Specified')))}" action="{!editRow}" onclick="PORShowLoading();" oncomplete="PORHideLoading();" reRender="refMatchSectionId,msgId">
                                        <apex:image url="{!$Resource.Edit}" height="12px" width="12px"/>
                                        <apex:param name="requestToEdit" value="{!reqWrap.id}" assignTo="{!selectedaccountReq}" />
                                    </apex:commandLink>
                                    <apex:commandLink rendered="{!AND(isEdit, reqWrap.id == selectedaccountReq)}" onclick="getReqInfoDetailsEdit('{!JSENCODE(reqWrap.Id)}',{!reqWrap.isUr});return false;" oncomplete="PORHideLoading();" reRender="requestPanel,msgId">
                                        <apex:image url="{!$Resource.Save}" height="12px" width="12px"/>
                                    </apex:commandLink>&nbsp;&nbsp;&nbsp;
                                    <apex:commandLink rendered="{!AND(isEdit, reqWrap.id == selectedaccountReq)}" onclick="PORShowLoading();cancelAllReq();return false;" oncomplete="PORHideLoading();" reRender="requestPanel,msgId">
                                        <apex:image url="{!$Resource.Cancel}" height="12px" width="12px"/>
                                        <apex:param name="requestToEdit" value="{!reqWrap.id}" assignTo="{!selectedaccountReq}"/>
                                    </apex:commandLink>
                                </apex:column> 
                            </apex:pageBlockTable> 
                        </apex:pageBlockSection>
                    </apex:pageBlock>
                    <apex:pageBlock rendered="{!request == null}">
                        <apex:outputPanel >
                            <apex:pageMessage summary="{!$Label.Request_Deleted_Message}" severity="Warning" strength="3" />
                        </apex:outputPanel>
                    </apex:pageBlock>
                </apex:outputPanel>
                <!-- End Bound 3 Req -->
                
                <div id="searchBoxId" style="float:left">
                    <apex:inputText maxlength="100" style="width:250px;" id="inputTextId" value="{!tempTextValue}" onkeypress="textSearch(event)" /> &nbsp;
                    <apex:commandButton value="{!$Label.Search}" onclick="doSearch();return false;"/>                   
                </div>
            
                <div id="helpmessageId" style="cursor: pointer; float:right" onmouseover="onHoverToLink()">
                    <span class="helpLink">{!$label.Help_for_this_page}</span>
                    <img src="/img/s.gif" alt="" class="helpIcon" title=""/>
                </div>
                
                <br/><br/>
                <apex:outputPanel id="bothSections">
                    <apex:repeat id="blockId" value="{!sectionOrder}" var="section">
                        <!-- Accounts Page Block -->
                        <apex:outputPanel id="accountOpId">
                            <apex:outputPanel rendered="{!section == 'account'}">
                                <apex:commandLink style="font-weight: bold;" value="{!$Label.Back_to_RF_Search}" oncomplete="PORHideLoading();" onclick="PORShowLoading();" action="{!backToReSearch}" rendered="{!AND(accountSearch.showMoreAccountRecords,showAccount)}" reRender="bothSections, contentOpId" />
                                <!-- Start Bound 3 Req -->
                                <apex:outputPanel layout="block" style="float:left;" rendered="{!AND(NOT(refMatch),NOT(isthisBasic),NOT(OR(contactSearch.showMoreContactRecords,contentSearch.showMoreContentRecords)),showAccount)}">
                                    
                                </apex:outputPanel>
                                <apex:outputPanel layout="block" style="float:right;margin-right: 3px;" rendered="{!AND(NOT(refMatch),NOT(fromLead),NOT(isthisBasic),NOT(OR(contactSearch.showMoreContactRecords,contentSearch.showMoreContentRecords)),showAccount,Not(preFilter))}">
                                    <apex:commandLink style="color:#1797C0;text-decoration: none;" value="{!$Label.Continue_without_selecting_Accounts}" onclick="continueWitoutAccount({!accounts.size}, 1, 'selectSingleAccountId');return false;"/>
                                </apex:outputPanel>
                                <!-- End Bound 3 Req -->
                                <apex:pageBlock id="accountPbId" title="{!$Label.Accounts} ({!IF(accountSearch.accountSize>2000, TEXT(2000)+'+', accountSearch.accountSize)})" rendered="{!AND(NOT(OR(contactSearch.showMoreContactRecords,contentSearch.showMoreContentRecords)),showAccount,Not(preFilter),NOT(isRefHubMatch))}">
                                    <apex:inputHidden value="{!accountSearch.accountSize}" id="accSizeFlagO"/>     
                                    <apex:outputPanel id="accountTypeId" rendered="{!AND(refMatch,NOT(request.Project_Type__c == 'Candidate'))}">
                                        <apex:selectRadio value="{!accountSearch.selectedType}" onchange="PORShowLoading();changeAccountType1();return false;">
                                            <apex:selectOptions value="{!accountSearch.items}"/>
                                        </apex:selectRadio>
                                    </apex:outputPanel>
                                    <apex:outputPanel id="accountTypeId2" rendered="{!AND(refMatch,request.Project_Type__c == 'Candidate')}">
                                        <apex:outputText style="color:red;" value="{!$Label.Displaying_Reference_Candidates_only}"/>
                                    </apex:outputPanel>
                                    
                                    <apex:pageBlockButtons location="top">
                                        <div style = "margin-left: 100px;" id="accountBtnId">
                                            <apex:commandButton id="selectAContinuePro" value="{!$Label.Select_Continue}" rendered="{!AND(NOT(refMatch),NOT(fromLead),showAccount, accounts.size > 0,NOT(isthisBasic))}" onclick="return validateSelection({!accounts.size}, 1, 'selectSingleAccountId','');"/>
                                            <apex:commandButton id="selectAContinueBasic" value="{!$Label.Select_Continue}" rendered="{!AND(NOT(refMatch),NOT(fromLead),showAccount, accounts.size > 0,isthisBasic)}" onclick="return validateSelection({!accounts.size}, 1, 'selectSingleAccountId','basic');"/>
                                            <apex:commandButton id="exportSearhcedAccounts" style="float: right" value="{!$Label.Export_Data}" rendered="{!AND(showExportButton, NOT(refMatch), showAccount, accounts!= null, accounts.size > 0,NOT(isthisBasic))}" onclick="return getDataToExport('SearchedAccounts');"/>
                                        </div> 
                                   </apex:pageBlockButtons>
                                  
                                    <apex:pageBlockSection columns="1" id="accountPbsId">
                                        <apex:outputPanel rendered="{!accounts.size == 0}">
                                            <apex:pageMessage summary="{!$Label.No_matches_found}" severity="Warning" strength="3" />
                                        </apex:outputPanel>
                                        
                                        <apex:outputPanel id="pbtAccount" rendered="{!AND(accounts!= null, accounts.size > 0)}">
                                            <table id = "accountTable" class = "rfSearchTable">
                                                <thead id = "accountTableHeader" style = "border-spacing: 29px !important;border-collapse:none !important">
                                                    <th id="accountActionColn" class="selection-checkbox">
                                                        <apex:outputPanel rendered="{!AND(NOT(refMatch), NOT(fromLead))}">
                                                            <apex:inputCheckBox id="selectAllAccountId"  onclick="selectAllChk(this, 'selectSingleAccountId', '{!accounts.size}', 'accountNoticeId', false)" />
                                                        </apex:outputPanel>
                                                    </th>   
                                                    <th class="assign-hit-action">
                                                        <apex:outputPanel rendered="{!AND(refMatch,NOT(isthisBasic))}">
                                                            {!$Label.Action}
                                                        </apex:outputPanel>
                                                    </th> 
                                                    
                                                    <th class="account-name">
                                                        {!$Label.Account_Name}
                                                    </th>
                                                    
                                                    <th class="acc-ref-content">
                                                        <apex:outputPanel rendered="{!AND(isAllowRelatedContent,NOT(refMatch))}"> 
                                                            {!$Label.Reference_Content}
                                                        </apex:outputPanel>
                                                    </th>
                                                    
                                                    <th id="alertColn" class="col-notice">
                                                        {!$Label.Notice} 
                                                    </th>
                                                    
                                                    <th class="col-about">
                                                        <span id = "accountAboutId">{!$Label.About} </span>
                                                    </th>  
                                                    
                                                    <th class="col-tag">
                                                        {!$Label.Tags}
                                                    </th>
                                                    
                                                    <th class="col-owner" style="width: 15%;">
                                                        <apex:outputPanel rendered="{!showOwner}">
                                                            {!$Label.Owner}
                                                        </apex:outputPanel>
                                                    </th>
                                                    <th class="col-assigned-count">
                                                        <apex:outputPanel rendered="{!AND(refMatch,NOT(isthisBasic))}">
                                                            {!$Label.Assigned}
                                                        </apex:outputPanel>
                                                    </th>
                                                    
                                                    <th class="col-hitlist-count">
                                                        <apex:outputPanel rendered="{!AND(refMatch,NOT(isthisBasic))}">
                                                            {!$Label.Hit_List}
                                                        </apex:outputPanel>
                                                        
                                                    </th>
                                                </thead>
                                                <tbody id = "accountTableBody">
                                                    <apex:variable id="index1" var="index" value="{!0}" />
                                                    
                                                    <apex:repeat value="{!accounts}" var="accWrap" >
                                                        <tr>
                                                            <td>    
                                                                <apex:outputPanel rendered="{!AND(NOT(refMatch), NOT(fromLead))}">
                                                                    <apex:inputCheckBox id="selectSingleAccountId" styleClass="selectSingleAccountId{! index }" value="{!accWrap.isSelected}" onclick="updateSelectedIdsSet('{!accWrap.accountId}');enableDisable(this, 'selectSingleAccountId', 'selectAllAccountId', '{!IF(accWrap.acc.Account_Level_RUL__c, IF(accWrap.acc.RUL_Limit_Reached__c, $Label.Limit_Reached,''),IF(accWrap.acc.Is_Contact_Limit_Reached__c, $Label.Limit_Reached,''))}');" />
                                                                    <div id = "selectsingleHidden{! index }"  style="display:none;">
                                                                        {!accWrap.accountId}
                                                                    </div>
                                                                </apex:outputPanel>
                                                            </td>
                                                            <td>
                                                                <apex:outputPanel rendered="{!AND(refMatch,NOT(isthisBasic))}"> 
                                                                    <apex:outputLink style="font-weight:bold;" onClick="checkUnspecSelected('', '{!JSENCODE(accWrap.acc.Account__c)}', ''); return false;">{!$Label.Assign}</apex:outputLink> | 
                                                                    <apex:commandLink style="{!IF(accWrap.isAlreadyHit, 'pointer-events: none;color : lightgray;font-weight:bold;', 'font-weight:bold;')}" value=" {!$Label.Hit}" onClick="checkForRadioSelected(true,false,'{!JSENCODE(accWrap.acc.Account__r.Id)}',null,{!accWrap.isAlreadyHit});return false;" rendered="{!AND(refMatch,NOT(isthisBasic))}" >
                                                                    </apex:commandLink>
                                                                </apex:outputPanel>
                                                            </td>
                                                            
                                                            <td>
                                                                <apex:outputLink target="_blank" value="/{!accWrap.acc.Account__c}">{!accWrap.acc.Account__r.name}</apex:outputLink>
                                                            </td> 
                                                            
                                                            <td> 
                                                                <apex:outputPanel rendered="{!AND(isAllowRelatedContent,NOT(refMatch))}">
                                                                    <apex:outputPanel rendered="{!accWrap.refContentCount < 9}">
                                                                        <img src="{!URLFOR($Resource.RFSearch_Icons, 'Content_Count_' + TEXT(accWrap.refContentCount) + '.svg')}" onclick ="loadReferenceContent('{!accWrap.acc.Account__c}', {!accWrap.refContentCount});" alt="Reference Content Count" style="cursor:pointer;" />  
                                                                    </apex:outputPanel>
                                                                    
                                                                    <apex:outputPanel rendered="{!accWrap.refContentCount > 9}">
                                                                        <img src="{!URLFOR($Resource.RFSearch_Icons,'Content_Count_10.svg')}" alt="Reference Content Count" style="cursor:pointer;" /> 
                                                                    </apex:outputPanel>
                                                                </apex:outputPanel> 
                                                            </td>
                                                            
                                                            <td>
                                                                <apex:outputPanel rendered="{!AND((accWrap.acc.Referenceability_Status__c == 'Caution'),
                                                                									NOT(OR(AND(accWrap.acc.Is_Contact_Limit_Reached__c, NOT(accWrap.acc.Account_Level_RUL__c)), 
                                                                										AND(accWrap.acc.RUL_Limit_Reached__c, accWrap.acc.Account_Level_RUL__c))))}">
                                                                    <img src="{!URLFOR($Resource.RFSearch_Icons,'Caution.svg')}" class="alert-imgs" alt="Caution" />  
                                                                </apex:outputPanel>
                                                                <apex:outputPanel rendered="{!AND(accWrap.acc.Is_Contact_Limit_Reached__c, NOT(accWrap.acc.Account_Level_RUL__c))}">
                                                                    <img src="{!URLFOR($Resource.RFSearch_Icons,'LimitReached.svg')}" class="alert-imgs" alt="Limit Reached" /> 
                                                                </apex:outputPanel>
                                                                <apex:outputPanel rendered="{!AND(accWrap.acc.RUL_Limit_Reached__c, accWrap.acc.Account_Level_RUL__c)}">
                                                                    <img src="{!URLFOR($Resource.RFSearch_Icons,'LimitReached.svg')}" class="alert-imgs" alt="Limit Reached" /> 
                                                                </apex:outputPanel>
                                                            </td>  
                                                            
                                                            <td>  
                                                                <img src="{!URLFOR($Resource.RFSearch_Icons,'Info_Icon.svg')}" rel="popup-ui" id="info_{!accWrap.acc.Account__c}"  onclick ="getAboutAccount('info_{!accWrap.acc.Account__c}','{!JSENCODE(accWrap.acc.Account__r.name)}','{!RULPeriodLength}','{!accWrap.acc.Default_Period_Completed_Uses__c}','{!accWrap.acc.RUL_Last_Activity_Date__c}','{!JSENCODE(accWrap.acc.Ref_Profile_Summary__c)}');" alt="About" height="25" width="25" style="cursor:pointer;" /> 
                                                            </td>
                                                            
                                                            <td>  
                                                                <!-- <img src="{!URLFOR($Resource.RFSearch_Icons,'Tags.svg')}" rel="tag-popup-ui" id="tag_{!accWrap.acc.Account__c}" onclick ="getTags('tag_{!accWrap.acc.Account__c}','{!JSENCODE(accWrap.acc.Account__r.name)}', '{!JSENCODE(accWrap.acc.Referenceability__c)}','{!JSENCODE(accWrap.acc.Attributes__c)}', true,false);" alt="Tags" height="30" width="30" style="cursor:pointer;" /> -->
                                                                <img src="{!URLFOR($Resource.RFSearch_Icons,'Tags.svg')}" rel="tag-popup-ui" id="tag_{!accWrap.acc.Account__c}" onclick ="document.getElementById('divTagPopupover').style.display = 'none'; PORShowLoading();getAttributeInfo('{!accWrap.acc.Id}');" alt="Tags" height="30" width="30" style="cursor:pointer;" />
                                                            </td>
                                                            
                                                            <td style="width: 15%;">
                                                                <apex:outputPanel rendered="{!showOwner}">
                                                                    <apex:outputPanel rendered="{!accWrap.acc.Reference_Owner__c == NULL}">
                                                                        <apex:outputField value="{!accWrap.acc.Account__r.OwnerId}" ></apex:outputField>
                                                                    </apex:outputPanel>
                                                                    
                                                                    <apex:outputPanel rendered="{!accWrap.acc.Reference_Owner__c != NULL}">
                                                                        <apex:outputField value="{!accWrap.acc.Reference_Owner__c}" ></apex:outputField>
                                                                    </apex:outputPanel>
                                                                </apex:outputPanel>
                                                            </td>
                                                            
                                                            <td>
                                                                <apex:outputPanel rendered="{!AND(refMatch,NOT(isthisBasic))}">
                                                                    <apex:outputText value="{!accWrap.relatedAR}"/>
                                                                </apex:outputPanel>
                                                            </td>
                                                            
                                                            <td>
                                                                <apex:outputPanel rendered="{!AND(refMatch,NOT(isthisBasic))}">
                                                                    <apex:outputText rendered="{!accWrap.hitListCount!=0}" value="{!accWrap.hitListCount}"/>
                                                                    <apex:outputText rendered="{!accWrap.hitListCount==0}" value="{!accWrap.hitListCount}"/>
                                                                </apex:outputPanel>
                                                            </td>
                                                        </tr>
                                                        <apex:variable id="index2" var="index" value="{! index + 1}" />
                                                    </apex:repeat>
                                                </tbody>
                                            </table>
                                        </apex:outputPanel>
                                        <div  id="showMoreAccount" style="height:0px;">                                            
                                            <apex:actionRegion >                                                                                             
                                                <apex:commandLink style="font-weight: bold; margin-left: 55px;" onclick="PORShowLoading();sendSelectedIdsAccount('{!accounts.size}',true,'link');return false;"  value="{!$Label.Show_More}"  rendered="{!AND(accountSearch.isAccountLimitExceed, NOT(accountSearch.showMoreAccountRecords),NOT(refMatch))}"  />
                                            <apex:commandLink style="font-weight: bold; margin-left: 55px;" onclick="PORShowLoading();" action="{!callShowMoreLink}" value="{!$Label.Show_More}"  rendered="{!AND(accountSearch.isAccountLimitExceed, NOT(accountSearch.showMoreAccountRecords),refMatch)}"  >
                                                    <apex:param name="accountParam" value="true" assignTo="{!accountSearch.showMoreAccountRecords}"/>
                                                    <apex:param name="contactParam" value="false" assignTo="{!contactSearch.showMoreContactRecords}"/>
                                                    <apex:param name="contentParam" value="false" assignTo="{!contentSearch.showMoreContentRecords}"/>
                                                </apex:commandLink>                                                
                                            </apex:actionRegion>                                            
                                        </div>
                                        <apex:outputPanel id="pagingPanel" >
                                            <apex:actionRegion >
                                                <apex:outputPanel rendered="{!AND(accountSearch.showMoreAccountRecords, accounts.size > 0)}">
                                                    <table border="0" align="center">
                                                        <tr> 
                                                            <td align="center">
                                                                <apex:image url="{!$Resource.Search_prevarrow}" rendered="{!accountSearch.pageIndex > 1}" width="5px" height="8px"/>&nbsp;
                                                                <apex:commandLink value="{!$Label.Previous_Page}" reRender="accountPbId" rendered="{!accountSearch.pageIndex > 1}" onclick="PORShowLoading();sendSelectedIdsAccount('{!accounts.size}',false,'previous');return false;" /> 
                                                                &nbsp;&nbsp;
                                                                <apex:outputText >
                                                                    {!(accountSearch.pageIndex * accountSearch.pageLimit)+1-accountSearch.pageLimit}-{!(accountSearch.pageIndex * accountSearch.pageLimit) - (accountSearch.pageLimit - accounts.size)}
                                                                </apex:outputText>
                                                                &nbsp;&nbsp;
                                                                <apex:commandLink value="{!$Label.Next_Page} " reRender="accountPbId" rendered="{!accountSearch.isNextRender}" onclick="PORShowLoading();sendSelectedIdsAccount('{!accounts.size}',false,'next');return false;" />&nbsp; 
                                                                <apex:image url="{!$Resource.Search_nextarrow}" rendered="{!accountSearch.isNextRender}" width="5px" height="8px"/>
                                                            </td>                                                  
                                                        </tr>
                                                    </table>   
                                                </apex:outputPanel> 
                                            </apex:actionRegion> 
                                        </apex:outputPanel>
                                    </apex:pageBlockSection>
                                    <script language="javascript" type="text/javascript">
                                    previouslyselectedaccount = {!accountSearch.isAccountSelected};
                                    deSelectAllChk('selectAllAccountId');
                                    </script>
                                </apex:pageBlock>  
                            </apex:outputPanel> 
                        </apex:outputPanel>
                        <!-- Contacts Page Block -->
                        <apex:outputPanel id="contactOpId">
                            <apex:outputPanel rendered="{!section == 'contact'}">
                                <apex:commandLink style="font-weight: bold;" value="{!$Label.Back_to_RF_Search}" action="{!backToReSearch}" rendered="{!AND(contactSearch.showMoreContactRecords,NOT(isRefHubMatch))}" reRender="bothSections, contentOpId" onclick="PORShowLoading();" oncomplete="PORHideLoading();"/>
                                <apex:commandLink style="font-weight: bold;" value="{!$Label.Show_All}" action="{!showAll}" rendered="{!contactSearch.accountId != null}" reRender="bothSections" onclick="PORShowLoading();" oncomplete="PORHideLoading();"/>
                                <apex:pageBlock id="contactPbId" title="{!$Label.Contacts} ({!IF(contactSearch.contactSize>2000, TEXT(2000)+'+', contactSearch.contactSize)})" rendered="{!AND(NOT( OR(accountSearch.showMoreAccountRecords, contentSearch.showMoreContentRecords)),OR(showContact,showHitContacts),OR(!isShraredContact,contactSearch.accountId!= null,!refMatch),showContactBlock)}">                       
                                    <apex:outputPanel id="contactTypeId" rendered="{!AND(refMatch,NOT(request.Project_Type__c == 'Candidate'),NOT(isRefHubMatch))}">
                                        <apex:selectRadio value="{!contactSearch.selectedType}" onchange="PORShowLoading();changeContactType1();return false;">
                                            <apex:selectOptions value="{!contactSearch.items}"/>
                                        </apex:selectRadio>
                                    </apex:outputPanel>
                                    
                                    <apex:outputPanel id="contactTypeId2" rendered="{!AND(refMatch,request.Project_Type__c == 'Candidate')}">
                                        <apex:outputText style="color:red;" value="{!$Label.Displaying_Reference_Candidates_only}"/>
                                    </apex:outputPanel>
                                    
                                    <!-- added for #1135 - Gaurav Saini (5 Dec, 2017) -->
                                    <apex:pageBlockButtons location="top">
                                        <apex:commandButton id="exportSearhcedContacts" style="float: right" value="{!$Label.Export_Data}" rendered="{!AND(showExportButton,NOT(refMatch), showContact,contacts != null, contacts.size > 0, NOT(isthisBasic))}" onclick="return getDataToExport('SearchedContacts');" />
                                    </apex:pageBlockButtons>
                                    
                                    <apex:pageBlockSection columns="1" id="contactPbsId">
                                        <script>
                                        contactBlockDisplayed = {!showContact};
                                        </script>
                                        <apex:outputPanel rendered="{!contacts.size == 0}">
                                            <apex:pageMessage summary="{!$Label.No_matches_found}" severity="Warning" strength="3" />
                                        </apex:outputPanel>
                                        <apex:outputPanel id="pbtAccount" rendered="{!AND(contacts!= null, contacts.size > 0)}">
                                            <table id = "contactTable" class = "rfSearchTable">
                                                <thead style = "border-spacing: 29px !important;border-collapse:none !important">
                                                    <th class="assign-hit-action">
                                                        <apex:outputPanel rendered="{!AND(refMatch,NOT(isthisBasic),NOT(isRefHubMatch))}">
                                                            {!$Label.Action}
                                                        </apex:outputPanel>
                                                    </th> 
                                                    <th class="selection-checkbox">
                                                        <apex:outputPanel rendered="{!isRefHubMatch}">
                                                            <apex:inputCheckbox value="{!isSelectAllContacts}" onclick="PORShowLoading();selectAllContacts();return false;"/>
                                                        </apex:outputPanel>
                                                    </th>
                                                    <th style="width: 50px;" rendered="{!NOT(isRefHubMatch)}">  &nbsp;
                                                    </th>
                                                    <th class="text-left contact-name">
                                                        {!$Label.Contact_Name}
                                                    </th>
                                                    <th class="contact-email">
                                                        <apex:outputPanel rendered="{!isRefHubMatch}">
                                                            Contact Email
                                                        </apex:outputPanel>
                                                    </th>
                                                    
                                                    <th class="text-left account-name">
                                                        {!$Label.Account_Name}
                                                    </th> 
                                                    
                                                    <th class="text-center col-notice">
                                                        {!$Label.Notice}
                                                    </th>
                                                    
                                                    <th class="col-about text-center">
                                                        {!$Label.About} 
                                                    </th>
                                                    <th class="col-tag">
                                                        {!$Label.Tags}
                                                    </th>
                                                    <th class="text-left col-owner" style="width: 15%;">
                                                        <apex:outputPanel rendered="{!showOwner}">
                                                            {!$Label.Owner}
                                                        </apex:outputPanel>
                                                    </th> 
                                                    <th class="col-assigned-count">
                                                        <apex:outputPanel rendered="{!AND(refMatch,NOT(isthisBasic),NOT(isRefHubMatch))}">
                                                            {!$Label.Assigned}
                                                        </apex:outputPanel>
                                                    </th> 
                                                    <th class="col-hitlist-count">
                                                        <apex:outputPanel rendered="{!AND(refMatch,NOT(isthisBasic),NOT(isRefHubMatch))}">
                                                            {!$Label.Hit_List}
                                                        </apex:outputPanel> 
                                                    </th>
                                                </thead>
                                                <tbody>   
                                                    <apex:repeat value="{!contacts}" var="contWrap" id="pbtContact" >
                                                        <tr>
                                                            <td>  
                                                                <apex:outputPanel rendered="{!AND(refMatch,NOT(isthisBasic),NOT(isRefHubMatch))}">
                                                                    <apex:outputLink style="font-weight:bold;" onClick="checkUnspecSelected('', '', '{!JSENCODE(contWrap.con.Contact__c)}'); return false;">{!$Label.Assign}</apex:outputLink> |
                                                                    <apex:commandLink style="{!IF(contWrap.isAlreadyHit, 'pointer-events: none;color : lightgray;font-weight:bold;', 'font-weight:bold;')}" onclick="checkForRadioSelected(false,true,null,'{!JSENCODE(contWrap.con.Contact__r.Id)}',{!contWrap.isAlreadyHit});return false;"  value=" {!$Label.Hit}"  rendered="{!AND(refMatch,NOT(isthisBasic))}" > 
                                                                    </apex:commandLink>
                                                                </apex:outputPanel>
                                                            </td>
                                                            <td>
                                                                <!-- REF-2304 -->
                                                                <apex:outputPanel rendered="{!AND(isRefHubMatch)}">
                                                                    <apex:inputCheckbox value="{!contWrap.isSelected}"
                                                                                        onclick="PORShowLoading();onSingleContactSelect('{!contWrap.con.Contact__r.Id}');return false;"
                                                                                        disabled="{!contWrap.con.Contact__r.Email == null}"/>
                                                                </apex:outputPanel>
                                                            </td>
                                                            <td rendered="{!NOT(isRefHubMatch)}"></td>
                                                            <td class="text-left">
                                                                <apex:outputLink target="_blank" value="/{!contWrap.con.Contact__r.Id}">{!contWrap.con.contact__r.name}</apex:outputLink>
                                                            </td>
                                                            <td>
                                                            	<apex:outputText rendered="{!isRefHubMatch}" value="{!contWrap.con.Contact__r.Email}"/>
                                                            </td>
                                                            
                                                            <td>
                                                                <apex:outputField value="{!contWrap.con.Contact__r.AccountId}" ></apex:outputField>
                                                            </td>
                                                            
                                                            <td class="text-center col-notice">
                                                                <apex:outputPanel rendered="{!AND((contWrap.con.Referenceability_Status__c == 'Caution'),
                                                                									NOT(IF(contactSearch.mapAccountRBIofContactRBI[contWrap.con.Account__c].Account_Level_RUL__c, 
                                                                										IF(contactSearch.mapAccountRBIofContactRBI[contWrap.con.Account__c].RUL_Limit_Reached__c, True,False),
                                                                										IF(contWrap.con.RUL_Limit_Reached__c, True,False))))}">
                                                                    <img src="{!URLFOR($Resource.RFSearch_Icons,'Caution.svg')}" class="alert-imgs" alt="Caution" />
                                                                </apex:outputPanel>
                                                                <apex:outputPanel rendered="{!IF(contactSearch.mapAccountRBIofContactRBI[contWrap.con.Account__c].Account_Level_RUL__c, IF(contactSearch.mapAccountRBIofContactRBI[contWrap.con.Account__c].RUL_Limit_Reached__c, True,False),IF(contWrap.con.RUL_Limit_Reached__c, True,False))}">
                                                                    <img src="{!URLFOR($Resource.RFSearch_Icons, 'LimitReached.svg')}" class="alert-imgs" alt="Limit Reached" />
                                                                </apex:outputPanel>
                                                            </td>
                                                            
                                                            <td class="text-center">
                                                                <img src="{!URLFOR($Resource.RFSearch_Icons,'Info_Icon.svg')}" rel="popup-ui" id="info_{!contWrap.con.Contact__c}"  onclick ="getAboutAccount('info_{!contWrap.con.Contact__c}','{!JSENCODE(contWrap.con.contact__r.name)}','{!RULPeriodLengthContact}','{!contWrap.con.Default_Period_Completed_Uses__c}','{!contWrap.con.RUL_Last_Activity_Date__c}','{!JSENCODE(contWrap.con.Ref_Profile_Summary__c)}')" alt="About" height="25" width="25" style="cursor:pointer;" />
                                                            </td>
                                                            
                                                            <td class="text-center"> 
                                                                <!-- <img src="{!URLFOR($Resource.RFSearch_Icons,'Tags.svg')}" rel="tag-popup-ui" id="tag_{!contWrap.con.Contact__c}" onclick ="PORShowLoading();getTags('tag_{!contWrap.con.Contact__c}','{!JSENCODE(contWrap.con.contact__r.name)}','{!JSENCODE(contWrap.con.Referenceability__c)}','{!JSENCODE(contWrap.con.Attributes__c)}',true,true);PORHideLoading();" alt="Tags" height="23" width="23" style="cursor:pointer;" /> -->
                                                                <img src="{!URLFOR($Resource.RFSearch_Icons,'Tags.svg')}" rel="tag-popup-ui" id="tag_{!contWrap.con.Contact__c}" onclick ="document.getElementById('divTagPopupover').style.display = 'none'; PORShowLoading();getAttributeInfo('{!contWrap.con.Id}');" alt="Tags" height="30" width="30" style="cursor:pointer;" />
                                                            </td>
                                                            <td style="width: 15%;">
                                                                <apex:outputPanel rendered="{!showOwner}">
                                                                    <apex:outputField value="{!contWrap.con.Contact__r.OwnerId}" ></apex:outputField>
                                                                </apex:outputPanel>
                                                            </td> 
                                                            <td class="text-center">
                                                                <apex:outputPanel rendered="{!AND(refMatch,NOT(isthisBasic),NOT(isRefHubMatch))}">
                                                                    <apex:outputText value="{!contWrap.relatedAR}"/>
                                                                </apex:outputPanel>
                                                            </td>
                                                            
                                                            <td class="text-center">
                                                                <apex:outputPanel rendered="{!AND(refMatch,NOT(isthisBasic),NOT(isRefHubMatch))}">
                                                                    <apex:outputText rendered="{!contWrap.hitListCount!=0}" value="{!contWrap.hitListCount}"/>
                                                                    <apex:outputText rendered="{!contWrap.hitListCount==0}" value="{!contWrap.hitListCount}"/>
                                                                </apex:outputPanel>
                                                            </td>
                                                        </tr>
                                                    </apex:repeat>
                                                </tbody>
                                                
                                            </table>
                                        </apex:outputPanel>
                                        <!-- Show more Link-->
                                        <apex:actionRegion >
                                            <!-- REF-1964 -->
                                            <apex:commandLink style="font-weight: bold; margin-left: 54px;" action="{!callShowMoreLink}"
                                                              value="{!$Label.Show_More}" reRender="bothSections, contentOpId"
                                                              rendered="{!AND(contactSearch.isContactLimitExceed, NOT(contactSearch.showMoreContactRecords),isRefHubMatch)}"
                                                              onclick="PORShowLoading();" oncomplete="preSelectHubContacts();">
                                                <apex:param name="accountParam" value="false" assignTo="{!accountSearch.showMoreAccountRecords}"/>
                                                <apex:param name="contactParam" value="true" assignTo="{!contactSearch.showMoreContactRecords}"/>
                                                <apex:param name="contentParam" value="false" assignTo="{!contentSearch.showMoreContentRecords}"/>
                                            </apex:commandLink>
                                            <apex:commandLink style="font-weight: bold; margin-left: 54px;" action="{!callShowMoreLink}"
                                                              value="{!$Label.Show_More}" reRender="bothSections, contentOpId"
                                                              rendered="{!AND(contactSearch.isContactLimitExceed, NOT(contactSearch.showMoreContactRecords), NOT(isRefHubMatch))}"
                                                              onclick="PORShowLoading();" oncomplete="PORHideLoading();">
                                                <apex:param name="accountParam" value="false" assignTo="{!accountSearch.showMoreAccountRecords}"/>
                                                <apex:param name="contactParam" value="true" assignTo="{!contactSearch.showMoreContactRecords}"/>
                                                <apex:param name="contentParam" value="false" assignTo="{!contentSearch.showMoreContentRecords}"/>
                                            </apex:commandLink>
                                        </apex:actionRegion>
                                        
                                        <!-- Paging Panel-->
                                        <apex:outputPanel id="pagingPanel" >
                                            <apex:actionRegion >
                                                <apex:outputPanel rendered="{!AND(contactSearch.showMoreContactRecords, contacts.size > 0)}">
                                                    <table border="0" align="center">
                                                        <tr> 
                                                            <td align="center">
                                                                <apex:image url="{!$Resource.Search_prevarrow}" rendered="{!contactSearch.pageIndex > 1}" width="5px" height="8px"/>&nbsp;
                                                                <apex:commandLink value="{!$Label.Previous_Page}" reRender="contactPbId" rendered="{!contactSearch.pageIndex > 1}" onclick="contactSearchPrev();return false;" oncomplete="PORHideLoading();"/> 
                                                                &nbsp;&nbsp;
                                                                <apex:outputText >
                                                                    {!(contactSearch.pageIndex * contactSearch.pageLimit)+1-contactSearch.pageLimit}-{!(contactSearch.pageIndex * contactSearch.pageLimit) - (contactSearch.pageLimit - contacts.size)}
                                                                </apex:outputText>
                                                                &nbsp;&nbsp;
                                                                <apex:commandLink value="{!$Label.Next_Page} " reRender="contactPbId" rendered="{!contactSearch.isNextRender}" onclick="contactSearchNext();return false;" oncomplete="PORHideLoading();"/>&nbsp; 
                                                                <apex:image url="{!$Resource.Search_nextarrow}" rendered="{!contactSearch.isNextRender}" width="5px" height="8px"/>
                                                            </td>                                                  
                                                        </tr>
                                                    </table>   
                                                </apex:outputPanel> 
                                            </apex:actionRegion> 
                                        </apex:outputPanel>
                                    </apex:pageBlockSection>
                                    
                                    <script language="javascript" type="text/javascript">
                                    deSelectAllChk('selectAllContactPbtId');
                                    </script>
                                </apex:pageBlock> 
                            </apex:outputPanel>
                        </apex:outputPanel>
                    </apex:repeat>
                </apex:outputPanel>
                <!-- Contents Page Block -->
                <apex:outputPanel id="contentOpId" rendered="{!NOT(refMatch)}">
                    <apex:outputPanel id="transcriptPlayPanel">
                        <script>
                        function downloadContents(size, pageBlockNo, selectSingleContentPbtId, isRefContent) {   
                            var hasChecked = false;
                            var selectedContentIds = '' ;
                            var hasLinkUrl = false;
                            
                            if (selectedContectIdsSet.length > 0 ) {
                                hasChecked = true;
                                selectedContentIds = selectedContectIdsSet.join();
                            }
                            
                            if (hasChecked && selectedLinkContectIdsSet.length > 0) {
                                hasLinkUrl = true;
                            }
                            
                            if (hasLinkUrl) {
                                alert('{!$Label.Link_Content_Message}');
                            }
                            
                            var count = 0;
                            
                            if (selectedContectIdsSet.length == 0) {
                                
                                for (var i=0; i < size; i++) {
                                    var id ;
                                    var contentCheckBox ;
                                    var contentTypeId ;
                                    
                                    if (isRefContent) {
                                        id = "#selectAccRefContentIdHidden"+i; 
                                        contentCheckBox = '.selectSingleRefContentPbtId'+i; ;
                                        contentTypeId = ".fileRefTypeHiddenId"+i+" > input:hidden";
                                    } else {
                                        id = "#selectRefContentIdHidden"+i; 
                                        contentCheckBox = '.selectSingleContentPbtId'+i; ;
                                        contentTypeId = ".fileTypeHiddenId"+i+" > input:hidden";
                                    } 
                                    count++;
                                 
                                    if (jQuery(contentTypeId).val() != 'LINK' && jQuery(contentCheckBox).is(':checked')) { 
                                        var tmp = jQuery(id).html();
                                        selectedContentIds = (selectedContentIds == '')  ? tmp : selectedContentIds+','+tmp ;
                                    } 
                                }
                                 
                                //if no content selected 
                                if (hasChecked == false || count == 0){
                                    selectSingleContentPbtId = []; 
                                    selectedContentIds ='';
                                    alert('{!$Label.Select_Atleast_One_Content}'); 
                                    return false;
                                }
                            }
                            
                            //If only link content selected 
                            if (count > 0 && (selectedContectIdsSet.length == 0 && selectedContentIds == '')) {
                                alert('{!$Label.Link_Content_Message}');
                                return false;
                            }
                            
                            downloadContentFiles(selectedContentIds); 
                            return false;
                        } 
                        
                        </script>
                    </apex:outputPanel>
                    <apex:commandLink style="font-weight: bold;" value="{!$Label.Back_to_RF_Search}" onComplete="PORHideLoading();" onclick="PORShowLoading();" action="{!backToReSearch}" rendered="{!AND(contentSearch.showMoreContentRecords)}" reRender="accountOpId, contactOpId, contentOpId"/>
                    <apex:outputPanel layout="block" style="float:right; margin-right: 3px;" rendered="{!AND(NOT(OR(accountSearch.showMoreAccountRecords, contactSearch.showMoreContactRecords)),showRefContent,Not(preFilter),contentCollections.size > 1)}">
                        <apex:commandLink style="color:#1797C0;text-decoration: none;" value="{!$Label.use_a_Content_Collection}" onclick="openSelectCollection();return false;"/>
                    </apex:outputPanel>
                    <apex:pageBlock title="{!$Label.Content} ({!IF(contentSearch.contentSize>2000, TEXT(2000)+'+', contentSearch.contentSize)})" id="contentPbId" rendered="{!AND(NOT(OR(accountSearch.showMoreAccountRecords, contactSearch.showMoreContactRecords)),showRefContent,Not(preFilter))}">
                        <!-- Added for sharable switch R14.87  -->
                        <apex:inputHidden value="{!contentSearch.contentSize}" id="contntSizeFlag"/>    
                     <!-- Added for sharable switch R14.87 -->
                      
                        <div>
                        <apex:pageBlockButtons id="contentPbbId" location="top"> 
                            <!-- Added for sharable switch R14.87 -->
                            <c:PORShareableSwitch id="porSharabeleSwitch" />
                            <!-- Added for sharable switch R14.87 -->
                            <apex:commandButton value="{!$Label.Download}" rendered="{!AND(contents != null, contents.size > 0, isCRMContentUser)}" onclick="return downloadContents({!contents.size}, 2, 'selectSingleContentPbtId', false);" title="Downloads a zip file of the selected content." />
                        <span id="shareButton">
                            <apex:commandButton value="{!IF(invitationcontroller.showShareButton, $Label.Share, $Label.Return_to_Invitation)}" onclick="shareContentCall({!contents.size});PORShowLoading(); return false;" rendered="{!AND(contents != null, contents.size > 0, isCRMContentUser)}" />
                           </span>
                            <apex:commandButton value="{!$Label.Create_Collection}" onclick="openCreateCollection({!contents.size}); return false;" rendered="{!AND(NOT(fromLead), contents != null, contents.size > 0, isCRMContentUser, isCollectionCreateable)}" /> 
                            <apex:commandButton id="exportSearhcedContent" style="float: right" value="{!$Label.Export_Data}" rendered="{!AND(showExportButton, isCRMContentUser, contents!= null, contents.size > 0, NOT(isthisBasic))}" onclick="return getDataToExport('SearchedContent');"/>
                        </apex:pageBlockButtons>
                        </div>
                        <apex:pageBlockSection columns="1" id="contentPbsId">
                            <apex:outputPanel rendered="{!contents.size == 0}">
                                <apex:pageMessage summary="{!$Label.No_matches_found}" severity="Warning" strength="3" />
                            </apex:outputPanel>
                            <!-- Added for sharable switch R14.87 -->
                            <apex:inputHidden value="{!contentSearch.showMoreContentRecords}" id="contentSharingFlag"/>
                            <apex:inputHidden value="{!contentSearch.sharableContent}" id="cSharingFlag"/>
                            <!-- Added for sharable switch R14.87 -->
                            <apex:outputPanel id="pbtContent" rendered="{!AND(contents != null, contents.size > 0)}">
                             <apex:inputhidden id="isRefInterviewType" value="{!contentSearch.isRefInterviewType}"/>
                             <apex:inputhidden id="isCustomContent" value="{!contentSearch.isCustomContent}"/>
                             <apex:inputhidden id="isContentVersionId" value="{!contentSearch.isContentVersionId}"/>
                              
                                <table id = "contentTable" class = "rfSearchTable">
                                    <thead id  ="contentTableHeader" style = "border-spacing: 29px !important;border-collapse:none !important">
                                        <th id="contentActionColn">
                                            <apex:inputCheckBox id="selectAllContentPbtId"  onclick="selectAllChk(this, 'selectSingleContentPbtId', {!contents.size}, null, false)" />
                                        </th> 
                                        <th>
                                            <apex:outputPanel >
                                                <apex:image title="{!$Label.Featured_Content}" url="{!URLFOR($Resource.starImages,'startImages/starchecked.png')}" onclick="setTheFeaturedCheckbox();PORShowLoading();" rendered="{!contentSearch.featuredChecked}"/>
                                                <apex:image title="{!$Label.Featured_Content}" url="{!URLFOR($Resource.starImages,'startImages/startunchecked.png')}" onclick="setTheFeaturedCheckbox();PORShowLoading();" rendered="{!!contentSearch.featuredChecked}"/>
                                            </apex:outputPanel>
                                        </th>
                                        
                                        <th>
                                            {!$Label.Share}
                                        </th>
                                        
                                        <th> 
                                        </th>
                                        
                                        <th>
                                            {!$Label.Title}
                                        </th> 
                                        <th>
                                            {!$Label.Reference_Content_Type}
                                        </th>
                                        <th>
                                            {!$Label.Account}
                                        </th>
                                        
                                        <th>
                                            {!$Label.Publish_Date}
                                        </th>
                                        <th>
                                            {!$Label.Tags} 
                                        </th>
                                        
                                        <th>
                                            {!$ObjectType.Reference_Content__c.fields.Language__c.Label}
                                        </th> 
                                        
                                    </thead>
                                    
                                    <tbody id  ="contentTableBody">
                                        <apex:variable id="index1" var="index" value="{!0}" />
                                        <apex:repeat value="{!contents}" var="contentWrap" > 
                                            <tr>
                                                <td> 
                                                    <apex:inputCheckBox styleClass="selectSingleContentPbtId{!index}" disabled="{!OR(NOT(isCRMContentUser),contentWrap.refContent.Internal_Use__c,AND(!contentWrap.refContent.Custom_Reference_Content__c, NOT(OR(contentWrap.refContent.Content_ID__c != null,contentWrap.refContent.Reference_Content_Type__r.Recorded_Reference_Type__c))))}" id="selectSingleContentPbtId" value="{!contentWrap.isSelected}" onclick="updateSelectedIdsContent('{!contentWrap.refContent.id}','{!contentWrap.contentVersion.FileType}',this.checked);enableDisable(this, 'selectSingleContentPbtId', 'selectAllContentPbtId', null)" />
                                                    <div class = "selectSingleContentIdHidden{! index }" >
                                                        <apex:inputhidden value="{!contentWrap.contentVersion.ContentDocumentId}" id="selectSingleContentIdHidden" />
                                                    </div>
                                                    <!--                                                    <div class = "selectRefContentIdHidden{! index }" > -->
                                                    <!--                                                        <apex:inputhidden value="{!contentWrap.refContent.id}" id="selectRefContentIdHidden" /> -->
                                                    <!--                                                    </div> -->
                                                    <div id="selectRefContentIdHidden{! index }" style="display:none;">{!contentWrap.refContent.id}</div>
                                                    <div class = "fileTypeHiddenId{! index }" >
                                                        <apex:inputhidden value="{!contentWrap.contentVersion.FileType}" id="fileTypeHiddenId"/>
                                                    </div>
                                                </td>
                                                
                                                <td style="text-align: center;">
                                                    <apex:image title="{!$Label.Featured_Content}" url="{!URLFOR($Resource.starImages,'startImages/starchecked.png')}" rendered="{!contentWrap.refContent.Featured_Content__c}"/>
                                                </td>
                                                
                                                <td>
                                                    <apex:outputPanel rendered="{!contentWrap.refContent.Internal_Use__c}">
                                                        <div id="redCircle" class= "circle" style="margin: 0 auto;"></div>
                                                    </apex:outputPanel>
                                                    <apex:outputPanel rendered="{!NOT(contentWrap.refContent.Internal_Use__c)}">
                                                        <div id="greenCircle" class="circle" style="margin: 0 auto;"></div>
                                                    </apex:outputPanel>
                                                </td>
                                               
                                                <td>  
                                                    <!--<apex:image  rel="content-popup-ui" onclick="showDiv('{!JSENCODE(contentWrap.refContent.Content_ID__c)}', '{!JSENCODE(contentWrap.refContent.Id)}', event);" url="{!URLFOR($Resource.LightningCSS, contentWrap.fileTypeImagePath)}" width="25" height="30" style="vertical-align: middle; margin-right: 0.4em;cursor:pointer;" />   -->
                                                    <apex:outputPanel rendered="{!NOT(contentWrap.refContent.Custom_Reference_Content__c)}">
                                                        <img src="{!URLFOR($Resource.LightningCSS, contentWrap.fileTypeImagePath)}" rel="content-popup-ui" id="Content_{!contentWrap.refContent.Id}" onclick ="showDiv('{!JSENCODE(contentWrap.refContent.Content_ID__c)}', '{!JSENCODE(contentWrap.refContent.Id)}', event, 'Content_{!contentWrap.refContent.Id}');" alt="Tags" height="30" width="25" style="cursor:pointer;" />
                                                    </apex:outputPanel>
                                                    <apex:outputPanel rendered="{!contentWrap.refContent.Custom_Reference_Content__c}">
                                                        <img src="{!URLFOR($Resource.refEdgeCutomContent)}" rel="content-popup-ui" id="Content_{!contentWrap.refContent.Id}" onclick ="showDiv('{!JSENCODE(contentWrap.refContent.Content_ID__c)}', '{!JSENCODE(contentWrap.refContent.Id)}', event, 'Content_{!contentWrap.refContent.Id}');" alt="Tags" height="30" width="25" style="cursor:pointer;" />
                                                    </apex:outputPanel>
                                                </td>
                                                
                                                <td>
                                                    <apex:outputLink value="/{!contentWrap.refContent.Id}" id="contantTitle" target="_blank">
                                                        <apex:outputText value="{!contentWrap.refContent.Title__c}" rendered="{!isCRMContentUser}"/>
                                                    </apex:outputLink>
                                                    <apex:outputText value="{!contentWrap.refContent.Title__c}" rendered="{!NOT(isCRMContentUser)}"/>
                                                </td>
                                                
                                                <td>
                                                    {!contentWrap.refContent.Reference_Content_Type__r.Name__c}
                                                </td>
                                                <td>
                                                    <apex:outputLink value="{!contentWrap.accountIds}" id="accName" target="_blank">
                                                        <apex:outputText value="{!contentWrap.accountName}"/>
                                                    </apex:outputLink>
                                                </td>
                                                
                                                <td>
                                                    <!--                                                    <apex:outputText value="{0, date, MM'/'dd'/'yyyy}"> -->
                                                    <!--                                                        <apex:param value="{!contentWrap.refContent.Publish_date__c}" />  -->
                                                    <!--                                                    </apex:outputText> -->
                                                    <apex:outputField value="{!contentWrap.refContent.Publish_date__c}" ></apex:outputField>
                                                </td>
                                                <td>
                                                    <!-- <img src="{!URLFOR($Resource.RFSearch_Icons,'Tags.svg')}" rel="tag-popup-ui" id="tag_{!contentWrap.refContent.Id}_Content" onclick ="getTags('tag_{!contentWrap.refContent.Id}_Content','{!JSENCODE(contentWrap.refContent.Title__c)}','','{!JSENCODE(contentWrap.refContent.Attributes__c)}',false,false);" alt="Tags" height="30" width="30" style="cursor:pointer;" /> -->
                                                    <img src="{!URLFOR($Resource.RFSearch_Icons,'Tags.svg')}" rel="tag-popup-ui" id="tag_{!contentWrap.refContent.Id}_Content" onclick ="document.getElementById('divTagPopupover').style.display = 'none'; PORShowLoading();getConAttributeInfo('{!contentWrap.refContent.Id}');" alt="Tags" height="30" width="30" style="cursor:pointer;" />
                                                </td>
                                                <td>
                                                    {!contentWrap.refContent.Language__c}
                                                </td> 
                                            </tr>
                                            <apex:variable id="index2" var="index" value="{! index + 1}" />
                                        </apex:repeat>
                                        
                                    </tbody>
                                    
                                </table>
                               
                            </apex:outputPanel> 
                            <!-- Show more Link-->
                            <div style="margin-bottom: 1px;" id="contentShowMore">
                                <apex:actionRegion >
                                    <apex:commandLink style="font-weight: bold; margin-left: 54px;" value="{!$Label.Show_More}" onclick="PORShowLoading();sendSelectedIdsContent('{!contents.size}',true,'link');return false;" rendered="{!AND(contentSearch.isContentLimitExceed, NOT(contentSearch.showMoreContentRecords))}"/>
                                </apex:actionRegion>
                            </div>
                            <!-- Paging Panel--> 
                            <apex:outputPanel id="pagingPanel" rendered="{!AND(contentSearch.showMoreContentRecords, contents.size > 0)}">
                                <apex:actionRegion >
                                    <table border="0" align="center">
                                        <tr> 
                                            <td align="center">
                                                <apex:image url="{!$Resource.Search_prevarrow}" rendered="{!contentSearch.pageIndex > 1}" width="5px" height="8px"/>&nbsp;
                                                <apex:commandLink value="{!$Label.Previous_Page}"  rendered="{!contentSearch.pageIndex > 1}" onclick="PORShowLoading();sendSelectedIdsContent('{!contents.size}',false,'previous');return false;" oncomplete="PORHideLoading();"/> 
                                                &nbsp;&nbsp;
                                                <apex:outputText >
                                                    {!(contentSearch.pageIndex * contentSearch.pageLimit)+1-contentSearch.pageLimit}-{!(contentSearch.pageIndex * contentSearch.pageLimit) - (contentSearch.pageLimit - contents.size)}
                                                </apex:outputText>
                                                &nbsp;&nbsp;
                                                <apex:commandLink value="{!$Label.Next_Page} " rendered="{!contentSearch.isNextRender}" onclick="PORShowLoading();sendSelectedIdsContent('{!contents.size}',false,'next');return false;" oncomplete="PORHideLoading();"/>&nbsp; 
                                                <apex:image url="{!$Resource.Search_nextarrow}" rendered="{!contentSearch.isNextRender}" width="5px" height="8px"/>
                                            </td>                                                  
                                        </tr>
                                    </table>  
                                </apex:actionRegion>    
                            </apex:outputPanel>
                        </apex:pageBlockSection>
                        
                        <script language="javascript" type="text/javascript">
                        previouslyselectedcontent = {!contentSearch.isContentSelected};
                        deSelectAllChk('selectAllContentPbtId');
                        </script>
                    </apex:pageBlock> 
                </apex:outputPanel>
                
                <!-- Div for on Mouse hover -->     
                <apex:outputPanel style="display: none; position: absolute; z-index: 9999; scroll-y: auto;" id="dvContentDetails">  
                    <div id="divContentPopupover" rel="content-popup-ui" class="content-popover my-popover arrow_box" style ="overflow: hidden;">
                        <h1 rel="content-popup-ui"><span rel="content-popup-ui"  id = "sContentAccountName"></span></h1><input value="X" onclick="PopoverTagShowOrHide(false,'',false);" type="button"/>
                        <div rel="content-popup-ui" class="description-text"> 
                            <!-- Reference Contents  --> 
                            <!--<div id="divRefContent">
                                <h1 rel="content-popup-ui" style="line-height: 16px;"><span rel="content-popup-ui" id = "sContent">{!contentSearch.hoverContentVersion.Title}</span></h1> 
                                <div rel="content-popup-ui" class="description-text"> 
                                    <div style="max-height:200px;overflow-y: scroll;">
                                        <p rel="content-popup-ui">{!$Label.Type} <i> {!contentSearch.hoverContentVersion.FileType} </i></p> 
                                        <p rel="content-popup-ui" style="margin-top:8px;">{!$Label.SIZE} <i> {!contentSearch.hoverContentVersion.ContentSize} </i></p>
                                        
                                        <div rel="content-popup-ui" id="divSumm" >
                                            <p rel="content-popup-ui">{!$Label.Summary}</p>
                                            <div>  
                                                <label style="max-height: unset!important;overflow-y: unset!important;" rel="content-popup-ui" id="sSumm">{!contentSearch.hoverContentVersion.Description}</label>
                                            </div>
                                        </div>
                                    </div>
                                    <div style="text-align: center;margin-right:15px;margin-top:15px;">
                                        <button type="button" rel="content-popup-ui" id="btnOpen" style="font-size:10.8px;cursor:pointer;" onclick="openContent('{!contentSearch.hoverRefContentId}', '{!contentSearch.hoverContentVersion.ContentUrl}', '{!contentSearch.hoverContentVersion.FileType}',false); return false;" >{!$Label.Open}</button>
                                        <button type="button" rel="content-popup-ui" id="btnDownload" style="font-size:10.8px;cursor:pointer;" onclick="downloadSingleContent(); return false;">{!$Label.Download}</button>
                                        <apex:outputPanel rendered="{!AND(isCRMContentUser, isViewDetailsUpdateable)}" style="display: initial">
                                        <button type="button" rel="content-popup-ui" id="btnView" style="font-size:10.8px;cursor:pointer;" onclick="openContent('{!contentSearch.hoverRefContentId}', '{!contentSearch.hoverContentVersion.ContentUrl}', '{!contentSearch.hoverContentVersion.FileType}',true); return false;" >{!$Label.View_Details}</button>
                                        </apex:outputPanel>
                                    </div>
                                </div> 
                            </div>  --> 
                            
                            <!-- No Custom Reference Contents -->
                            <div id ="divNoRefContent"> 
                                <div rel="content-popup-ui" ><span rel="content-popup-ui" >{!$Label.Content_View_Permission_Message}</span></div>  
                            </div>
                            <!-- Custom Reference Contents
                            <div id="divCustomRefContent" rel="content-popup-ui">  
                                 <div rel="content-popup-ui"  style="width:300px ;float:left; font-family: sans-serif; letter-spacing: 0.0611em;color: #445FB8;"><span rel="content-popup-ui" id = "sContent">{!contentSearch.referenceContentTitle}</span></div> 
                                 <div rel="content-popup-ui" style="width:325px;overflow-x :hidden;max-height:180px"> 
                                     <apex:repeat value="{!contentSearch.refContentFields}" var="rcf"> 
                                         <apex:repeat value="{!contentSearch.customContentTypeFields}" var="fieldAPIName"> 
                                            <p rel="content-popup-ui" style="margin-top:7px !important;">{!contentSearch.mapCustomContentLabels[fieldAPIName].label}</p>
                                            <apex:outputPanel rendered="{!contentSearch.mapCustomContentLabels[fieldAPIName].type != 'BOOLEAN' && contentSearch.mapCustomContentLabels[fieldAPIName].type != 'DATETIME' && contentSearch.mapCustomContentLabels[fieldAPIName].type != 'DATE'}">
                                                <label rel="content-popup-ui" class=".description-text-all"  style="max-height:1000px;overflow-y:hidden;font-weight:normal;">{!rcf[fieldAPIName]}</label> 
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!contentSearch.mapCustomContentLabels[fieldAPIName].type == 'BOOLEAN'}">
                                                <apex:inputcheckbox value="{!rcf[fieldAPIName]}" disabled="true"/>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!contentSearch.mapCustomContentLabels[fieldAPIName].type == 'DATETIME' || contentSearch.mapCustomContentLabels[fieldAPIName].type == 'DATE'}">
                                                <apex:outputText value="{0,date,MMM dd yyyy}"> 
                                                    <apex:param value="{!rcf[fieldAPIName]}" /> 
                                                </apex:outputText>
                                            </apex:outputPanel>
                                         </apex:repeat>    
                                     </apex:repeat>   
                                     <p rel="content-popup-ui">{!$Label.Summary}</p>
                                     <label rel="content-popup-ui" class=".description-text-all" style="max-height:1000px;overflow-y: HIDDEN !important;">{!contentSearch.internalSummary}</label>    
                                        
                                 </div>
                                <apex:outputPanel rendered="{!isViewDetailsUpdateable}" style="display: initial">
                                 <div rel="content-popup-ui" style="text-align: center;margin-top:15px;"> 
                                    <button type="button" rel="content-popup-ui" id="btnView" style="font-size:10.8px;cursor:pointer;" onclick="openContent('{!contentSearch.hoverRefContentId}', '{!contentSearch.hoverContentVersion.ContentUrl}', '{!contentSearch.hoverContentVersion.FileType}',true); return false;" >{!$Label.View_Details}</button>
                                 </div>
                                </apex:outputPanel>
                            </div> -->
                            <!-- Interview Type Content Reference -->
                            <div id="divRefInterview" rel="content-popup-ui" >
                                <apex:outputPanel rendered="{!contentSearch.refInterview.size >0}" layout="block" style="width:100%;background-color:white;">
                                    <div class="panel-group" id="accordion" style="width:100%;float:left;background:#F4F6F9;max-height:300px !important;overflow-y:auto;">
                                        <div class="panel panel-default" style="float:right;width:100%;border:1px solid #F4F6F9;margin-top: -1px;background-color:#F4F6F9;">
                                            <div id="contentDetails" class="imageDiv" style="background-color: #F4F6F9;border:0px solid gray;border-radius:0px;width:100%;height:100%;">
                                                <div style="width:290px ;float:left">
                                                    <apex:outputPanel layout="block" >
                                                        <div id="imagePanel" rel="content-popup-ui" styleClass="imagePanelClass" style="width:100%;float:left;text-align:left;padding-left: 10px;">
                                                            <div rel="content-popup-ui" ></div>
                                                            <apex:outputField styleclass="ImageClass" style="display: table !important;" id="imageIds" value="{!contentSearch.refInterviewRecord.Photograph__c}" />
                                                        </div>
                                                        <div style="width:100%;float:left;font-weight:bold;font-size:14px;padding-top: 2%;">
                                                            <div rel="content-popup-ui" ></div>
                                                            <span rel="content-popup-ui" id = "sContent">{!contentSearch.refInterviewRecord.Reference_Content__r.Title__c}</span>
                                                        </div>
                                                    </apex:outputPanel>
                                                    <div rel="content-popup-ui" style="width:100%;float:left;padding-left:10px;">
                                                        <div rel="content-popup-ui" style="float:left;width:100%;">
                                                            <a data-toggle="collapse" data-parent="#accordion" style="float:left;width:90%;" rel="content-popup-ui" href="#collapseTrnanscrptInfo"> 
                                                                <span rel="content-popup-ui" style="font-weight:bold;cursor:pointer;margin-left:3px;">{!$Label.Reference_Interview_Info}</span> 
                                                            </a>
                                                        </div>
                                                        <div id="collapseTrnanscrptInfo" style="float:left;width:90%;" class="panel-collapse collapse">
                                                            <span style="font-weight:bold;font-family: Arial,Helvetica,sans-serif; color: #222;">{!$ObjectType.Reference_Interview__c.fields.Speaker_info__c.label}</span> 
                                                            <span rel="content-popup-ui">{!contentSearch.refInterviewRecord.Speaker_info__c}</span> 
                                                            
                                                            <br/>
                                                            <span rel="content-popup-ui"  style="font-weight:bold;font-family: Arial,Helvetica,sans-serif; color: #222;">{!$ObjectType.Reference_Interview__c.fields.Org_website__c.label}</span>&nbsp;
                                                            <apex:commandLink style="color:blue" value="{!contentSearch.refInterviewRecord.Org_website__c}" onClick="openSite('{!contentSearch.refInterviewRecord.Org_website__c}');return false;" />
                                                            <br/>
                                                            <span rel="content-popup-ui"  style="font-weight:bold;font-family: Arial,Helvetica,sans-serif; color: #222;">{!$ObjectType.Reference_Interview__c.fields.Org_description__c.label}</span>&nbsp;
                                                            <apex:outputField value="{!contentSearch.refInterviewRecord.Org_description__c}" />
                                                        </div>
                                                    </div>
                                                    <table style="width:100%;float:left;margin-top:1%;">
                                                        <tbody style="width:100%;">
                                                            <apex:repeat value="{!contentSearch.refInterviewRecord.Interview_Topics__r}" var="interviewTopic">
                                                                <tr style="width:100%;">
                                                                    <td style="width:100%;border: 1px solid #F4F6F9;">
                                                                        <div rel="content-popup-ui" style="float:left;width:95%;padding-left: 10px;">
                                                                            <a data-toggle="collapse" data-parent="#accordion" style="float:left;width:100%;" rel="content-popup-ui" href="#collapseTrnanscrpt{!interviewTopic.id}">
                                                                                <span  rel="content-popup-ui"  style="font-weight:bold;cursor:pointer;" >{!interviewTopic.Question__c}</span>
                                                                            </a>
                                                                        </div>
                                                                        <div id="collapseTrnanscrpt{!interviewTopic.id}" rel="content-popup-ui" style="float:left;width:99%;" class="panel-collapse collapse in">
                                                                            <!-- <apex:outputPanel rendered="{!interviewTopic.Video_Url_Embed__c != null}"> -->
                                                                            <div rel="content-popup-ui">
                                                                                <iframe id="player" width="300" height="205" src="{!interviewTopic.Video_Url_Embed__c}?showinfo=0&rel=0&modestbranding=1"/>
                                                                                <script src="https://www.youtube.com/iframe_api"></script>
                                                                             </div> 
                                                                            <!--</apex:outputPanel> -->
                                                                            <apex:outputLabel style="font-weight:normal;padding-left: 10px;" value="{!interviewTopic.Transcript__c}" />
                                                                         </div>
                                                                    </td>
                                                                </tr>
                                                            </apex:repeat>
                                                        </tbody>
                                                    </table>
                                                </div>                  
                                            </div>
                                        </div>
                                    </div>
                                </apex:outputPanel>
                            </div>
                        </div> 
                   </div>  
                </apex:outputPanel>
            </div>
        </div>
        <div id="dialogBoxDivNoti" title="{!$Label.Send_notification}" style="display:none;height: 60px; !important;">
            {!$Label.Options_to_notify}
        </div>
        <div id="dialogBoxDivNew" title="{!$Label.Request_Item_Update}" style="display:none;height: 60px; !important;">
            {!$Label.One_Request_Item_Changed}
        </div>
        <apex:outputPanel id="notificationPanel">
            <div id="dialogBoxDivCustom" title="{!contentSearch.referenceContentTitle}" style="display:none;min-height: 150px!important;max-height: 500px!important;">  
                <div style="overflow :hidden;">
                    <apex:repeat value="{!contentSearch.refContentFields}" var="rcf"> 
                        <apex:repeat value="{!contentSearch.customContentTypeFields}" var="fieldAPIName"> 
                        <p style="font-weight: bold;margin-top:7px !important;">{!contentSearch.mapCustomContentLabels[fieldAPIName].label}</p>
                        <apex:outputPanel rendered="{!contentSearch.mapCustomContentLabels[fieldAPIName].type != 'BOOLEAN' && contentSearch.mapCustomContentLabels[fieldAPIName].type != 'DATETIME' && contentSearch.mapCustomContentLabels[fieldAPIName].type != 'DATE'}">
                            <label style="max-height:1000px;overflow-y:hidden;font-weight:normal;">{!rcf[fieldAPIName]}</label> 
                        </apex:outputPanel>
                        <apex:outputPanel rendered="{!contentSearch.mapCustomContentLabels[fieldAPIName].type == 'BOOLEAN'}">
                            <apex:inputcheckbox value="{!rcf[fieldAPIName]}" disabled="true"/>
                        </apex:outputPanel>
                        <apex:outputPanel rendered="{!contentSearch.mapCustomContentLabels[fieldAPIName].type == 'DATETIME' || contentSearch.mapCustomContentLabels[fieldAPIName].type == 'DATE'}">
                            <apex:outputText value="{0,date,MMM dd yyyy}"> 
                                <apex:param value="{!rcf[fieldAPIName]}" /> 
                            </apex:outputText>
                        </apex:outputPanel>
                        </apex:repeat>    
                    </apex:repeat>   
                    <p style="font-weight: bold;">{!$Label.Summary}</p>
                    <pre style="white-space: pre-wrap!important;padding:unset;border:none;background-color: unset;font-family: unset;word-break: unset;">{!contentSearch.internalSummary}</pre>  
                </div>
            </div> 
            <div id="divRefContent" title="{!contentSearch.hoverContentVersion.Title}" style="display:none;min-height: 100px!important;max-height: 500px!important;">
                <div  class="description-text"> 
                    <div style="max-height:100%;overflow-y: scroll;">
                        <label>{!$Label.Type}</label> 
                        <p> {!contentSearch.hoverContentVersion.FileType} </p>
                        <label  style="margin-top:8px;">{!$Label.SIZE}</label>
                        <p> {!contentSearch.hoverContentVersion.ContentSize} </p>
                        <div  id="divSumm" >
                            <label>{!$Label.Summary}</label>
                            <div>  
                                <pre style="white-space: pre-wrap!important;padding:unset;border:none;background-color: unset;font-family: unset;word-break: unset;">{!contentSearch.hoverRefContent.Summary__c}</pre>
                            </div>
                        </div>
                    </div>
                </div> 
            </div> 
        </apex:outputPanel>

        <div id="dialogBoxDiv1" title="{!$Label.E_mail_Preview}" style="display:none;height:300px;">
            <div> 
                <table style="width: 80%; margin-left:5%;">
                    <tr>
                        <td style="text-align:right;">
                            <apex:outputText value="{!$Label.Subject}"/>
                        </td>
                        <td>
                            <div style="background-color:white;border:1px solid #cfd0d2;padding: 7px 0 3px 10px;">
                                <apex:inputText id="Subject" value="{!subjectValue}" style="border: 0;width:100%;"/><br/>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>
                            <div style="background-color:white;border:1px solid #cfd0d2;padding: 7px 0 3px 10px;font-weight:none !important;">
                                <apex:outputLabel value="{!$Label.Use_Requested}:" style="font-weight:normal !important;"/>
                                <apex:outputText id="UseRequested" value=""/><br/>
                                <apex:outputLabel value="{!$Label.Reference_Account}: " style="font-weight:normal !important;"/>
                                <apex:outputText id="account" value=""/><br/>
                                <apex:outputLabel value="{!$Label.Status}: " style="font-weight:normal !important;"/>
                                <apex:outputText id="Status" value=""/><br/>
                                <apex:outputLabel value="{!$Label.Need_by}: " style="font-weight:normal !important;"/>
                                <apex:outputText id="deadline" value=""/><br/><br/>
                                <apex:outputLabel value="{!$Label.Notes}: " style="font-weight:normal !important;"/><br/>
                                <apex:inputTextArea style="border: 0;width: 300px;height: 100px;margin:0;margin-top: 5px;" id="notes"  value="{!NoteValue}"/>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align:right;"><apex:outputText value="{!$Label.Write_to_Notes}"/></td>
                        <td>
                            <apex:inputCheckbox id="writetoNoteId" value="{!writetoNote}"/>
                        </td>
                    </tr>
                </table>
            </div>
        </div>
        <!-- Start Bound 3 Req -->
        <div id="dialogBoxDiv" style="display:none;height: 60px; !important;">
            {!$Label.Keep_Discard_Message}
        </div>
        <!-- End Bound 3 Req -->
        <apex:outputPanel id="jsPanel">
            <script>
                var collectionNameInput = '';
                function openCreateCollection(size) {
                    var hasChecked = isContentSelected(size);
                    if(hasChecked == false && previouslyselectedcontent == false){
                        alert('{!$Label.Please_select_content_on_create_collection}');
                        return false;
                    }
                    else {
                        document.getElementById('pageId:formId:collectionNameId').value = '';
                        jQuery("#createCollectionDiv").dialog({
                            width     : 400,
                            modal     : true,
                            resizable : false, 
                            buttons: [
                                {
                                    text: "{!$Label.Continue}",
                                    "class": "dialogButtonClass",
                                    click: function(){
                                        var name = collectionNameInput.trim();
                                        if(name != null && name != ''){
                                            jQuery( this ).dialog( "close" ); 
                                            PORShowLoading();
                                            createCollectionCall(size,name)
                                        }
                                        else{
                                            alert('{!$Label.Please_fill_the_Name_of_Content_Collection}');
                                        }
                                        return false;
                                    }
                                },
                                {
                                    text: "{!$Label.Cancel}",
                                    "class": "dialogButtonClass",
                                    click: function(){
                                        jQuery( this ).dialog( "close" ); 
                                        return false;
                                    }
                                }
                            ]
                        });
                        jQuery(".ui-dialog-title").text( '{!$Label.Create_Collection}');
                        jQuery(".ui-dialog-buttonset").css("float", "right");
                        jQuery(".ui-dialog-buttonset").css("text-align", "right");
                        jQuery(".ui-dialog-buttonset").css("padding-bottom", "6px");
                        return false;
                    }
                }
                function openSelectCollection() {
                    jQuery("#createCollectionDiv2").dialog({
                        width     : 400,
                        modal     : true,
                        resizable : false, 
                        buttons: [
                            {
                                text: "{!$Label.Continue}",
                                "class": "dialogButtonClass",
                                click: function(){
                                    var name = document.getElementById('pageId:formId:selectcc').value;
                                    if(name != null && name != ''){
                                        jQuery( this ).dialog( "close" ); 
                                        PORShowLoading();
                                        var ids = '';
                                        if(selectedAllContectIdsSet.length > 0 ){
                                            ids = selectedAllContectIdsSet.join();
                                        }  
                                        selectCollection(name,true,ids);
                                    }
                                    else{
                                        alert('{!$Label.Please_select_any_Content_Collection}');
                                    }
                                    return false;
                                }
                            },
                            {
                                text: "{!$Label.Cancel}",
                                "class": "dialogButtonClass",
                                click: function(){
                                    jQuery( this ).dialog( "close" ); 
                                    return false;
                                }
                            }
                        ]
                    });
                    jQuery(".ui-dialog-title").text( '{!$Label.Select_Collection}');
                    jQuery(".ui-dialog-buttonset").css("float", "right");
                    jQuery(".ui-dialog-buttonset").css("text-align", "right");
                    jQuery(".ui-dialog-buttonset").css("padding-bottom", "6px");
                     
                    return false;
                }
            </script>
        </apex:outputPanel>
        <apex:outputPanel id="contentCollectionLinkId" >
            <div id="createCollectionDiv" style="display:none;">
                <apex:outputText value="{!$Label.Provide_Collection_Name}"/><br/><br/>
                <apex:inputText value="{!collectionName}" Id="collectionNameId" style="width : 100%;" onblur="displayName(this.value);"/><br/><br/>
                <apex:outputText value="{!$Label.All_contents_added}"/>
            </div>
            
            <div id="createCollectionDiv2" style="display:none;">
                <apex:outputText value="{!$Label.Please_select_content_collection}"/><br/><br/>
                <apex:selectList size="1" value="{!selectedCollection}" id="selectcc" style="width:100%;">
                    <apex:selectOptions value="{!contentCollections}"/>
                </apex:selectList>
            </div>
            <script>                                                            
                function onCollectionComplete(){
                    if(document.getElementById('pageId:pgmsgId').innerHTML == ''){
                        alert('{!$Label.Collection_created}');
                    }
                }
                function displayName(val){
                    collectionNameInput = val;
                }
            </script>
        </apex:outputPanel>
        <apex:actionFunction action="{!createCollection}" name="createCollection" reRender="pgmsgId,contentOpId,contentCollectionLinkId,jsPanel,collectionNameId" oncomplete="PORHideLoading();onCollectionComplete();return false;">
        </apex:actionFunction>
        <apex:actionFunction action="{!createCollection}" name="selectCollection" onComplete="redirecttoInvitation();PORHideLoading();return false;">
            <apex:param name="param" value="" assignTo="{!selectedCollection}"/>
            <apex:param name="param2" value="" assignTo="{!isContentCollection}"/>
            <apex:param name="param3" value="" assignTo="{!contentSearch.selectContentDocumentId}"/>
        </apex:actionFunction>
        <apex:actionFunction action="{!shareContents}" name="redirecttoInvitation"/>
            <script type="text/javascript">brightcove.createExperiences();</script> 
            <div id="dialogBoxDivCon" title="{!$Label.Related_Content}" style="height: 60px;display: block;"> 
                <apex:outputPanel id="pbtAccContent" rendered="{!AND(contents != null, contents.size > 0)}"> 
                    <table id = "accountContentTable" class ="rfContentTable" style="display:none;">
                        <thead id  ="contentTableHeader" style = "border-spacing: 29px !important;border-collapse:none !important">
                            <th style="width:25px">
                                <apex:inputCheckBox id="selectAllRefContentPbtId"  onclick="selectAllChk(this, 'selectSingleRefContentPbtId', {!accountContents.size}, null, true)" />
                            </th>     
                            <th style="width: 40px;text-align:center;">
                                {!$Label.Share}
                            </th> 
                            <th>
                                {!$Label.Title} 
                            </th>
                            <th style = "width :25px"> 
                            </th>
                            <th>
                                {!$Label.Reference_Content_Type}
                            </th> 
                            <th>
                                {!$Label.Tags}
                            </th> 
                            <th>
                                {!$Label.Publish_Date} 
                            </th> 
                            <th>
                                {!$ObjectType.Reference_Content__c.fields.Language__c.Label}
                            </th> 
                        </thead> 
                        <tbody id = "contentTableBody">
                            <tr> 
                                <td  style="padding: 25px 2px 4px 5px" colspan="8">
                                </td>
                            </tr> 
                            <apex:variable id="indexcount" var="index" value="{!0}" />
                            <apex:repeat value="{!accountContents}" var="contentWrap" > 
                            <tr>
                                <td style="width:25px"> 
                                    <apex:inputCheckBox styleClass="selectSingleRefContentPbtId{!index}" disabled="{!OR(NOT(isCRMContentUser),contentWrap.refContent.Internal_Use__c,AND(!contentWrap.refContent.Custom_Reference_Content__c, NOT(OR(contentWrap.refContent.Content_ID__c != null,contentWrap.refContent.Reference_Content_Type__r.Recorded_Reference_Type__c))))}" id="selectSingleRefContentPbtId" value="{!contentWrap.isSelected}" onclick="updateSelectedIdsContent('{!contentWrap.refContent.id}','{!contentWrap.contentVersion.FileType}',this.checked);enableDisable(this, 'selectSingleRefContentPbtId', 'selectAllRefContentPbtId', null)" />
                                    <div class = "selectSingleRefContentIdHidden{! index }" >
                                        <apex:inputhidden value="{!contentWrap.contentVersion.ContentDocumentId}" id="selectSingleRefContentIdHidden" />
                                    </div>
                                                                                         
                                    <div id="selectAccRefContentIdHidden{! index }" style="display:none;">{!contentWrap.refContent.id}</div>
                                    <div class = "fileRefTypeHiddenId{! index }" >
                                        <apex:inputhidden value="{!contentWrap.contentVersion.FileType}" id="fileRefTypeHiddenId"/>
                                    </div>
                                </td> 
                                                
                                <td style="width: 80px;" > 
                                    <apex:outputPanel rendered="{!contentWrap.refContent.Internal_Use__c}"> 
                                        <div id="redCircle" class= "redCircle" style="margin: 0 auto;"></div>
                                    </apex:outputPanel>
                                    <apex:outputPanel rendered="{!NOT(contentWrap.refContent.Internal_Use__c)}"> 
                                        <div id="greenCircle" class="greenCircle" style="margin: 0 auto;"></div>
                                    </apex:outputPanel>
                                </td>
                                <td>
                                    <apex:outputLink value="/{!contentWrap.refContent.Id}" id="contantTitle" target="_blank">
                                        <apex:outputText value="{!contentWrap.refContent.Title__c}" rendered="{!isCRMContentUser}"/>
                                        </apex:outputLink>
                                    <apex:outputText value="{!contentWrap.refContent.Title__c}" rendered="{!NOT(isCRMContentUser)}"/>
                                </td>
                                <td style = "width :50px"> 
<!--                                    <img src="{!URLFOR($Resource.LightningCSS, contentWrap.fileTypeImagePath)}" style="cursor:pointer;"  id="imgIcon"  alt="Reference Content" height="30" width="25" />   -->
                                    <apex:outputPanel rendered="{!NOT(contentWrap.refContent.Custom_Reference_Content__c)}">
                                        <img src="{!URLFOR($Resource.LightningCSS, contentWrap.fileTypeImagePath)}" rel="content-popup-ui" id="AccContent_{!contentWrap.refContent.Id}" onclick ="showDiv('{!JSENCODE(contentWrap.refContent.Content_ID__c)}', '{!JSENCODE(contentWrap.refContent.Id)}', event,'AccContent_{!contentWrap.refContent.Id}');" alt="Tags" height="30" width="25" style="cursor:pointer;" />
                                    </apex:outputPanel>
                                    <apex:outputPanel rendered="{!contentWrap.refContent.Custom_Reference_Content__c}">
                                        <img src="{!URLFOR($Resource.refEdgeCutomContent)}" rel="content-popup-ui" id="AccContent_{!contentWrap.refContent.Id}" onclick ="showDiv('{!JSENCODE(contentWrap.refContent.Content_ID__c)}', '{!JSENCODE(contentWrap.refContent.Id)}', event,'AccContent_{!contentWrap.refContent.Id}');" alt="Tags" height="30" width="25" style="cursor:pointer;" />
                                    </apex:outputPanel>
                                </td>      
                                <td>
                                    {!contentWrap.refContent.Reference_Content_Type__r.Name__c}
                                </td>
                                                                        
                                <td style = "width :70px">  
                                    <img src="{!URLFOR($Resource.RFSearch_Icons,'Tags.svg')}" id="tag_{!contentWrap.refContent.Id}" rel="tag-popup-ui"  onclick ="getTags('tag_{!contentWrap.refContent.Id}','{!JSENCODE(contentWrap.refContent.Title__c)}','','{!JSENCODE(contentWrap.refContent.Attributes__c)}',false,false);" alt="Tags" height="35" width="30" style="cursor:pointer;" />  
                                </td>                                       
                                <td> 
                                    <apex:outputField value="{!contentWrap.refContent.Publish_date__c}" ></apex:outputField>
                                </td>    
                                <td>
                                    {!contentWrap.refContent.Language__c} 
                                </td>     
                            </tr> 
                            <apex:variable id="indexCountPlus" var="index" value="{! index + 1}" />
                        </apex:repeat>                                     
                    </tbody>                                                    
                </table>                                                        
            </apex:outputPanel> 
        </div>                                                          
        <!-- Model for related content- #943 --> 
        <apex:outputPanel id="refId"> 
            <script>             
            function showPopup() {  
                jQuery( "#dialogBoxDivCon" ).dialog({
                    width: '900px',
                    modal: true, 
                    resizable: false,
                    draggable: false,
                    buttons: [{
                        text: '{!$Label.Download}',
                        "class": "dialogButtonClass",
                        click: function() { 
                            downloadContents({!contents.size}, 2, 'selectSingleRefContentPbtId', true); 
                        }  
                    }, {
                        text: '{!$Label.Share}',
                        "class": "dialogButtonClass",
                        click: function() { 
                            shareContentCall({!contents.size});
                            PORShowLoading(); 
                        }
                    }, {
                        text: '{!$Label.Cancel}',
                        "class": "dialogButtonClass",
                        click: function() {
                            jQuery( this ).dialog( "close" );  
                        }
                    }]
                });
                jQuery("#accountContentTable").show();
                
                //jQuery(".ui-dialog-titlebar").hide();
                jQuery(".ui-dialog-content ui-widget-content").css("height", "auto");
                return true;  
            } 
            </script>
            
        </apex:outputPanel>  
    </apex:form>
                                                                
    <!-- Div for popover for About and Tag- #943 --> 
    <div id="divPopupover" rel="popup-ui" class="popover my-popover arrow_box-left">
        <h1 rel="popup-ui" style="line-height: 16px;">  <span rel="popup-ui" id = "sAccountName"></span></h1><input value="X" onclick="PopoverShowOrHide(false,'');" type="button"/>
        <div rel="popup-ui" class="description-text"> 
            <p rel="popup-ui">{!$Label.USE_HISTORY}</p>
            <span rel="popup-ui" id="sLastDays"></span>
            <span rel="popup-ui" id="sLastUsedDays"></span>
            <div rel="popup-ui" id="divSummary" >
                <p rel="popup-ui">{!$Label.Summary}</p>
                <div style=" overflow-y :auto; overflow-x :hidden;max-height:160px"> 
                    <label rel="popup-ui">
                        <pre style="white-space: pre-wrap!important;padding:unset;border:none;background-color: unset;font-family: Arial,Helvetica,sans-serif;letter-spacing: 0.0611em;color: #666666;word-break: unset;font-size: 12px;" rel="popup-ui" id="sSummary"/>
                    </label>
                </div>
            </div>
        </div> 
    </div>
    
    <div id="divTagPopupover" rel="tag-popup-ui" class="tag-popover my-popover arrow_box-left">
        <h1 rel="tag-popup-ui"><span rel="tag-popup-ui" id = "stagAccountName"></span></h1><input value="X" onclick="PopoverTagShowOrHide(false,'',false);" type="button"/>
        <div rel="tag-popup-ui" class="description-text"> 
            <div id = "divRef">
                <p rel="tag-popup-ui">{!$Label.Referenceability}</p>
                <span rel="tag-popup-ui" id="sReferenceability"></span> 
            </div>
            <p rel="tag-popup-ui">{!$Label.Attributes}</p>
            <span rel="tag-popup-ui" id="sAttributes"></span>
        </div> 
    </div>
    <!--   
        REF - 1288
        objective : To show HelpOverlays
        modified By : Rajneesh 14 mar 2018
         -->

    <div id="helpAndTraining" rel="helpTraining_popup" class="helpTraining arrowHelpTraining">
        <div class ="header">
            {!$Label.Help_and_trainning}
        </div>
        <div class="tour" onclick="rfSearchTour()" style="cursor: pointer; padding-left: 10px;padding-bottom: 15px;">
            <div style="float:left"><apex:image value="{!URLFOR($Resource.helpOverlayIcon,'/myIcons/plybtn3.png')}" style="width : 24px; height : 21px;"/>&nbsp;&nbsp;</div><div style="padding-top:6px">
                {!$Label.Reference_Search_Tour}
            </div>
        </div>
        <div class="help" onclick="rfSearchHelp()" style="cursor: pointer; padding-bottom: 23px;">
            <div style="float:left"><apex:image value="{!URLFOR($Resource.helpOverlayIcon,'/myIcons/bookIcon.png')}" style="width : 30px; height : 30px;"/>&nbsp;&nbsp;</div><div style="padding-top:6px">
                    {!$Label.Reference_Search_Help}
            </div>            
        </div>
    </div>

    <!--   To show / Hide walkThrough for the page    --> 
         
           <c:HelpOverlays /> 
        
    <!--  To show / Hide walkThrough for the page    ---   END     --- --> 
    
</apex:page>