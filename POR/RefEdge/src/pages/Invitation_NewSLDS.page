<!--
 * ReferenceEdge
 * 
 * Point of Reference, Inc. - Copyright 2014 All rights reserved.
 *
 * @company : Point of Reference, Inc.
 * @website : www.point-of-reference.com
 *
 * Disclaimer: THIS SOFTWARE IS PROVIDED "AS-IS" BY POINT OF REFERENCE ("POR"), 
 * WITH NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY OF THE SOFTWARE, 
 * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT. 
 * POR SHALL NOT BE LIABLE FOR ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING, 
 * MODIFYING OR DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES. POR IS NOT LIABLE FOR, 
 * AND MAKES NO REPRESENTATIONS OR WARRANTIES REGARDING, THE ACTIONS OR OMISSIONS OF 
 * ANY THIRD PARTIES (OR THE PRODUCTS OR SERVICES OFFERED BY ANY THIRD PARTIES) INCLUDING, 
 * WITHOUT LIMIATION, SALESFORCE.COM. COPY, USE OR DISTRIBUTION PROHIBITED WITHOUT EXPRESS 
 * WRITTEN CONSENT FROM COMPANY.
 -->
<apex:page id="pageId" showheader="false" sidebar="false"  
	applybodytag="false" doctype="html-5.0" applyhtmltag="false"
	controller="InvitationSLDSController" action="{!userMappingRecord}">
	<apex:includescript value="{!URLFOR($Resource.ckeditor,'ckeditor/ckeditor.js')}" />
	<html xmlns="http://www.w3.org/2000/svg"
		xmlns:xlink="http://www.w3.org/1999/xlink">
<head>
	<apex:stylesheet value="{!URLFOR($Resource.LightningCSS, 'assets/styles/salesforce-lightning-design-system-vf.css')}" />
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
	<apex:includeScript value="{!URLFOR($Resource.AngularJS)}"/>
	<script src="{!URLFOR($Resource.EmailAutocompleteJS)}"></script>
	<script type="text/javascript" src="//code.jquery.com/ui/1.10.1/jquery-ui.js"></script>
	
	<!-- Include all compiled plugins (below), or include individual files as needed -->
	<script type="text/javascript" src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js"></script>
	  
	<apex:stylesheet value="{!URLFOR($Resource.BootstrapFiles, 'bootstrap.css')}"/>
	<script src="{!URLFOR($Resource.NGVideoJS)}"></script>
	<script src="{!URLFOR($Resource.AngularDateTimePickerJS)}"></script>
	<apex:stylesheet value="{!URLFOR($Resource.AngularDateTimePickerCSS)}" />
	<link href="//code.jquery.com/ui/1.10.1/themes/base/jquery-ui.css" type="text/css" rel="stylesheet" media="all" />
	
	<style type="text/css">
		@charset "UTF-8";
		
		[ng\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide
			{
			display: none !important;
		}
		
		ng\:form {
			display: block;
		}
		
		.ng-animate-start {
			clip: rect(0, auto, auto, 0);
			-ms-zoom: 1.0001;
		}
		
		.ng-animate-active {
			clip: rect(-1px, auto, auto, 0);
			-ms-zoom: 1;
		}
		</style>
		<style type="text/css">
		.tags {
			margin-bottom: 5px;
		}
		
		#loading-image {
			position: fixed;
			top: 40%;
			left: 47%;
			width: 4%;
		}
		
		#loading {
			width: 100%;
			height: 100%;
			top: 0px;
			left: 0px;
			position: absolute;
			display: block;
			opacity: 1;
			filter: alpha(opacity = 50);
			-moz-opacity: 0.5;
			background-color: #fff;
			text-align: center;
			z-index: 19005;
		}
		
		.tags .tag {
			display: inline-block;
			margin-right: 5px;
			font-size: 13px;
		}
		
		.tag .close {
			font-size: 14px;
			margin-left: 5px;
			margin-top: 5px;
			color: #000 !important;
			text-decoration: none;
			margin-top: 9px;
		}
		
		.autoComp-continer .to-cc-lable {
			text-align: left;
			padding: 5px;
		}
		
		.autoComp-continer span.tag {
			display: inline-block;
			float: left;
			margin: 5px;
			border: 1px solid #ccc;
			padding: 0px 4px 0 0;
			border-radius: 5px;
		}
		
		.autoComp-continer .t-cc-bcc-container {
			margin: 5px 0;
		}
		
		.autoComp-continer span.tag .inline-img {
			display: inline-block;
			float: left;
			margin: 5px;
			border: 1px solid #ccc;
			padding: 7px;
			border-radius: 5px;
			width: 25px;
			height: 25px;
		}
		
		.autoComp-continer span.tag .tag-txt {
			display: inline-block;
			float: left;
			margin-top: 7px;
			color: #005FB2;
		}
		
		.autoComp-continer input.tagAutoComp {
			display: inline;
			width: auto;
			float: left;
			border: 0;
			outline: none;
			box-shadow: none; 
			margin-top: 6px;
		}
		
		.autoComp-continer .input-group {
			border: 1px solid #ccc;
			border-radius: 5px;
		}
		
		.action-btns {
			background: #005FB2 !important;
			margin: 0 5px !important;
			color: #fff !important;
			border-radius: 5px !important;
		}
		
		.action-btns-natural {
			background: #fffffff !important;
			margin: 0 5px !important;
			color: #005FB2 !important;
			border-radius: 5px !important;
		}
		
		.action-select {
			padding-left: 10px;
			padding-bottom: 10px;
		}
		
		.custom-form-element-container {
			margin-bottom: 20px;
			overflow: hidden;
		}
		
		.custom-form-element-container .form-control-override {
			width: 83%;
			display: inline-block;
			float: left;
		}
		
		.slds .slds-page-header {
		    padding: 24px 9px 12px;
		    border-bottom: 1px solid #d8dde6;
		    background: #f4f6f9;
		}
		.custom-form-element-container .lable-override {
			width: 8%;
			float: left;
		}
		/* Example tokeninput style #1: Token vertical list*/
		ul.token-input-list {
			overflow: hidden;
			height: auto !important;
			height: 1%;
			border: 1px solid #ccc;
			cursor: text;
			font-size: 12px;
			font-family: Verdana;
			z-index: 999;
			margin: 0;
			padding: 0;
			background-color: #fff;
			list-style-type: none;
			clear: left;
			border-radius: 5px;
			height: 34px;
			padding: 6px 12px;
		}
		
		input.token-input-list {
			overflow: hidden;
			border: 1px solid #ccc;
			cursor: text;
			font-size: 12px;
			font-family: Verdana;
			z-index: 999;
			margin: 0;
			padding: 0;
			background-color: #fff;
			list-style-type: none;
			clear: left;
			border-radius: 5px;
			height: 34px;
			padding: 6px 12px;
			width: 100%;
			height: 38px;
		}
		
		ul.token-input-list li {
			list-style-type: none;
			float: left;
		}
		
		ul.token-input-list li.token-input-token {
			border: 1px solid #ccc;
			padding: 3px;
			border-radius: 5px;
			color: rgb(0, 112, 210);
		}
		
		ul.token-input-list li input {
			border: 0;
			width: 350px;
			padding: 3px 8px;
			background-color: white;
			-webkit-appearance: caret;
			margin-top: 5px;
		}
		
		li.token-input-token {
			overflow: hidden;
			height: auto !important;
			height: 1%;
			margin: 3px;
			padding: 3px 5px;
			background-color: #fff;
			color: #000;
			cursor: default;
			display: inline-block;
		}
		
		li.token-input-token p {
			float: left;
			padding: 0;
			margin: 0;
		}
		
		li.token-input-token span {
			float: right;
			color: #777;
			cursor: pointer;
		}
		
		li.token-input-selected-token {
			background-color: #EEEEEE;
			color: #649BCB;
		}
		
		li.token-input-selected-token span {
			color: #bbb;
		}
		
		div.token-input-dropdown {
			position: absolute;
			width: 400px;
			background-color: #fff;
			overflow: hidden;
			border-left: 1px solid #ccc;
			border-right: 1px solid #ccc;
			border-bottom: 1px solid #ccc;
			cursor: default;
			font-size: 12px;
			font-family: Verdana;
			z-index: 1;
		}
		
		div.token-input-dropdown p {
			margin: 0;
			padding: 5px;
			font-weight: bold;
			color: #777;
		}
		
		div.token-input-dropdown ul {
			margin: 0;
			padding: 0;
		}
		
		div.token-input-dropdown ul li {
			background-color: #fff;
			padding: 3px;
			list-style-type: none;
		}
		
		div.token-input-dropdown ul li.token-input-dropdown-item {
			background-color: #fff;
		}
		
		div.token-input-dropdown ul li.token-input-dropdown-item2 {
			background-color: #fff;
		}
		
		div.token-input-dropdown ul li em {
			font-weight: bold;
			font-style: normal;
		}
		
		div.token-input-dropdown ul li.token-input-selected-dropdown-item {
			background-color: #F4F6F9;
			overflow: hidden;
		}
		
		div.token-input-dropdown ul li.token-input-selected-dropdown-item img {
			display: block;
			float: left;
			margin: 5px;
			border-radius: 10px;
		}
		
		.to-container {
			position: relative;
		}
		
		.t-cc-bcc-container .cc-btn {
			display: none;
		    position: absolute;
		    top: 28px;
		}
		.t-cc-bcc-container .cc-btn.change-position{
			right: 56px
		}
		.slds .slds-dropdown__item {
			padding: 10px;
		}
		
		.slds .slds-dropdown__item:hover {
			background: #eee;
		}
		
		/*ref popup content*/
		.slds .slds-card .slds-tile {
			position: relative;
		}
		
		.ref-popup-content {
			position: absolute !important;
			left: -326px;
			top: -5px;
			display: none;
		}
		
		.side-menu-card .slds-button--icon-border-filled {
			width: 25px;
			height: 25px;
		}
		
		.side-menu-card .slds-button--icon-border-filled .slds-button__icon {
			position: relative;
			top: -6px;
		}
		
		.slds-card.custom-card {
			height: 130px;
		}
		
		.summary-inner-content {
			width: 200px;
			display: block;
			word-wrap: break-word;
			height: 200px;
			overflow: auto;
		}
		
		.popup-left-content dl {
			margin: 10px 0;
		}
		
		.right-tickets .slds-tile__detail .slds-dl--horizontal__label {
			width: 100%;
		}
		
		.right-tickets .slds-tile__detail .slds-dl--horizontal__label span.slds-truncate
			{
			display: inline-block;
			padding: 0px 10px 0px 0px;
		}
		
		.right-section-tab .right-section-ticket {
			padding-top: 0px;
			padding-bottom: 0px;
		}
		
		.autofill-image-container {
			display: inline-block;
			overflow: hidden;
			padding: 5px;
			background: #A195ED;
			border-radius: 50%;
			text-align: center;
			width: 40px;
			height: 40px;
		}
		
		.autofill-image-container.user-bg {
			background: #A195ED;
		}
		
		.autofill-image-container.contact-bg {
			background: #66CAE4;
		}
		
		.autofill-image-container img {
			max-width: 80%;
		}
		
		.page-header-title {
			font-size: 24px !important;
			font-weight: 300 !important;
		}
		
		.page-logo-contaier {
			padding: 0px;
			background: #00A1E0;
			border-radius: 44px;
			text-align: center;
			width: 45px;
			height: 45px;
			padding-top: 0px;
		}
		
		.page-logo-contaier img {
			max-width: 80%;
			min-width: 45px;
		}
		
		.disable-click {
			pointer-events: none;
		}
		
		div.email-tab {
			overflow: hidden;
		}
		
		.spanlabel {
			display: inline-block;
			float: left;
			min-width: 55px;
		}
		
		.slds .slds-tabs--default__link.selected-tab {
			text-decoration: none;
			border-color: #0070d2;
			color: #16325c;
		}
		
		.activity-div {
			position: relative;
		}
		
		.activity-div:after {
			content: "";
			position: absolute;
			right: -4px;
			top: 30px;
			width: 1px;
			bottom: 0;
			background: #ccc;
		}
		
		.side-token .slds-text-heading--medium {
			display: block;
			height: 30px;
			overflow: hidden;
			white-space: nowrap;
			text-overflow: ellipsis;
		}
		
		.side-token .slds-popover {
			width: 320px;
		}
		
		.side-token .slds-popover .slds-media__figure {
			display: inline-block;
			float: left;
		}
		
		.side-token .slds-popover .ref-conetent {
			display: inline-block;
			float: left;
		}
		
		.side-token .slds-popover .ref-account {
			display: inline-block;
			float: left;
			max-width: 30%;
		}
		
		.side-token .slds-popover .interview-panel {
			height: 50px;
		}
		
		.side-token .slds-popover .interview-panel .slds-tile__title {
			font-size: 20px;
		}
		
		.side-token .slds-popover .field-attributes {
			clear: both;
		}
		
		.side-token .slds-popover .field-attributes .panel-group .panel-default .panel-collapse .slds-section__title
			{
			margin: 5px 0 5px 0;
		}
		
		.side-token .slds-popover .field-attributes .panel-group .panel-default .panel-heading
			{
			padding-left: 0;
		}
		
		.side-token .slds-popover .field-attributes .panel-group .panel-default
			{
			box-shadow: none;
		}
		
		.pop-close-btn {
			position: absolute !important;
			right: 5px;
			background: #F4F6F9 !important;
			border: none !important;
			top: 4px;
		}
		
		div.token-input-dropdown {
			border-left: 0px solid #ccc;
			border-right: 0px solid #ccc;
			border-bottom: 0px solid #ccc;
			background: none;
		}
		
		#error-block {
			background-color: #DA4949;
			color: WHITE;
			font-size: 15px;
			border-radius: 5px;
		}
		.email-div {
				width: 300px;
				height: 41px;
				border-radius: 5px;
				 
				position: fixed;
				 left: 200px;
				top: 83px;
				-webkit-box-shadow: 3	px 3px 8px 0px rgba(0, 0, 0, 0.75);
				-moz-box-shadow: 3px 3px 8px 0px rgba(0, 0, 0, 0.75);
				box-shadow: 3px 3px 8px 0px rgba(0, 0, 0, 0.75);
				color:rgb(255, 255, 255);
		    	background-color: rgb(84, 105, 141);
		    	border-radius: .25rem;
				font-size: 13px;
				padding: 12px 75px 0 13px;
				box-sizing: border-box;
				font-weight: bold;
				opacity: 1;
				transition: all 1s;
		}		 
					
		.email-div.emailhideit {
			opacity: 0;
			top: 0px;
		}
		
		.email-div .email-icon {
			position: absolute;
			fill: #fff;
			right: 1px;
			top: 6px;
			width:29px;
		}
		.email-preview{
			line-height: 21px;
			min-height:200px;
		}
		.slds-page-header.fixed{
			position: fixed;
			width: 100%;
			z-index: 999;
			top: 0;
		}
		#frmId{
			display:none;
		}
		#loading {
		    top: 0 !important;
		    right: 0 !important;
		    left: 0 !important;
		    bottom: 0 !important;
		    width: auto !important;
		    height: auto !important;
		    position: fixed !important;
		}
		.default-fixed-header{
		   position:fixed;
		   left:0;
		   top:0;
		   right:0;
		   z-index:999;
		}
		.invitation-page-grid{
		   margin-top:155px;
		}
		.invitation-rfsearch--page-grid{
		   margin-top:85px;
		}
		.error-msg{
			position: fixed;
		    z-index: 1000;
		    left: 25%;
		    top: 10px;
		}
		.overlay { 
    		width: 37rem !important;
		} 
		.overlay_body-cls {
    		min-height: 20vh !important;
		}
	 
	</style>
	
	<script>
	/* REF-1572
	objective : To show HelpOverlays
	modified By : Rajesh 29 May 2018
	*/ 
		var counter = 0;
		var msg = '';
		var header = '';
		var content = '';
		var addcls = '';
		var removcls = '';
		var loc = '';
		var frmTop = '';
		var frmLft = '';
		var totlstps='8';
		var helpAssistant = '{!JSENCODE(helpAssistant)}'; 

		/*jQuery( document ).ready(function() { 
			 
			if({!showOveray}) {
				setTimeout(function(){ 
					adjustModal();
					ShowOrHideComponent(true);  
					}, 2000);
			} else {
				setTimeout(function(){ 
					$(window).scrollTop(0);  
					}, 2000);
			}
		});*/

		function ShowOrHideComponent(action) { 
            counter ++; 
			$(window).scrollTop(0);

			if (action) {   
				var helpOverlayMapInvitation = JSON.parse('{!JSENCODE(helpOverlayInvitation)}');  

				if (counter == 1) { 
					window.scrollBy(0, jQuery('#divPreview').offset().top - 150); 
					msg = helpAssistant + ' ' + JSON.parse('"' + helpOverlayMapInvitation[1].value + '"');
					header = helpOverlayMapInvitation[1].header;
					content = msg.replace('@@@', totlstps);
					addcls = '';
					removcls = 'arrow_compbox arrow_box_top arrow_box_top_right arrow_box_top_Corner';
					loc = 'ddlMicrosite';
					frmTop = '0';
					frmLft = '450';
				} else if(counter == 2) {   // Step 2 –selecting recipients
					window.scrollBy(0, jQuery('#divEmailCCPanel').offset().top-150);  
					header = helpOverlayMapInvitation[2].header;
					content = JSON.parse('"' + helpOverlayMapInvitation[2].value + '"');
					addcls = 'arrow_box_top';
					removcls = 'arrow_compbox arrow_box_top_Corner arrow_box_top_right';
					loc = 'divEmailTo'; 
					frmTop = '57';
					frmLft = '12';				
				} else if(counter == 3) {  // Step 3 –invitation settings
					$( "#tab-default-11__item" ).trigger( "click" );			
					header = helpOverlayMapInvitation[3].header;
					content = JSON.parse('"' + helpOverlayMapInvitation[3].value + '"');
					addcls = 'arrow_box_top_right';
					removcls = 'arrow_compbox arrow_box_top arrow_box_top_Corner';
					loc = 'tab-default-11__item'; 
					frmTop = '3';
					frmLft = '-374';					
				} else if(counter == 4) { // Step 4 –select a template
					header = helpOverlayMapInvitation[4].header;
					content = JSON.parse('"' + helpOverlayMapInvitation[4].value + '"');
					addcls = 'arrow_compbox';
					removcls = 'arrow_box_top arrow_box_top_right arrow_box_top_Corner';
					loc = 'divSavePreview'; 
					frmTop = '-5'; 
					frmLft = '0';			 		
				} else if(counter == 5) {   
					$( "#tab-default-2__item" ).trigger( "click" );		 		
					header = helpOverlayMapInvitation[5].header;
					content = JSON.parse('"' + helpOverlayMapInvitation[5].value + '"');
					addcls = 'arrow_box_top_right';
					removcls = 'arrow_compbox arrow_box_top arrow_box_top_Corner';
					loc = 'divRefLabel';  
					frmTop = '-1';
					frmLft = '-388';					
				} else if(counter == 6) { 
					header = helpOverlayMapInvitation[6].header;
					content = JSON.parse('"' + helpOverlayMapInvitation[6].value + '"');
					addcls = 'arrow_box_top_right';
					removcls = 'arrow_compbox arrow_box_top arrow_box_top_Corner'; 
					loc = 'divAddContnet';  
					frmTop = '1';
					frmLft = '-372';					
				} else if(counter == 7) { 
					header = helpOverlayMapInvitation[7].header;
					content = JSON.parse('"' + helpOverlayMapInvitation[7].value + '"');
					addcls = 'arrow_compbox';
					removcls = 'arrow_box_top arrow_box_top_right arrow_box_top_Corner'; 
					loc = 'divPreview';  
					frmTop = '-30';
					frmLft = '215';					
				} else if(counter == 8) {				 
					header = helpOverlayMapInvitation[8].header;
					content = JSON.parse('"' + helpOverlayMapInvitation[8].value + '"');
					addcls = 'arrow_box_top_Corner';
					removcls = 'arrow_compbox arrow_box_top arrow_box_top_right';
					loc = 'btnSend'; 
					frmTop = '53';
					frmLft = '-315';					
				} else { 
					jQuery("body .modal-backdrop").remove();
					action = false;				
				}
			} else {
				jQuery("body .modal-backdrop").remove();
				action = false;
			} 
			showHideHelpOverlays(action, header, content, loc, addcls, removcls, totlstps, frmTop, frmLft); 
			adjustModal();
		}


	    var myApp = angular.module('myApp',['angularjs-datetime-picker','anguvideo']) 
	    .controller('tagsCtrl', function ($scope, $q, $filter ) {
	        $scope.refContentIds = '{!JSENCODE(selectedRefContents)}'; 
			$scope.showTypeCustomModal = false;
			$scope.modalEntry = false;
	        $scope.isEmailSent = false;
	        $scope.tags = [];
	        $scope.selectedMicroSiteId = null;
	        $scope.isShowCcPanel = false;
	        $scope.isShowEmailPanel = false;
	        $scope.selectedMictosite = '';
	        $scope.MictositeId = '{!JSENCODE(selectedMictosite)}';
			$scope.customContentSymbol = '{!URLFOR($Resource.refEdgeCutomContent)}';
	        $scope.isShowComposeBtn=true;
	        $scope.requestObject = []; 
	        $scope.contactIds = [];
	        $scope.contactEmailIds='{!JSENCODE(contactEmailIds)}';
	        $scope.EmailIds = {};
	        $scope.EmailIds['toContacts'] = [];
	        $scope.EmailIds['ccContacts'] = [];
	        $scope.EmailIds['bccContacts'] = [];
	        $scope.EmailIds['toUser'] = [];
	        $scope.EmailIds['ccUser'] = [];
	        $scope.EmailIds['bccUser'] = [];
	        $scope.EmailIds['toOther'] = [];
	        $scope.EmailIds['ccOther'] = [];
	        $scope.EmailIds['bccOther'] = [];
	        $scope.userIds = []; 
	        $scope.userEmailIds = '{!JSENCODE(userEmailIds)}';
	        $scope.recipientsIds = [];
	        $scope.recipientsEmailIds = '{!JSENCODE(recipientsEmailIds)}';
	        $scope.subject = '{!JSENCODE(emailSubject)}';
	        $scope.emailContent = '{!JSENCODE(emailContent)}';
	        $scope.invitaionName = '{!JSENCODE(invitaionName)}'; 
	        $scope.listReferenceContent = []; 
	        $scope.invitationExpire = '';
	        $scope.notes = '{!JSENCODE(notes)}';
	        $scope.opportunityName = '{!JSENCODE(opportunityName)}';
	        $scope.opportunityId = '{!JSENCODE(opportunity)}';
	        $scope.opportunityAccount = '{!JSENCODE(opportunityAccount)}';
	        $scope.fromLead = '{!fromLead}';
	        $scope.opportunityAccountId = '';
	        $scope.messageBody = '';
	        $scope.validationMessage = '';
	        $scope.caseId = '{!JSENCODE(caseId)}';
	        $scope.leadId = '{!JSENCODE(leadId)}';
	        $scope.maxDate =''; 
	        $scope.resource = '{!URLFOR($Resource.LightningCSS)}';
	        $scope.doctypeMap = {"UNKNOWN": "/assets/icons/doctype/unknown_60.png","XML": "/assets/icons/doctype/xml_60.png","TEXT": "/assets/icons/doctype/txt_60.png", "MP4": "/assets/icons/doctype/mp4_60.png", "CSV": "/assets/icons/doctype/csv_60.png", "EXCEL": "/assets/icons/doctype/excel_60.png", "JPG": "/assets/icons/doctype/image_60.png", "BMP": "/assets/icons/doctype/unknown_60.png", "PNG": "/assets/icons/doctype/image_60.png", "GIF": "/assets/icons/doctype/image_60.png", "LINK": "/assets/icons/doctype/link_60.png", "PDF": "/assets/icons/doctype/pdf_60.png", "POWER_POINT": "/assets/icons/doctype/ppt_60.png", "RTF": "/assets/icons/doctype/rtf_60.png", "WAV": "/assets/icons/doctype/audio_60.png", "MOV": "/assets/icons/doctype/video_60.png", "WORD": "/assets/icons/doctype/word_60.png", "WORD_X": "/assets/icons/doctype/word_60.png", "EXCEL_X": "/assets/icons/doctype/excel_60.png", "POWER_POINT_X": "/assets/icons/doctype/ppt_60.png","Reference Interview": "/assets/icons/doctype/video_60.png","ZIP": "/assets/icons/doctype/unknown_60.png"};
	        $scope.selectedContentIds = ''; 
	        $scope.isloading = true;
	        $scope.refContentlist ='';
	        $scope.showValidationMessage = false;
	        $scope.showOpportunityDetails = false;
	        $scope.isOpportunityAllowed = false;
	        $scope.isRfSearchAllowed = false;
	        $scope.isCaseAllowed = false;
	        $scope.isLeadAllowed = false;
	        $scope.forContent ='{!forContent}';
	        $scope.forAccount = '{!forAccount}';
	       	$scope.loadValidationMsg = false;
	        $scope.isContentInterviewType = false;
	        $scope.errMsg = '';
			$scope.isError = false;
			$scope.isContentUpdateable = {!isContentUpdateable};
			$scope.isShowPreview = false;
			$scope.emailTemplate = '';
			$scope.isReturned = '{!isReturned}';  
	        $scope.isCcAllowed ='{!isCcAllowed}';
	        $scope.emailToValues = '{!JSENCODE(emailTo)}';
	        $scope.emailBccValues = '{!JSENCODE(emailBcc)}';
	        $scope.emailCcValues = '{!JSENCODE(emailCc)}';
	        $scope.expdate = '{!JSENCODE(expdate)}';
		
	        $scope.emailTo = [];
	        $scope.emailBcc = [];
	        $scope.emailCc = [];
	        $scope.dateFormat = 'yyyy-MM-dd';
			        
            //initial function which is called on page load
			$scope.load  = function() {
                //REF-2387
                var emailBodyValue = JSON.parse(localStorage.getItem("invitationEmailBody"));
                localStorage.clear();
                
                if (emailBodyValue != undefined && emailBodyValue != null && emailBodyValue != '') {
                    $scope.emailContent = emailBodyValue;
                }
                
				$scope.getDateFormat().then(function(result) {
							
					if (result != null) {  
	                	   $scope.dateFormat = result;
	                	}
	                	$scope.expDate = $filter('date')('{!JSENCODE(expdate)}', $scope.dateFormat);
			        	$scope.init(); 
					 	
						 /*if({!showOveray}) { 
						 	adjustModal();
							ShowOrHideComponent(true);
						} */
           		});
			}
            
            //Cast date format according to locale
			$scope.getDateFormat = function () {
				var deferred = $q.defer();
                	Visualforce.remoting.Manager.invokeAction(
	               '{!$RemoteAction.InvitationSLDSController.getDateFormat}', 
		               function(result, event) {
		                   deferred.resolve(result);
		               },
		               {escape: true}
		            );
                    return deferred.promise;
			}
            //#1070 : convert date to yyyy-MM-dd format befor sending to controller
            $scope.convertToDate = function (date) {
           		date = (date == null) ? '' : date;
           		var regEx = /^[0-9]{4}\-(0[1-9]|1[012]|[1-9])\-([1-9]|0[1-9]|[12][0-9]|3[01])/;
                	
				if (date == null || date == '') {
					return '';
				}
                		
           		if (date.match(regEx))  { 
           			tempDF = date.split('-');
           			
                			if (tempDF.length < 3 || !$scope.checkDate(tempDF[2], tempDF[1], tempDF[0])) {
                				return null;
                			}
                			return date; 
					}
            		try {
            			var tempDF = $scope.dateFormat;
            			var tempDate = date + '';
            			tempDF = tempDF.split(/[./-]/g);
            			tempDate = tempDate.split(/[./-]/g);
            			var month = (tempDF.indexOf('MM') == -1) ? tempDate[tempDF.indexOf('M')] :tempDate[tempDF.indexOf('MM')];
            			var day = (tempDF.indexOf('dd') == -1) ? tempDate[tempDF.indexOf('d')] :tempDate[tempDF.indexOf('dd')];
            			var modDate = new Date(tempDate[tempDF.indexOf('yyyy')], month - 1, day);
            			var dateString = modDate.getFullYear() + '-' + (modDate.getMonth() + 1) + '-' + modDate.getDate();
             	 	
            	 		if (modDate != 'Invalid Date' && dateString.indexOf('NaN') == -1 ) {
            	 			
            	 			if (month.length > 2 || day.length > 2 || tempDate[tempDF.indexOf('yyyy')].length != 4 || !$scope.checkDate(day, month, tempDate[tempDF.indexOf('yyyy')])) {
             	 			return null;
             	 		}
			 			return dateString;
    				 	} else {
    				 		return null;
    				 	}
    				} catch (e) {
     					return null;
    				}
            }
                
            $scope.checkDate = function (day, month, year){
            		var returnval = true;
            		if (day == null || day.trim() == '' || month == null || month.trim() == '' || year == null || year.trim() == '' ||
            			parseInt(day) == NaN || parseInt(month) == NaN || parseInt(year) == NaN) {
            			returnval = false;
        			} else {
        				day = parseInt(day);
        				month = parseInt(month);
        				year = parseInt(year);
        			}
			    returnval = (month < 1 || month > 12 || day < 1) ? false : returnval;
			    var days = (month == 2) ? ((year % 400 == 0 || (year % 4 == 0 && year % 100 != 0)) ? 29 : 28) 
			    				: (month == 4 || month == 6 || month == 9 || month == 11) ? 30 : 31 ;
			    returnval = (day > days) ? false : returnval;
		        return returnval;
            }

            $scope.tourHelpoverlay = function(){  
				counter = 0;
				msg = '';
				header = '';
				content = '';
				addcls = '';
				removcls = '';
				loc = '';
				frmTop = '';
				frmLft = '';
				totlstps='8';   
				ShowOrHideComponent(true);  
	    	}

	        $scope.init = function () {  
	            $scope.callLoading(true);
	            $("#frmId").show();   
	            $scope.showEmailPanel();
	            
				if($scope.isReturned=='false') {  
	           		 Visualforce.remoting.Manager.invokeAction(
	                  '{!$RemoteAction.InvitationSLDSController.getPageInputs}',$scope.opportunityId,$scope.caseId,
	                  function(result, event) { 
	                  	if (result != null) {  
							$scope.invitaionName=result[0].InvitaionName ;
							$scope.expdate = $filter('date')(result[0].DefaultExpirationDays, $scope.dateFormat); 
							$scope.maxDate=result[0].MaximumExpirationDays ; 
							$scope.notes=result[0].Notes ; 
							$scope.opportunityName=$scope.parseResult(result[0].OpportunityName) ; 
							$scope.opportunityAccount=$scope.parseResult(result[0].OpportunityAccount) ;
							$scope.opportunityId=result[0].OpportunityId ; 
	                          
							if ($scope.opportunityId!='') { 
								$scope.isOpportunityAllowed=true;
							} else if ($scope.leadId!='') { 
								$scope.isLeadAllowed=true;
							} else if ($scope.caseId!='') { 
								$scope.isCaseAllowed=true;
							} else {
								$scope.isRfSearchAllowed=true;
							}
							$scope.opportunityAccountId=result[0].OpportunityAccountId ; 
							$scope.messageBody=result[0].EmailContent ;
							
							if ($scope.opportunityName != '') {
								$scope.showOpportunityDetails=true; 
							}
	                          	 
							try {  
								if ($scope.messageBody != null) {
									CKEDITOR.instances['txtSubject'].insertText($scope.messageBody);  
								}
							} catch(err) {
								CKEDITOR.instances['txtSubject'].setData($scope.messageBody);
							}  	 	
							$scope.$apply();  
	                      }
	                  },
	                  {escape: true}
	              );  

					if({!showOveray}) {
						setTimeout(function(){ 
							adjustModal();
							ShowOrHideComponent(true);  
							}, 2000);
					} else {
						setTimeout(function(){ 
							$(window).scrollTop(0);  
							}, 2000);
					}
					
	             } else {

					if ($scope.emailToValues != '') {
						$scope.emailTo= $scope.emailToValues.split(',');
					}

					if ($scope.emailBccValues != '') {
						$scope.emailBcc= $scope.emailBccValues.split(',');
					}

					if ($scope.emailCcValues != '') {
						$scope.emailCc= $scope.emailCcValues.split(',');
					}
						
					try {   
	                  
					  if ($scope.emailContent != null)
	                  	 CKEDITOR.instances['txtSubject'].setData($scope.emailContent);  
					} catch(err) {
	                  	 CKEDITOR.instances['txtSubject'].setData($scope.emailContent);
					} 

					if($scope.isCcAllowed == 'true') {
						$scope.isShowCcPanel=true;
					}

					if ($scope.contactEmailIds != '' && $scope.contactEmailIds != null) {
	                 	$scope.contactIds= $scope.contactEmailIds.split(',');
					}

					if ($scope.userEmailIds != '' && $scope.userEmailIds != null) {
						$scope.userIds= $scope.userEmailIds.split(',');
					} 

					if ($scope.recipientsEmailIds != '' &&  $scope.recipientsEmailIds != null) {  
						$scope.recipientsEmailIds=$scope.recipientsEmailIds.replace(/"/g,"");
	                 	$scope.recipientsEmailIds=$scope.recipientsEmailIds.replace("[","");
	                 	$scope.recipientsEmailIds=$scope.recipientsEmailIds.replace("]",""); 
	                 	$scope.recipientsIds= $scope.recipientsEmailIds.split(',');  
	                 }  
	                  
	                 if ($scope.opportunityName != '')
	                     $scope.showOpportunityDetails = true;
	                  
					if ($scope.opportunityId != '') { 
						$scope.isOpportunityAllowed = true;
					} else if ($scope.leadId != '') { 
						$scope.isLeadAllowed = true;
					} else if ($scope.caseId != '') { 
							$scope.isCaseAllowed = true;
					} else {
							$scope.isRfSearchAllowed = true;
					}  

					if ({!showOveray}) {
						setTimeout(function(){ 
							adjustModal();
							ShowOrHideComponent(true);  
							}, 2000);
					} else {
						setTimeout(function(){ 
							$(window).scrollTop(0);  
							}, 2000);
					}
	             }           
	                    
	          $scope.microSiteList = []; 
	             Visualforce.remoting.Manager.invokeAction(
	               '{!$RemoteAction.InvitationSLDSController.getMicrositesList}', 
	               function(result, event) {
	                   if (result != null) {  
	                       $scope.allMicroSiteList= result ; 
	                       $scope.$apply(); 
	                        var count=0; 
	                        $scope.selectedMicrositeId = $scope.allMicroSiteList[0];
	                        $scope.allMicroSiteList.forEach(function (val) {
	                        if(val.IsSelected==true){
	                            $scope.selectedMictosite=val.Id; 
	                            $scope.selectedMicrositeId = $scope.allMicroSiteList[count];
	                            }
	                            count+=1;
	                        });   
	                        
	                         
	                   }
	               },
	               {escape: true}
	           ); 
	           
	            if($scope.isReturned=='true'){  
						$scope.showEmailPanel();
					}
	                        
	           $scope.requestObject = [];
	              Visualforce.remoting.Manager.invokeAction(
	                '{!$RemoteAction.InvitationSLDSController.getEmailList}',  
	                function(result, event) {
	                    if (result != null) {  
	                        $scope.requestObject= result ;  
	                        $scope.$apply();  
	                        $scope.callLoading(false);  
	                        
	                    } 
	                    $scope.callLoading(false); 
	                },
	                {escape: true}
	            );  
	             loadData();
	            $scope.listReferenceContent = [];
	            Visualforce.remoting.Manager.invokeAction(
	              '{!$RemoteAction.InvitationSLDSController.loadReferenceContent}',
	              $scope.refContentIds,
	              function(result, event) {
	                  if (result != null) {  
	                      $scope.listReferenceContent = result ;  
	                      $scope.$apply();   
	                  }
				         $scope.loadValidationMsg=true;
				        
	                 if($scope.MictositeId!=''){
	                      document.getElementById("ddlMicrosite").value = $scope.MictositeId;
	                 	}
	              }, 
	              {escape: true}
	          ); 
	          
	         $scope.getSelectedRefContentId();
	         /*$(window).scroll(function(){
		         var maxLimit = 50;  
		       	if(($(this).scrollTop() - maxLimit) > 50){
		       	    $(".invitation-page-grid").css("magin-top","155px");	       		
		       		setTimeout(function(){ 
		       		   $(".slds-page-header").addClass("fixed");
	                   $(".invitation-page-grid").css("magin-top","0");
	                }, 150);
		       	}else{
		       		$(".slds-page-header").removeClass("fixed");
		       		$(".invitation-page-grid").css("magin-top","0");
		       	}
		            })*/
				 
	        } 
	                    
	        $scope.downloadRefContent = function(contId,fileType) {  
				$scope.showTypeCustomModal = false;
				Visualforce.remoting.Manager.invokeAction(
					'{!$RemoteAction.InvitationSLDSController.contentDownload}',
					contId,
					function(result, event) {
						if (result != null) {  
							$scope.openSourcePage(result,true,fileType);
						}
					},
					{escape: true}
				);
			}
	                
	     $scope.getSelectedRefContentId = function() {   
	        $scope.refContentlist='';
	         for (var i=0;i<$scope.listReferenceContent.length;i++){ 
	            $scope.refContentlist+=($scope.refContentlist=='')?$scope.listReferenceContent[i].RefContentId:','+$scope.listReferenceContent[i].RefContentId;
	            }   
	     } 
	     
	     $scope.setDefaultTemplate = function() {   
	        $scope.callLoading(true);
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.InvitationSLDSController.saveDefaultTemplate}',
                $scope.selectedMictosite,
                function(result, event) {  
                    if (result != null) {
                    		$scope.isError = true;  
    				$scope.errMsg = result; 
                    }  
                    $scope.$apply(function () {
                        $scope.callLoading(false);
                     });
                },
                {escape: true}
            ); 
	      }
	                
	    $scope.deleteRefContent = function(item) { 
	    	if( $scope.listReferenceContent.length!=1) {

				if (item!=-1){  
					$scope.listReferenceContent.splice(item, 1)
					//$scope.$apply();  
				} else {
					return false;
				} 
				$scope.getSelectedRefContentId(); 
				} 
				else {
				$scope.isError=true;
				$scope.errMsg= '{!$Label.You_cannot_delete_all_Contents}';
				}
	     }
	     
	     $scope.validateRequiredFields = function() {  
	        if(($scope.contactIds=='' || $scope.contactIds==null) && ($scope.userIds=='' || $scope.userIds==null) && ($scope.recipientsIds=='' || $scope.recipientsIds==null))
	            {
	                $scope.errMsg= '{!$Label.SELECT_RECIPIENT}';
	                return false;
	            } 
	        if($scope.subject=='' || $scope.subject==null)
	            {
	                $scope.errMsg= '{!$Label.ENTER_SUBJECT}';
	                return false;
	            }
	            
	        var e = document.getElementById("ddlMicrosite");
	        var siteValue = e.options[e.selectedIndex].value;  
	        if(siteValue.trim() == ''){
	            $scope.errMsg='{!$Label.SELECT_MICROSITE}';
	            return false;
	        }
	        
	        if ($scope.expdate == '' || $scope.expdate == null)  { 
	            $scope.errMsg = '{!$Label.ENTER_INVITATION_EXPIRATION}';
	            return false;
	        } else {
	        		var dateString = $scope.convertToDate($scope.expdate);
	                 		
	       		if (dateString != null) {
	       			$scope.expdate = dateString;
	       		} else {
	       			$scope.isError = true;
					$scope.errMsg = '{!$Label.Date_Invalid}' + $scope.expdate; 
	       		}
	        }
	        return true;
	      }  
	      
			$scope.backToPage = function() {  
				var form = document.createElement("form");
				form.setAttribute("method", "POST");
				form.setAttribute("action", "{!URLFOR($Page.RfSearchLightning)}"); 
				var hiddenField = document.createElement("input");
				hiddenField.setAttribute("type", "hidden");
				hiddenField.setAttribute("name", "refContentIds");
				hiddenField.setAttribute("value", []);
				
				form.appendChild(hiddenField);
				
				var hiddenFieldAcc = document.createElement("input");
				hiddenFieldAcc.setAttribute("type", "hidden");
				hiddenFieldAcc.setAttribute("name", "forAccount");
				hiddenFieldAcc.setAttribute("value", $scope.forAccount);
				form.appendChild(hiddenFieldAcc);
				
				var hiddenFieldCon = document.createElement("input");
				hiddenFieldCon.setAttribute("type", "hidden");
				hiddenFieldCon.setAttribute("name", "forContent");
				hiddenFieldCon.setAttribute("value", $scope.forContent);
				form.appendChild(hiddenFieldCon);
				
				var hiddenFieldOpp = document.createElement("input");
				hiddenFieldOpp.setAttribute("type", "hidden");
				hiddenFieldOpp.setAttribute("name", "opportunityId");
				hiddenFieldOpp.setAttribute("value", $scope.opportunityId);
				form.appendChild(hiddenFieldOpp);
				
				if ($scope.leadId != '') {
					var hiddenFieldLead = document.createElement("input");
					hiddenFieldLead.setAttribute("type", "hidden");
					hiddenFieldLead.setAttribute("name", "leadId");
					hiddenFieldLead.setAttribute("value", $scope.leadId);
					form.appendChild(hiddenFieldLead);
					var hiddenField21 = document.createElement("input");
					hiddenField21.setAttribute("type", "hidden");
					hiddenField21.setAttribute("name", "fromLead");
					hiddenField21.setAttribute("value", $scope.fromLead);
					form.appendChild(hiddenField21);
				}
				
				/*var overlayHid = document.createElement("input");
				overlayHid.setAttribute("type", "hidden");
				overlayHid.setAttribute("name", "helpOverlay");
				overlayHid.setAttribute("value", false);
				form.appendChild(overlayHid);*/

				document.body.appendChild(form);
				form.submit();
			}
	       
			$scope.shareRefContentIds = function () {
			    $scope.getSelectedRefContentId();
			    var refContentIds = $scope.refContentlist;
			    
			    if (refContentIds != '') {
			        $scope.isReturned = true;
			        var form = document.createElement("form");
			        form.setAttribute("method", "POST");
			        form.setAttribute("action", "{!URLFOR($Page.RfSearchLightning)}");
			        
			        var hiddenField = document.createElement("input");
			        hiddenField.setAttribute("type", "hidden");
			        hiddenField.setAttribute("name", "refContentIds");
			        hiddenField.setAttribute("value", refContentIds);
			        form.appendChild(hiddenField);
					
			        var hiddenFieldAcc = document.createElement("input");
			        hiddenFieldAcc.setAttribute("type", "hidden");
			        hiddenFieldAcc.setAttribute("name", "forAccount");
			        hiddenFieldAcc.setAttribute("value", $scope.forAccount);
			        form.appendChild(hiddenFieldAcc);
					
			        var hiddenFieldCon = document.createElement("input");
			        hiddenFieldCon.setAttribute("type", "hidden");
			        hiddenFieldCon.setAttribute("name", "forContent");
			        hiddenFieldCon.setAttribute("value", $scope.forContent);
			        form.appendChild(hiddenFieldCon);
					
					if ($scope.leadId != '') {
						var hiddenFieldLead = document.createElement("input");
						hiddenFieldLead.setAttribute("type", "hidden");
						hiddenFieldLead.setAttribute("name", "leadId");
						hiddenFieldLead.setAttribute("value", $scope.leadId);
						form.appendChild(hiddenFieldLead);
						var hiddenField22 = document.createElement("input");
						hiddenField22.setAttribute("type", "hidden");
						hiddenField22.setAttribute("name", "fromLead");
						hiddenField22.setAttribute("value", $scope.fromLead);
						form.appendChild(hiddenField22);
					}
			        var hiddenFieldOpp = document.createElement("input");
			        hiddenFieldOpp.setAttribute("type", "hidden");
			        hiddenFieldOpp.setAttribute("name", "opportunityId");
			        hiddenFieldOpp.setAttribute("value", $scope.opportunityId);
			        form.appendChild(hiddenFieldOpp);
					
			        var hiddenField6 = document.createElement("input");
			        hiddenField6.setAttribute("type", "hidden");
			        hiddenField6.setAttribute("name", "isReturned");
			        hiddenField6.setAttribute("value", $scope.isReturned);
			        form.appendChild(hiddenField6);
					
			        var hiddenField7 = document.createElement("input");
			        hiddenField7.setAttribute("type", "hidden");
			        hiddenField7.setAttribute("name", "contactIds");
			        hiddenField7.setAttribute("value", $scope.contactIds.join(','));
			        form.appendChild(hiddenField7);
					
			        var hiddenField8 = document.createElement("input");
			        hiddenField8.setAttribute("type", "hidden");
			        hiddenField8.setAttribute("name", "userIds");
			        hiddenField8.setAttribute("value", $scope.userIds.join(','));
			        form.appendChild(hiddenField8);
					
			        var hiddenField9 = document.createElement("input");
			        hiddenField9.setAttribute("type", "hidden");
			        hiddenField9.setAttribute("name", "recipientsIds");
			        hiddenField9.setAttribute("value", angular.toJson($scope.recipientsIds));
			        form.appendChild(hiddenField9);
					
			        var hiddenField10 = document.createElement("input");
			        hiddenField10.setAttribute("type", "hidden");
			        hiddenField10.setAttribute("name", "emailSubject");
			        hiddenField10.setAttribute("value", $scope.subject);
			        form.appendChild(hiddenField10);
					
			        var hiddenField11 = document.createElement("input");
			        hiddenField11.setAttribute("type", "hidden");
			        hiddenField11.setAttribute("name", "emailContent");
			        
			        try {
			            
			            if (typeof CKEDITOR.instances['txtSubject'] != 'undefined') {
			                $scope.emailContent = CKEDITOR.instances['txtSubject'].getData();
			                $scope.emailContent = $scope.emailContent.replace(/\n/g, '');
			                hiddenField11.setAttribute("value", $scope.emailContent);
			            } else {
			                hiddenField11.setAttribute("value", $scope.emailContent);
			            }
			        } catch (err) {
			            hiddenField11.setAttribute("value", '');
			        }
			        form.appendChild(hiddenField11);
                    
                    //REF-2387
                    localStorage.setItem("invitationEmailBody", JSON.stringify($scope.emailContent));
					
			        var hiddenField12 = document.createElement("input");
			        hiddenField12.setAttribute("type", "hidden");
			        hiddenField12.setAttribute("name", "invitaionName");
			        hiddenField12.setAttribute("value", $scope.invitaionName);
			        form.appendChild(hiddenField12);
					
			        var hiddenField13 = document.createElement("input");
			        hiddenField13.setAttribute("type", "hidden");
			        hiddenField13.setAttribute("name", "note");
			        hiddenField13.setAttribute("value", $scope.notes);
			        form.appendChild(hiddenField13);
					
			        var hiddenField14 = document.createElement("input");
			        hiddenField14.setAttribute("type", "hidden");
			        hiddenField14.setAttribute("name", "selectedMictosite");
			        hiddenField14.setAttribute("value", document.getElementById("ddlMicrosite").value);
			        form.appendChild(hiddenField14);
					
			        var date = document.getElementById('txtExpireDate').value;
			        var hiddenField15 = document.createElement("input");
			        hiddenField15.setAttribute("type", "hidden");
			        hiddenField15.setAttribute("name", "expDate");
			        hiddenField15.setAttribute("value", date);
			        form.appendChild(hiddenField15);
					
			        var hiddenField16 = document.createElement("input");
			        hiddenField16.setAttribute("type", "hidden");
			        hiddenField16.setAttribute("name", "isCcAllowed");
			        hiddenField16.setAttribute("value", $scope.isCcAllowed);
			        form.appendChild(hiddenField16);
					
			        var hiddenField17 = document.createElement("input");
			        hiddenField17.setAttribute("type", "hidden");
			        hiddenField17.setAttribute("name", "emailTo");
			        hiddenField17.setAttribute("value", $scope.emailTo.join(','));
			        form.appendChild(hiddenField17);
					
			        var hiddenField18 = document.createElement("input");
			        hiddenField18.setAttribute("type", "hidden");
			        hiddenField18.setAttribute("name", "emailBcc");
			        hiddenField18.setAttribute("value", $scope.emailBcc.join(','));
			        form.appendChild(hiddenField18);
					
			        var hiddenField19 = document.createElement("input");
			        hiddenField19.setAttribute("type", "hidden");
			        hiddenField19.setAttribute("name", "emailCc");
			        hiddenField19.setAttribute("value", $scope.emailCc.join(','));
			        form.appendChild(hiddenField19);
					
			        var hiddenField20 = document.createElement("input");
			        hiddenField20.setAttribute("type", "hidden");
			        hiddenField20.setAttribute("name", "opportunityName");
			        hiddenField20.setAttribute("value", $scope.opportunityName);
			        form.appendChild(hiddenField20);
					
			        var hiddenField21 = document.createElement("input");
			        hiddenField21.setAttribute("type", "hidden");
			        hiddenField21.setAttribute("name", "opportunityAccount");
			        hiddenField21.setAttribute("value", $scope.opportunityAccount);
			        form.appendChild(hiddenField21);
					
			        var overlayHid = document.createElement("input");
					overlayHid.setAttribute("type", "hidden");
					overlayHid.setAttribute("name", "helpOverlay");
					overlayHid.setAttribute("value", false);
					form.appendChild(overlayHid);

			        document.body.appendChild(form);
			        form.submit();
			    } else {
			        alert('No Referance content selected. ');
			    }
			}
	     
			$scope.backRfSearch = function() {
				window.location='{!URLFOR($Page.RfSearchLightning)}';
			}
			
	      $scope.parseResult = function(result) {
	          if (result != null) {
	              result = result.replace(/&quot/gi, '"');
	              result = result.replace(/&amp/g, '&');
	              result = result.replace(/&lt/g, '<');
	              result = result.replace(/&gt/g, '>');
	              result = result.replace(/;/g, '');
	              result = result.replace(/&#39/g, '\'');
	              return result;
	          }
	       }
		$scope.openModal = function(accWrap) {
			console.log(accWrap);
			if (accWrap.InterviewType!='Reference Interview') {
				$scope.isContentInterviewType = false;
			} else {
				$scope.isContentInterviewType = true;
			}
			$scope.modalEntry = accWrap;
			$scope.showTypeCustomModal = true;
		}
	     $scope.sendInvitation = function() { 
			$scope.callLoading(true);
	        if($scope.validateRequiredFields()){
	             $scope.isError=false;
	             if (typeof CKEDITOR.instances['txtSubject'] != 'undefined')  
	                 $scope.emailContent=CKEDITOR.instances['txtSubject'].getData();
	              else
	                 $scope.emailContent=''; 
	                 $scope.getSelectedRefContentId();
	                 
	             var e = document.getElementById("ddlMicrosite");
	             var siteValue = e.options[e.selectedIndex].value;
	             if(siteValue.trim() != ''){
	                    $scope.selectedMictosite=siteValue;
	              } 
	                     
	            Visualforce.remoting.Manager.invokeAction(
	               '{!$RemoteAction.InvitationSLDSController.createInvitation}',
	               $scope.contactIds.join(','),angular.toJson($scope.EmailIds),$scope.userIds.join(','),angular.toJson($scope.recipientsIds),$scope.subject,$scope.emailContent,
	               $scope.invitaionName,$scope.opportunityId, ($scope.caseId != '' ? $scope.caseId : $scope.leadId), $scope.expdate,$scope.selectedMictosite,
	               $scope.notes,$scope.refContentlist,
	               function(result, event) { 
	                   if (result != null) { 
	                       $scope.$apply(function () {
	                       if (result.startsWith('Error') == false) {
	                             $scope.isError = false;
	                             $scope.isEdit = false;
	                          	 $scope.isEmailSent=true;
	                          	 emailConfirmation();
	                          	 showDisolvingAlert(result);
	                           }
	                       else{  
	                       		result = result.replace(/&#39/g, '\'');
	                            $scope.errMsg = result.substring(5);
	                            $scope.isError = true;
	                       }
	                       	  $scope.callLoading(false);	    
	                       });
	                   }
	                   else
	                   {
	                     $scope.callLoading(false);
	                   }
	               },
	               {escape: true}
	           );  
	       }  
	       else
	         {
	            $scope.isError=true;
	            $scope.callLoading(false);
	        }
	   }
	   
	   $scope.openSourcePage = function(page,isSamePage,fileType) {  
	      var newURL = window.location.protocol + "//" + window.location.host + "/" + page;
	      if(fileType=='LINK')
	         newURL =page;
	         
	      if(isSamePage==true){ 
	         window.open(newURL, '_blank');  
	      }    
	      else
	      {  
	       window.open(newURL,'_top');  
	      }           
	    }     
	   
	    $scope.EmailPreview = function() {
	       $scope.isShowPreview=true;
			var getHTMLdata = CKEDITOR.instances['txtSubject'].getData(); 
			$("#divEmailPreview").html(getHTMLdata); 
		}
	    
	    $scope.ReturnRfSearch = function() {                    
	      var baseUrl = document.referrer;
	      baseUrl=baseUrl+'/apex/RfSearchLightning';
	      window.location.href = baseUrl;                      
	    }
	    
	    $scope.callLoading = function(value){
	      $scope.isloading = value;
	    }

		
	                    
	    $scope.showEmailPanel = function() {  
	        $("#divEmailTo").removeClass("col-md-9 to-container");
	        $("#divEmailTo").addClass("col-md-11 to-container");
	        $(".cc-btn").css("left",($(".to-container").offset().left + $(".to-container").width()) - 50);
	        $(".cc-btn").show(); 
	          try { 
	           	 	if($scope.messageBody!=null)
	           	 		CKEDITOR.instances['txtSubject'].insertText($scope.messageBody);  
	           	  }catch(err) { 
	           	 		var str = JSON.stringify($scope.messageBody); 
	           	 		var res = $scope.messageBody.replace(/\n/g, "@");  
	           	 		var strMsg=res.split("@"); 
	           	 		var msg=""; 
	           	 		for(i = 0; i < strMsg.length; i++){  
								msg+= strMsg[i]+"<br/>";
						 } 
	           	 	 CKEDITOR.instances['txtSubject'].setData(msg);
	           	  } 
	    } 
	    
	    $scope.showCcPanel = function() {    
	        $scope.isShowCcPanel = true;
	        $scope.isCcAllowed=true; 
	    } 
	    
	    $scope.SetDefaultTemp = function(microsite) {
	        var e = document.getElementById("ddlMicrosite");
	        var siteValue = e.options[e.selectedIndex].value;
	        if(siteValue.trim() == ''){
	            alert('{!$Label.SELECT_MICROSITE}');
	            return false;
	            }
	        else
	            {  
	                $scope.selectedMictosite=siteValue; 
	                $scope.setDefaultTemplate();
	            }
	     }
	                    
	    $scope.PreviewSite =function previewMicrosite(){
	        var e = document.getElementById("ddlMicrosite");
	        var siteValue = e.options[e.selectedIndex].value;
	        
			if(siteValue.trim() == ''){
	             alert('{!$Label.SELECT_MICROSITE}');
	             return false;
	        } else{
	             window.open('{!$Page.PreviewMicrositeNew}?micrositeId='+siteValue.trim()+'&selectRefContent={!URLENCODE(selectedRefContents)}&internalPreview=true' ,'_blank');
	           }
	      }
	      
	    
	      $scope.hideTypePopup = function($event) {  
	          if ($($event.target).hasClass("type-icon") == false && $($event.target).hasClass("not-hide") == false) {
	                $scope.isPopoverShow = false;
	              }
	            
	         }
	                 
	                
	    //$scope.IsPopoverShow = false;
	    $scope.ShowHide = function (divId) {  
	        //If DIV is visible it will be hidden and vice versa.
	        $scope.IsPopoverShow = $scope.IsPopoverShow ? false : true;
	      }
	      
	    function getIndexOf(arr, val, prop) {
	        var l = arr.length,
	        k = 0;
	        for (k = 0; k < l; k = k + 1) {
	             if (arr[k][prop] === val) {
	                return k;
	            }
	        }
	     return false;
	    } 
	    
		$scope.showPopover = function(accWrap) { 
	        	if (accWrap.FileType == 'Reference Interview') {
	        		return true; 
	        	} else {
	        		return false; 
	        	}
	        	
		   }
	                    	
	    function validateEmail(email) {
			var filter = /^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
			if (!filter.test(email)){
					$scope.errMsg='Invalid email Id';
		            $scope.isError=true;
	 				$scope.$apply(); 	
					return false;
				}
			else{
					$scope.isError=false;
					$scope.$apply(); 
					return true;
				} 
	    }
	     
	    $scope.PushEmail = function(email,type) {
	       		if ($scope.EmailIds[type].indexOf(email) == -1) {
	       			//alert(email);
	        		$scope.EmailIds[type].push(email);
	       		}
	              	
	         } 
	          
	     $scope.removeEmail= function(email,type) { 
	     	index = $scope.EmailIds[type].indexOf(email); 
	     	if (index >=0) {
	     	 		$scope.EmailIds[type].splice(index, 1)
	     	 }
	     }
	       
	     $scope.removeRetainedEmail= function(emailIds,type) {  
	     	if(type=='To'){
		     	index = $scope.emailTo.indexOf(emailIds);  
		     	if (index >=0) {
		     	 		$scope.emailTo.splice(index, 1)
		     	 }
	     	 }
	     	 else if(type=='Bcc'){
	     	 	index = $scope.emailBcc.indexOf(emailIds); 
		     	if (index >=0) {
		     	 		$scope.emailBcc.splice(index, 1)
		     	 }
	     	 }
	     	 else {
	     	 	index = $scope.emailCc.indexOf(emailIds); 
		     	if (index >=0) {
		     	 		$scope.emailCc.splice(index, 1)
		     	 }
	     	 }
	     }
	       
	         $scope.getSearchResult = function () {   
	        	return $scope.requestObject;
	      }
	         
	   function loadData() {  
	         var urlPath='{!URLFOR($Resource.LightningCSS)}';   
	         var urlAbPath=''; 
	         var prepopForTo=[];
	         var prepopForBcc=[];
	         var prepopForCc=[];
	         var arrValue =[];
	         for (i = 0; i < $scope.emailTo.length; i++) 
	         { 
	          arrValue=$scope.emailTo[i].split('_#');
	          if(arrValue.length==4){
		           tmp = { Name: arrValue[0],Id:arrValue[1],Type:arrValue[2],Email:arrValue[3]};
		           prepopForTo.push(tmp);
		           arrValue=[];
	           }
	         }
	         
	         for (j = 0; j < $scope.emailBcc.length; j++) 
	         { 
	         	arrValue=$scope.emailBcc[j].split('_#');
	          	if(arrValue.length==4){
	           		tmpBcc ={ Name: arrValue[0],Id:arrValue[1],Type:arrValue[2],Email:arrValue[3]};
	           		prepopForBcc.push(tmpBcc);
	           		arrValue=[];
	           	 }
	         }
	         
	         for (k = 0; k < $scope.emailCc.length; k++) 
	         { 
	        	arrValue=$scope.emailCc[k].split('_#');
	          	if(arrValue.length==4){
	           		tmpCc = { Name: arrValue[0],Id:arrValue[1],Type:arrValue[2],Email:arrValue[3]};
	           		prepopForCc.push(tmpCc);
	           		arrValue=[];
	            }
	         }
	         $("#txtTo").tokenInput("txtTo",{  
	          	prePopulate: prepopForTo ,
	           	propertyToSearch: "Email",
	           	minChars: 3,
	           	resultsFormatter: function(item) { 
	            urlAbPath=urlPath+item.Imgurl;  
	            var defineClass = "";
	           
			    if(item.Type=='User') {
	               defineClass = "user-bg";
	            } else {
	               defineClass = "contact-bg";
	            }
	            return "<li>" + "<span class='autofill-image-container " + defineClass + "'><img  alt='' title='" + item.Type + "' style='margin-top: 0px;' src="+urlAbPath+"  width='39px' height='39px' /></span>" + "<div style='display: inline-block; padding-left: 10px;'><div class='full_name'>" + item.Name + "</div><div class='email'>" + item.Email + "</div></div></li>" },
	           	tokenFormatter: function(item) {   
	           		return "<li><p>" + item.Name + "</p></li>"
	           },
	          	onAdd: function (item) { 
	              
				  if (item.Type=='Contact') {
	                  	$scope.contactIds.push(item.Id);
	                  	$scope.PushEmail(item.Email,'toContacts');  
				  } else if(item.Type=='User'){
						$scope.userIds.push(item.Id);
						$scope.PushEmail(item.Email,'toUser');
	             } else{
	                  	$scope.PushEmail(item.Email,'toOther');
	                  	$scope.recipientsIds.push(item.Email); 
	             }
				 $scope.emailTo.push(item.Name+'_#'+item.Id+'_#'+item.Type+'_#'+item.Email);
				 $scope.isError=false;
	          },
	          onDelete: function (item) {    
	               if(item.Type=='Contact'){ 
	                  var index = $scope.contactIds.indexOf(item.Id); 
	                  if (index >= 0) {
		                  $scope.contactIds.splice(index, 1);
	                  } 
	                   
	                  $scope.removeEmail(item.Email,'toContacts');
	              }
	               else  if(item.Type=='User'){
	                  var index = $scope.userIds.indexOf(item.Id);
	                  if (index >= 0)
	                  	$scope.userIds.splice(index, 1); 
	                  	
	                  $scope.removeEmail(item.Email,'toUser');
	              }
	              else
	              {
	                 var index = $scope.recipientsIds.indexOf(item.Email);
	                 if (index >= 0)
	                 	$scope.recipientsIds.splice(index, 1);
	                 	
	                 $scope.removeEmail(item.Email,'toOther');
	              }
	              
	               $scope.removeRetainedEmail(item.Name+'_#'+item.Id+'_#'+item.Type+'_#'+item.Email,'To');
	          }
	       
	   });
	          
	    $("#txtBcc").tokenInput("txtBcc", {
	   		   prePopulate: prepopForBcc ,
	           propertyToSearch: "Email",
	           minChars: 3,
	           resultsFormatter: function(item){ 
	             urlAbPath=urlPath+item.Imgurl;  
	             var defineClass = "";
	             if(item.Type=='User'){
	                defineClass = "user-bg";
	             }else{
	                defineClass = "contact-bg";
	             }
	             return "<li>" + "<span class='autofill-image-container " + defineClass + "'><img  alt='' title='" + item.Type + "' style='margin-top: 0px;' src="+urlAbPath+"  width='39px' height='39px' /></span>" + "<div style='display: inline-block; padding-left: 10px;'><div class='full_name'>" + item.Name + "</div><div class='email'>" + item.Email + "</div></div></li>" },
	           tokenFormatter: function(item) {  
	          
	             return "<li><p>" + item.Name + "</p></li>"
	           },
	           onAdd: function (item) { 
	              if(item.Type=='Contact'){
	                  	$scope.contactIds.push(item.Id);
	                 	 $scope.PushEmail(item.Email,'bccContacts');  
	                  }
	              else if(item.Type=='User'){
	                  	$scope.userIds.push(item.Id);
	                	$scope.PushEmail(item.Email,'bccUser');
	                  }
	              else{
	                	 $scope.PushEmail(item.Email,'bccOther');
	                	 $scope.recipientsIds.push(item.Email);
	                 }
	                 $scope.emailBcc.push(item.Name+'_#'+item.Id+'_#'+item.Type+'_#'+item.Email);
	                  $scope.isError=false;
	          },
	          onDelete: function (item) {
	               if(item.Type=='Contact'){
	                  var index = $scope.contactIds.indexOf(item.Id);
	                  if (index >= 0)
	                  	$scope.contactIds.splice(index, 1);
	                   
	                   $scope.removeEmail(item.Email,'bccContacts');
	                  
	              }
	               else  if(item.Type=='User'){
	                  var index = $scope.userIds.indexOf(item.Id);
	                  if (index >= 0)
	                  	$scope.userIds.splice(index, 1); 
	                  	
	                   $scope.removeEmail(item.Email,'bccUser'); 
	              }
	              else
	              {
	               var index = $scope.recipientsIds.indexOf(item.Email);
	                 if (index >= 0)
	                 	$scope.recipientsIds.splice(index, 1);
	                 	
	                 $scope.removeEmail(item.Email,'bccOther');
	              }
	              
	               $scope.removeRetainedEmail(item.Name+'_#'+item.Id+'_#'+item.Type+'_#'+item.Email,'Bcc');
	          }
	        
	    });
	   
		$(".side-token .type-icon").click(function(){
			$(".slds-popover").hide();
			$(this).parent().parent().parent().parent().find(".slds-popover").show();    
		})     
	    $("#txtCc").tokenInput("txtCc", {
	           prePopulate: prepopForCc,
	           propertyToSearch: "Email",
	           minChars: 3,
	           resultsFormatter: function(item){ 
	             urlAbPath=urlPath+item.Imgurl;  
	             var defineClass = "";
	             if(item.Type=='User'){
	                defineClass = "user-bg";
	             }else{
	                defineClass = "contact-bg";
	             }
	             return "<li>" + "<span class='autofill-image-container " + defineClass + "'><img  alt='' title='" + item.Type + "' style='margin-top: 0px;' src="+urlAbPath+"  width='39px' height='39px' /></span>" + "<div style='display: inline-block; padding-left: 10px;'><div class='full_name'>" + item.Name + "</div><div class='email'>" + item.Email + "</div></div></li>" },
	           tokenFormatter: function(item) {  
	             
	             return "<li><p>" + item.Name + "</p></li>"
	           },
	           onAdd: function (item) { 
	              if(item.Type=='Contact'){
		                  $scope.contactIds.push(item.Id);
		                  $scope.PushEmail(item.Email,'ccContacts');  
	                  }
	              else  if(item.Type=='User'){
		                  $scope.userIds.push(item.Id);
		                  $scope.PushEmail(item.Email,'ccUser'); 
	                  }
	              else{ 
		                 $scope.PushEmail(item.Email,'ccOther');
		                 $scope.recipientsIds.push(item.Email);
	                 }
	              $scope.emailCc.push(item.Name+'_#'+item.Id+'_#'+item.Type+'_#'+item.Email);
	              $scope.isError=false;    
	          },
	          onDelete: function (item) {
	               if(item.Type=='Contact'){
	                  var index = $scope.contactIds.indexOf(item.Id);
	                  if (index >= 0) 
	                  	$scope.contactIds.splice(index, 1);
		             
	                  	$scope.removeEmail(item.Email,'ccContacts');
	                  
	              }
	               else  if(item.Type=='User'){
	                  var index = $scope.userIds.indexOf(item.Id);
	                  if (index >= 0)
	                  	$scope.userIds.splice(index, 1); 
	                  
	                   $scope.removeEmail(item.Email,'ccUser'); 
	              }
	              else
	              {
	                 var index = $scope.recipientsIds.indexOf(item.Email);
	                 if (index >= 0)
	                 	$scope.recipientsIds.splice(index, 1);
	                  $scope.removeEmail(item.Email,'ccOther');
	              }
	              
	               $scope.removeRetainedEmail(item.Name+'_#'+item.Id+'_#'+item.Type+'_#'+item.Email,'Cc');
	          }
	       
	   }); 
	   $(".token-input-input-token input").blur(function() {
	   		var controlId=$(this).attr('id');
	   		if($(this).val().trim()!=''){
		   		if(validateEmail($(this).val()))
		            {    
		                  $scope.isError=false;
		                  if($(this).val()!='' && $(this).val()!=null && $(this).val().length>3){
		                    if(controlId=='token-input-txtTo')
	                        	$("#txtTo").tokenInput("add", {Id: $(this).val(), Name: $(this).val(),Email:$(this).val(),Type:'Unknown'});
		                     else if(controlId=='token-input-txtBcc')
		                       		 $("#txtBcc").tokenInput("add", {Id: $(this).val(), Name: $(this).val(),Email:$(this).val(),Type:'Unknown'});
		                        else
		                            $("#txtCc").tokenInput("add", {Id: $(this).val(), Name: $(this).val(),Email:$(this).val(),Type:'Unknown'});
		                    }       
		         }
	         }
		});
		
		
	   $(".token-input-input-token input").keyup(function(event) {   
	    var controlId=$(this).attr('id');
	     var keycode = (event.keyCode ? event.keyCode : event.which); 
	    if($(this).val().length>2)
	     {  
	     		/*$scope.requestObject=[];
	              Visualforce.remoting.Manager.invokeAction(
	                '{!$RemoteAction.InvitationSLDSController.getEmailSearchList}', 
	                $(this).val(),
	                function(result, event) {
	                    if (result != null) {  
	                        $scope.requestObject= result ;  
	                        $scope.$apply(); 
	                    }  
	                },
	                {escape: true}
	            );  */
	     }
	     
	      if(keycode==8 || keycode==46)
	      { 	 
	     	 $scope.isError=false; 
	     	 $scope.$apply(); 
	      }
	       
	      if(keycode==186)
	          { 
	          if($(this).val().trim()!=''){
	              if(validateEmail($(this).val().slice(0, -1)))
		              {   
		                  $scope.isError=false;
		                   $scope.$apply(); 
		                  if($(this).val()!='' && $(this).val()!=null && $(this).val().length>3){
		                    if(controlId=='token-input-txtTo')
		                        $("#txtTo").tokenInput("add", {Id: $(this).val().slice(0, -1), Name: $(this).val().slice(0, -1),Email:$(this).val().slice(0, -1),Type:'Unknown'});
		                     else if(controlId=='token-input-txtBcc')
	                        		$("#txtBcc").tokenInput("add", {Id: $(this).val().slice(0, -1), Name: $(this).val().slice(0, -1),Email:$(this).val().slice(0, -1),Type:'Unknown'});
		                        else
		                            $("#txtCc").tokenInput("add", {Id: $(this).val().slice(0, -1), Name: $(this).val().slice(0, -1),Email:$(this).val().slice(0, -1),Type:'Unknown'});
		                    	}       
		                  }
	              }
	          }
	      else if(keycode==13 || keycode==32 ){  
	      	   $scope.isError=false;
	      	   if($(this).val().trim()!=''){
		           if(validateEmail($(this).val()))
		                  { 
		                    $scope.isError=false;
		                     $scope.$apply(); 
		                    if($(this).val()!='' && $(this).val()!=null && $(this).val().length>3){
		                    if(controlId=='token-input-txtTo')
		                        $("#txtTo").tokenInput("add", {Id: $(this).val(), Name: $(this).val(),Email:$(this).val(),Type:'Unknown'});
		                        else if(controlId=='token-input-txtBcc')
		                            		$("#txtBcc").tokenInput("add", {Id: $(this).val(), Name: $(this).val(),Email:$(this).val(),Type:'Unknown'});
		                                else
		                                    $("#txtCc").tokenInput("add", {Id: $(this).val(), Name: $(this).val(),Email:$(this).val(),Type:'Unknown'});
		                        }
		                	}
		             }
	            }
	    });
	          
	  }
	}); 

	$(window).load(function(){ 
	    var isRegister=false;
		//$(window).scrollTop(0);
		adjustModal();
	    $("#divInvitationSetting .slds-tabs--default__nav li a").click(function(){
	        var getID = $(this).attr("aria-controls");
	        $("#divInvitationSetting .slds-tabs--default__nav li a").removeClass("selected-tab");
	        $(this).addClass("selected-tab");
	        $("#divInvitationSetting .slds-tabs--default__content").removeClass("slds-show");
	        $("#divInvitationSetting .slds-tabs--default__content").addClass("slds-hide");
	        $("#divInvitationSetting "+"#"+getID).removeClass("slds-hide");
	        $("#divInvitationSetting "+"#"+getID).addClass("slds-show");
	        if(getID == "tab-invitation-2"){ 
	        	$("#tab-invitation-2 .slds-popover").hide();
	        }
	        if(getID == "tab-invitation-2" && isRegister==false){
	            	$(".side-token .type-icon").each( function(i){
	            	 $("#img_"+i).click(function(){	 
					    	if($(this).parent().parent().parent().parent().find(".slds-popover").css("display") == "block"){
					    		$(this).parent().parent().parent().parent().find(".slds-popover").hide();
					    	}else{
					    		$(".slds-popover").hide();
					    		$(this).parent().parent().parent().parent().find(".slds-popover").show();
					    		$(".pop-close-btn").click(function(){				    	
							   	 	$(this).parent().hide();
							    })
					    	}		    	    
					    })
	            	})
	        }
	        isRegister=true;
	    })
	   
	    var control = document.querySelector('[ng-controller="tagsCtrl"]');
	    var ng_el = angular.element(control);
	    var ng_el_scope = ng_el.scope();
	    var isReturned = ng_el_scope.isReturned;  
	    if(isReturned=='false'){
		    //$(".cc-btn").css("left",$("#btnCompose").offset().left - 80);
		     $(".cc-btn").show();
	    }
		
	})
	
	  	/*
		*  re #119 This function will show Disolving Alert for sales reward
		*/
			
		function showDisolvingAlert(rewards) { 

			if (rewards!='') { 
				var str_array = rewards.split(','); 

				if(str_array.length==2) {
					notification(str_array[1],str_array[0]); 
				} 
			}
		}
		
		function emailConfirmation(){   
		var notificationMsg='Email Sent.';
		jQuery("#lblEmailMessage").text(notificationMsg);   
		jQuery(".email-div").removeClass("emailhideit");
		setTimeout(function(){ 	
			jQuery(".email-div").addClass("emailhideit");
			}, 3000); 
		}
		
		function custom_search(searchType, searchString, callback) { 
			if (searchType == 'txtTo' || searchType == 'txtCc' || searchType == 'txtBcc') {  
			Visualforce.remoting.Manager.invokeAction(
			'{!$RemoteAction.InvitationSLDSController.getEmailSearchList}'
				, searchString, function(results, event) { 
				if (event.status) { callback(results); 
				} 
			} ) 
			}
		}
		function redirectToBack(){ 
		}

		function adjustModal() { 
			$("#helpOverlay").find(".modal-backdrop").clone().appendTo("body");
			$("#helpOverlay").find(".modal-backdrop").remove();
			$("body .modal-backdrop").css("height","auto");

		}	
	</script>
</head>

<body class="slds" ng-app="myApp" ng-controller="tagsCtrl"
	ng-click="hideTypePopup($event)" style="overflow-x: hidden;"
	onkeydown="return (event.keyCode!=13)">
	<apex:form >
		<div id="frmId">
			<!-- REF-1572 -->
			
			<div ng-show="isEmailSent">
				<c:RewardNotification />
			</div> 
			<div ng-init="load();" ng-show="true">
				<div ng-show="loadValidationMsg" class="error-msg">
						<div id="toast-msg" ng-show="isError" class="slds-notify_container">
								<div class="slds-notify slds-notify--toast slds-theme--error" role="alert">
									<span class="slds-assistive-text">{!$Label.Error}</span>
									<div class="slds-button slds-button--icon-inverse slds-notify__close">
										<svg aria-hidden="true" class="slds-button__icon slds-button__icon--large" ng-click="isError=false" style="cursor:pointer">
											<use xlink:href="{!URLFOR($Resource.LightningCSS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
										</svg>
										<span class="slds-assistive-text">{!$Label.Close}</span>
									</div>
									<div class="slds-notify__content slds-grid">
										<svg aria-hidden="true" class="slds-icon slds-icon--small slds-m-right--small slds-col slds-no-flex">
											<use xlink:href="{!URLFOR($Resource.LightningCSS,'/assets/icons/utility-sprite/svg/symbols.svg#error')}"></use>
										</svg>
										<div class="slds-col slds-align-middle">
											<h2 class="slds-text-heading--small" style="white-space: pre-wrap;">{{errMsg}}</h2>
										</div>
									</div>
								</div>
							</div>
				</div> 
			
				<div class="slds-page-header default-fixed-header" role="banner">
					<div class="slds-grid">
						<div class="slds-col slds-has-flexi-truncate">
							<div class="slds-media">
								<div class="slds-media__figure page-logo-contaier">
									<img
										src="{{'{!URLFOR($Resource.LightningCSS)}' + '/assets/icons/standard/email_60.png'}}" />
								</div>
								<div class="slds-media__body" style="margin-top: 20px;">
									<h1
										class="slds-page-header__title slds-truncate slds-align-middle page-header-title">{!$Label.New_Invitation}</h1>

								</div>
							</div>
						</div>
						<div class="slds-col slds-no-flex slds-align-bottom"> 
							<div ng-hide="isEmailSent">
								<a style="cursor: pointer;"
									ng-click="backToPage()"
									class="slds-button slds-button--neutral">{!$Label.Cancel}</a>
								<a style="cursor: pointer;" id="btnSend"
									ng-click="sendInvitation()"
									class="slds-button slds-button--brand">{!$Label.Send}</a>

								<div ng-click="tourHelpoverlay();" id="helpoverlayId" style="cursor: pointer; float: right;">
									<span class="slds-icon_container" title="Help for the page">
										<svg aria-hidden="true" class="slds-icon slds-icon-text-default slds-icon_x-small" style="width: 23px;margin-left: 10px;fill:#ff9900;">
											<use xlink:href="{!URLFOR($Resource.LightningCSS_2_3,'/assets/icons/utility-sprite/svg/symbols.svg#question_mark')}"></use>
										</svg>
									</span>
								</div>
							</div>
							<!-- </div> -->
							<div ng-show="isEmailSent">
								<div ng-show="isRfSearchAllowed"
									class="slds-grid slds-wrap slds-grid--pull-padded">
									<input type="button" id="btnback"
										value="{!$Label.Back_to_RF_Search}" ng-click="backRfSearch();"
										class="slds-button slds-button--neutral action-btns-natural col-md-3"
										style="padding: 0; width: 180px;"></input>
								</div>
								<div ng-show="isOpportunityAllowed"
									class="slds-grid slds-wrap slds-grid--pull-padded">
									<input type="button" id="btnback"
										value="{!$Label.Back_to_Opportunity}"
										ng-click="openSourcePage(opportunityId,false,'Page');"
										class="slds-button slds-button--neutral action-btns-natural col-md-3"
										style="padding: 0; width: 180px;"></input>

								</div>
								<div ng-show="isLeadAllowed"
									class="slds-grid slds-wrap slds-grid--pull-padded">
									<input type="button" id="btnback"
										value="{!$Label.Back_to_SearchLead}"
										ng-click="openSourcePage(leadId,false,'Page');"
										class="slds-button slds-button--neutral action-btns-natural col-md-3"
										style="padding: 0; width: 180px;"></input>

								</div>
								<div ng-show="isCaseAllowed"
									class="slds-grid slds-wrap slds-grid--pull-padded">
									<input type="button" id="btnback"
										value="{!$Label.Back_to_Case}" 
										ng-click="openSourcePage(caseId,false,'Page');"
										class="slds-button slds-button--neutral action-btns-natural col-md-3"
										style="padding: 0; width: 180px;"></input>

								</div>
							</div>
						</div>
					</div>
					<div ng-hide="isEmailSent" >
						<ul class="slds-grid slds-page-header__detail-row slds-size--1-of-2"
							ng-show="showOpportunityDetails">
							<li class="slds-col--padded slds-size--1-of-3">
								<p class="slds-text-heading--label slds-truncate">{!$Label.Opportunity_Account}</p>
								<a href="#void"
								ng-click="openSourcePage(opportunityAccountId,true,'Page')">{{opportunityAccount}}</a>
							</li>
							<li class="slds-col--padded slds-size--1-of-3">
								<p class="slds-text-heading--label slds-truncate">{!$Label.Opportunity_Name}</p>
								<a href="#void"
								ng-click="openSourcePage(opportunityId,true,'Page')">{{opportunityName}}</a>
							</li>
						</ul>
					</div>
				</div>
				<div ng-show="loadValidationMsg">
				
					<div class="email-div emailhideit" >
						<span id="lblEmailMessage" ></span>
							<div class="email-icon">
								<svg aria-hidden="true" class="slds-button__icon slds-button__icon--hint ">
									<use xlink:href="{{'{!URLFOR($Resource.LightningCSS)}' + '/assets/icons/utility-sprite/svg/symbols.svg#close'}}"></use>
									</svg>
							</div> 
					</div>
					
					<div ng-show="isEmailSent"
						style="padding-bottom: 17px; width: 50%; padding: 6px; font-weight: 400; color: #109877;">
						<svg
							class="slds-icon slds-icon-action-call slds-icon--medium slds-p-around--x-medium">
								<use
								xlink:href="{!URLFOR($Resource.LightningCSS,'/assets/icons/utility-sprite/svg/symbols.svg#info')}"></use>
							</svg>
						{!$Label.Invitation_sent}
					</div>
				</div>
				<div ng-hide="isEmailSent" ng-class="{'slds-grid slds-wrap slds-grid--pull-padded invitation-page-grid': showOpportunityDetails, 'slds-grid slds-wrap slds-grid--pull-padded invitation-rfsearch--page-grid': !showOpportunityDetails}"	>
					<div id="divTab"
						class="slds-col--padded slds-size--1-of-2 slds-medium-size--5-of-6 slds-large-size--8-of-12 activity-div">
						<div class="slds-tabs--default">
							<ul class="slds-tabs--default__nav" role="tablist">
								<li
									class="slds-tabs--default__item slds-text-heading--label slds-active"
									title="{!$Label.Activity}" role="presentation"><a
									class="slds-tabs--default__link selected-tab" href="#void"
									role="tab" tabindex="0" aria-selected="true"
									aria-controls="tab-activity-1" id="tab-default-1__item">{!$Label.Activity}</a></li>
							</ul>
							<div class="slds-card" style="margin-left: 5px;margin-top:13px;">
							<div class="slds-card__header slds-grid">
								<div
									class="slds-media slds-media--center slds-has-flexi-truncate">

									<div class="slds-media__body" style="position: relative;">
										<h2 class="slds-text-heading--small slds-truncate">{!$Label.Microsite_Template}</h2>
										<span
											style="position: absolute; left: 158px; top: -4px; font-size: 22px; color: #f00;">*</span>
											<div id="divPreview"><img style="width:20px; position: absolute; left: 177px;top: 0px; cursor: pointer;" title="Preview Microsite" tooltip ="{!$Label.Preview_Microsite}" src="{{'{!URLFOR($Resource.LightningCSS)}' + '/assets/icons/utility/preview_60.png'}}" 
														ng-click="PreviewSite()" /></div>
									</div>
								</div>
								
							</div>
							<div class="slds-card__body">
								<div class="slds-media__body">
									<div class="slds-form-element">
										<div class="slds-form-element__control">
											<div
												class="slds-select_container slds-size--1-of-3 action-select">

												<select ng-model="selectedMicrositeId" id="ddlMicrosite"
													class="slds-select"
													ng-options="option.Name for option in allMicroSiteList track by option.Id"></select> 
											</div> 
											<div id="divSavePreview" style="position: absolute; left: 35%; top: 5px;"><a href="#" ng-click="SetDefaultTemp()">{!$Label.Save_as_Default_Template}</a></div>
										</div>
									</div>
								</div>
							</div>
						</div>
							<div id="tab-default-1-1__item"
								class="slds-tabs--default__content slds-show" role="tabpanel"
								aria-labelledby="tab-default-1-1__item">
								<div class="slds-tabs--scoped" style="margin-left: 5px;">
									<ul class="slds-tabs--scoped__nav" role="tablist">
										<li
											class="slds-tabs--scoped__item slds-text-heading--label slds-active"
											title="{!$Label.Email}" role="presentation"><a
											class="slds-tabs--scoped__link" href="#void" role="tab"
											tabindex="0" aria-selected="true" aria-controls="tab-scoped-1"
											id="tab-scoped-1__item">{!$Label.Email}</a></li>

									</ul>
									<div id="tab-scoped-1"
										class="slds-tabs--scoped__content slds-show email-tab"
										role="tabpanel" aria-labelledby="tab-scoped-1__item">

										<div class="col-lg-12 col-md-12">
											<div class="row">
												<div class="col-lg-12 col-md-12">
													<div id="divEmailCCPanel">
														<div class="panel-body autoComp-continer">
															<div class="row t-cc-bcc-container">
																<div class="col-md-1 to-cc-lable">To</div>
																<div id="divEmailTo" class="col-md-9 to-container">
																	<input type="text" id="txtTo" autocomplete="off"
																		name="blah" /> 
																		
																</div>
																<a href="#" ng-hide="isShowCcPanel"
																		class="cc-btn" ng-click="showCcPanel()">Cc</a> 
																<!--<input type="button" id="btnCompose" value="Compose" -->
																	<!--ng-show="isShowComposeBtn" ng-click="showEmailPanel()" -->
																	<!--class="slds-button slds-button--neutral action-btns col-md-3" -->
																	<!--style="padding: 0; width: 87px;"></input> -->

															</div>
															<div id="divEmailPanel">
																<div class="row t-cc-bcc-container"
																	ng-show="isShowCcPanel">
																	<div class="col-md-1 to-cc-lable">Cc</div>
																	<div class="col-md-11">
																		<input type="text" id="txtCc" name="blah" />
																	</div>

																</div>
																<div class="row t-cc-bcc-container">
																	<div class="col-md-1 to-cc-lable">Bcc</div>
																	<div class="col-md-11">
																		<input type="text" id="txtBcc" name="blah" />
																	</div>

																</div>
																<div class="row t-cc-bcc-container">
																	<div class="col-md-1 to-cc-lable">
																		{!$Label.Subject} <span
																			style="position: absolute; left: 55px; top: 0px; font-size: 22px; color: #f00;">*</span>
																	</div>

																	<div class="col-md-11">
																		<input type="text" ng-model="subject" id="txtSubj" maxlength="100"
																			name="subject" class="token-input-list" />
																	</div>
																</div>
																<div id="divEmail">
																	<textarea class="ckeditor" id="txtSubject"></textarea>
																	<div >
																	<img style="width:20px; cursor: pointer;" title="Preview" src="{{'{!URLFOR($Resource.LightningCSS)}' + '/assets/icons/utility/preview_60.png'}}" ng-click="EmailPreview()" />
																	</div>
																</div>
															</div>
														</div>
														<!--/panel-body-->

													</div>

												</div>
												<!--/row-->
											</div>
										</div>

									</div>
								</div>
							</div>

						</div>
						
					</div>
					<div id="divInvitationSetting"
						class="slds-col--padded slds-size--1-of-2 slds-medium-size--1-of-6 slds-large-size--4-of-12">
						<div id = "divTabList" class="slds-tabs--default">
							<ul class="slds-tabs--default__nav" role="tablist">
								<li
									class="slds-tabs--default__item slds-text-heading--label slds-active"
									title="{!$Label.Invitation_Settings}" role="presentation"><a
									class="slds-tabs--default__link selected-tab" href="#void"
									role="tab" tabindex="0" aria-selected="true"
									aria-controls="tab-invitation-1" id="tab-default-11__item">{!$Label.Invitation_Settings}</a></li>
								<li class="slds-tabs--default__item slds-text-heading--label"
									title="{!$Label.Included_Content}" role="presentation"><a
									class="slds-tabs--default__link" href="#void" role="tab"
									tabindex="-1" aria-selected="false"
									aria-controls="tab-invitation-2" id="tab-default-2__item">{!$Label.Included_Content}</a></li>

							</ul>
							<div id="tab-invitation-1"
								class="slds-tabs--default__content slds-show" role="tabpanel"
								aria-labelledby="tab-default-1__item">

								<div class="slds-form-element custom-form-element-container">
									<div class="spanlabel">
										<label class="slds-form-element__label lable-override"
											for="inputSample2">{!$Label.Name}</label>
									</div>
									<div class="slds-form-element__control form-control-override">
										<input id="txtName" ng-model="invitaionName" class="slds-input"
											type="text" value="{{invitaionName}}" />
									</div>
								</div>
								<div class="slds-form-element custom-form-element-container">
									<div class="spanlabel">
										<label class="slds-form-element__label lable-override"
											for="inputSample2">{!$Label.Expires}</label><span
											style="position: absolute; left: 40px; top: -4px; font-size: 15px; color: #f00;">*</span>
									</div>
									<div class="slds-form-element__control form-control-override">
										<input class="slds-input" ng-model="expdate" placeholder="{{dateFormat.toLowerCase()}}" 
											id="txtExpireDate" date-format="{{dateFormat}}" datetime-picker="datetime-picker" />
										<span>(Max {{maxDate}} days)</span>

									</div>
								</div>

								<div class="slds-form-element custom-form-element-container">
									<div class="spanlabel">
										<label class="slds-form-element__label lable-override"
											for="textarea-input-01">{!$Label.Notes}</label>
									</div>
									<div class="slds-form-element__control form-control-override">
										<textarea id="txtNotes" ng-model="notes" value="{{notes}}"
											class="slds-textarea" placeholder=""></textarea>
									</div>
								</div>


							</div>
							<div id="tab-invitation-2"
								class="slds-tabs--default__content slds-hide" role="tabpanel"
								aria-labelledby="tab-default-2__item">
								<div class="slds-card">
									<div class="slds-card__header slds-grid">
										<div id="divRefLabel"
											class="slds-media slds-media--center slds-has-flexi-truncate">

											<div class="slds-media__body" style="position: relative;">
												<h2 class="slds-text-heading--small slds-truncate">{!$Label.Included_Reference_Content}</h2>
											</div>
										</div>
                                        <!-- REF-2617 -->
                                        <div class="slds-col slds-no-flex slds-align-bottom">
                                            <a style="margin-right:16px;" ng-click="shareRefContentIds()" class="slds-button slds-button--neutral">{!$Label.Add_Content}</a>
                                        </div>
									</div>

									<div class="slds-card__body">
										<div class="slds-media__body">
											<div class="slds-form-element">
												<div class="slds-form-element__control">
													<div
														class="slds-select_container slds-size--1-of-1 action-select right-section-tab">
														<div
															class="slds-popover__body right-section-ticket side-token"
															ng-repeat="lstCont in listReferenceContent">

															<dl class="slds-popover__body-list">

																<dd class="slds-media slds-tile side-menu-card">
																	<div class="slds-media__figure">
																		<img ng-if="lstCont.InterviewType!='Reference Interview' && !lstCont.isCustomContent"  src="{{resource+doctypeMap[lstCont.FileType]}}"
																			class="type-icon" ng-click="openModal(lstCont);" 
																			style="width: 38px; cursor: pointer;" />
																		<img ng-if="lstCont.InterviewType=='Reference Interview' && !lstCont.isCustomContent"  src="{{resource+doctypeMap[lstCont.InterviewType]}}"
																			class="type-icon" id="img_{{$index}}"
																			style="width: 38px; cursor: pointer;" />
																		<img ng-if="lstCont.isCustomContent"  src="{{customContentSymbol}}"
																			class="type-icon" ng-click="openModal(lstCont);"
																			style="width: 38px; cursor: pointer;" />
																	</div>
																	<div class="slds-media__body right-tickets">
																		<!-- <p class="slds-tile__title slds-truncate">
																			<span style="color: #2785D8">{{lstCont.Title}}</span>
																		</p> -->
																		<div ng-if="isContentUpdateable">
																			<a href="/{{lstCont.RefContentId}}" target="_blank" class="slds-tile__title ">
																				{{lstCont.Title}}
																			</a>
																		</div>
																		<div ng-if="!isContentUpdateable">
																			<span class="slds-tile__title ">
																				{{lstCont.Title}}
																			</span>
																		</div>
																		<div class="slds-tile__detail">
																			<dl class="slds-dl--horizontal slds-text-body--small">
																				<dt class="slds-dl--horizontal__label">
																					<span class="slds-truncate">{!$Label.Type}</span> <span
																						class="slds-truncate">{{lstCont.RefContentTypeName}}</span>
																				</dt>

																				<dt class="slds-dl--horizontal__label">
																					<span class="slds-truncate">{!$Label.Account}</span>
																					<span class="slds-truncate">{{lstCont.Account}}</span>
																				</dt>

																			</dl>
																		</div>
																	</div>



																	<!-- pop over -->
																	<div class="slds-popover slds-popover--panel slds-nubbin--right-top ref-popup-content not-hide" role="dialog">
																		<a class="slds-button slds-button--icon-border-filled pop-close-btn" style="cursor: pointer;" aria-haspopup="true">
																			<svg aria-hidden="true" class="slds-button__icon slds-button__icon--hint ">
																				<use xlink:href="{{'{!URLFOR($Resource.LightningCSS)}' + '/assets/icons/utility-sprite/svg/symbols.svg#close'}}"></use>
																			</svg>
																		</a>
																		<div class="slds-popover__header " ng-if="lstCont.InterviewType!='Reference Interview' && lstCont.isCustomContent">
																			<div class="slds-media slds-media--center slds-m-bottom--small">
																				<div class="slds-media__figure">
																					<img src="{{customContentSymbol}}" ng-click="downloadRefContent(lstCont.ContentId,lstCont.FileType)"/>
																				</div>
																				<div class="slds-media__body">
																					<div ng-if="isContentUpdateable">
																						<a href="/{{lstCont.RefContentId}}" target="_blank" class="slds-text-heading--medium">
																							{{lstCont.Title}}
																						</a>
																					</div>
																					<div ng-if="!isContentUpdateable">
																						<span class="slds-text-heading--medium">
																							{{lstCont.Title}}
																						</span>
																					</div>
																				</div>
																			</div>
																			<div class="slds-grid slds-wrap slds-grid--pull-padded"  style="max-height:250px;overflow-y:auto;">
																				<div class="slds-grid slds-wrap slds-popover__body not-hide">
																					<div class="slds-col slds-size--1-of-1 slds-p-bottom--x-small not-hide">
																						<div class="not-hide" style="white-space: normal; word-wrap: break-word;">
																							<div class="slds-scrollable--y not-hide">
																								<div class="panel-group not-hide" id="accordion" role="tablist" aria-multiselectable="true">
																									<div class="panel panel-default not-hide" style="background: none; border: none">
																										<div class="panel-body not-hide">
																											<div>
																												<div class="slds-col slds-size--1-of-1 slds-p-bottom--x-small not-hide" ng-repeat="item in lstCont.customContentFieldsList">
																													<p class="slds-text-heading--label slds-truncate not-hide">
																														{{item.label}}
																													</p>
																													<span class="slds-truncate not-hide" ng-if="item.type == 'BOOLEAN'" >
																														<input type="checkbox" name="options" value="on" ng-checked="item.value == 'true' || item.value == 'TRUE'" ng-disabled="true"/>
																													</span>
																													<p class="slds-truncate not-hide" ng-if="item.type != 'BOOLEAN'" ng-bind="item.value">
																													</p>
																												</div>
																												<div class="slds-col sslds-size--1-of-1 slds-p-bottom--x-small not-hide">
																													<p class="slds-text-heading--label slds-truncate not-hide">
																														{!$Label.Summary}
																													</p>
																													<div>
																														<span style="display: block;word-wrap: break-word;">{{lstCont.Summary}}</span>
																													</div>
																												</div>
																											</div>
																										</div>
																									</div>
																								</div>
																							</div>
																						</div>
																					</div>
																				</div>	
																			</div>
																		</div>
																		<div class="slds-popover__header" ng-if="lstCont.InterviewType!='Reference Interview' && !lstCont.isCustomContent">
																			<div class="slds-media slds-media--center slds-m-bottom--small">
																				<div class="slds-media__figure">
																					<img src="{{resource+doctypeMap[lstCont.FileType]}}"
																						ng-click="downloadRefContent(lstCont.ContentId,lstCont.FileType)" />

																				</div>
																				<div class="slds-media__body">
																					<!-- <div ng-if="lstCont.IsAccessible">
																						<a href="/{{lstCont.RefContentId}}" target="_blank"
																							class="slds-text-heading--medium">{{lstCont.Title}}</a>
																					</div>
																					<div ng-if="!lstCont.IsAccessible">
																						<span class="slds-text-heading--medium">{{lstCont.Title}}</span>
																					</div> -->
																					<div ng-if="isContentUpdateable">
																						<a href="/{{lstCont.RefContentId}}" target="_blank" class="slds-text-heading--medium">
																							{{lstCont.Title}}
																						</a>
																					</div>
																					<div ng-if="!isContentUpdateable">
																						<span class="slds-text-heading--medium">
																							{{lstCont.Title}}
																						</span>
																					</div>
																				</div>
																			</div>
																			<div class="slds-grid slds-wrap slds-grid--pull-padded">
																				<div
																					class="slds-col--padded slds-size--1-of-5 slds-p-bottom--x-small popup-left-content">
																					<dl>
																						<dt>
																							<p class="slds-text-heading--label slds-truncate">{!$Label.Type}</p>
																						</dt>
																						<dd>
																							<p class="slds-truncate">{{lstCont.RefContentTypeName}}</p>

																						</dd>
																					</dl>
																					<dl>
																						<dt>
																							<p class="slds-text-heading--label slds-truncate">{!$Label.Account}</p>
																						</dt>
																						<dd>
																							<span>{{lstCont.Account}}</span>
																						</dd>
																					</dl>
																					<dl>
																						<dt>
																							<p class="slds-text-heading--label slds-truncate">{!$Label.Size}</p>
																						</dt>
																						<dd>
																							<span>{{lstCont.FileSize}} K</span>
																						</dd>
																					</dl>
																				</div>
																				<div
																					class="slds-col--padded slds-size--3-of-5 slds-p-bottom--x-small">
																					<dl>
																						<dt>
																							<p class="slds-text-heading--label slds-truncate">{!$Label.Summery}</p>
																						</dt>
																						<dd>
																							<span class="summary-inner-content">{{lstCont.Summary}}</span>
																						</dd>
																					</dl>
																				</div>

																				<div
																					class="slds-col--padded slds-size--1-of-2 slds-p-bottom--x-small">

																				</div>
																			</div>
																		</div>

																		<div class="slds-popover__header" ng-if="lstCont.InterviewType=='Reference Interview' && !lstCont.isCustomContent">
																			<div class="slds-media__figure">
																				<img src="{{parseResult(lstCont.SpeakerPhoto)}}"
																					class="type-icon" id="img_{{$index}}"
																					style="width: 38px;" />
																			</div>
																			<div class="slds-media__body right-tickets interview-panel">
																				<p class="slds-tile__title slds-truncate">
																					<a href="/{{lstCont.RefContentId}}" target="_blank" class="slds-text-heading--medium" style="color: #333;">{{lstCont.Title}}</a>
																				</p>
																			</div>
																			<div
																				class="slds-col slds-size--1-of-2 slds-p-bottom--x-small not-hide ref-conetent">
																				<dl class="not-hide">
																					<dt class="not-hide">
																						<p
																							class="slds-text-heading--label slds-truncate not-hide">
																							{!$Label.Type}</p>
																					</dt>
																					<dd class="slds-truncate not-hide">
																						{{lstCont.RefContentTypeName}}</dd>
																				</dl>
																			</div>
																			<div
																				class="slds-col slds-size--1-of-2 slds-p-bottom--x-small not-hide ref-conetent">
																				<dl class="not-hide">
																					<dt class="not-hide">
																						<p class="slds-text-heading--label slds-truncate not-hide">
																							{!$Label.Account}</p>
																					</dt>
																					<dd ng-show="lstCont.Account != ''"
																						class="not-hide">
																						{{lstCont.Account}}</dd>
																				</dl>
																			</div>
																			<div
																				class="slds-col slds-size--1-of-1 slds-p-bottom--x-small not-hide field-attributes">
																				<dl class="not-hide">
																					<div class="slds-text-body--regular not-hide"
																						style="white-space: normal; word-wrap: break-word;">
																						<div class="slds-scrollable--y not-hide">
																							<div class="panel-group not-hide" id="accordion"
																								role="tablist" aria-multiselectable="true">
																								<div class="panel panel-default not-hide"
																									style="background: none; border: none">
																									<div class="panel-heading not-hide" role="tab"
																										id="headingInfo" style="background: none;">
																										<h4 class="panel-title not-hide">
																											<a class="collapsed not-hide" role="button"
																												data-toggle="collapse"
																												data-parent="#accordion" href="#collapseInfo"
																												aria-expanded="true"
																												aria-controls="collapseInfo"
																												style="display: block; text-decoration: none; color: #337ab7;">
																												<strong class="not-hide">{!$Label.Info}</strong>
																											</a>
																										</h4>
																									</div>
																									<div id="collapseInfo"
																										class="panel-collapse collapse not-hide"
																										role="tabpanel" aria-labelledby="headingInfo">
																										<div class="panel-body not-hide"
																											style="padding: 10px 0 5px 0;">
																											<div class="slds-section__title not-hide">
																												<strong class="not-hide">{!$Label.Speaker_Info}</strong>
																											</div>
																											<p class="slds-scrollable--y not-hide">{{lstCont.SpeakerInfo}}</p>
																											<div class="slds-section__title not-hide">
																												<strong class="not-hide">{!$Label.Org_Website}</strong>
																											</div>
																											<p class="slds-scrollable--y not-hide">{{lstCont.OrgWebsite}}</p>
																											<div class="slds-section__title not-hide">
																												<strong class="not-hide">{!$Label.Org_Description}</strong>
																											</div>
																											<p class="slds-scrollable--y not-hide">{{lstCont.OrgDescription}}</p>
																										</div>
																									</div>
																								</div>
																								<div class="panel panel-default not-hide"
																									ng-repeat="video in lstCont.videoWrapList"
																									style="background: none; border: none">
																									<div class="panel-heading not-hide" role="tab"
																										id="heading-{{$index}}"
																										style="background: none;">
																										<h4 class="panel-title not-hide">
																											<a class="collapsed not-hide" role="button"
																												data-toggle="collapse"
																												data-parent="#accordion"
																												href="#collapse-{{$index}}"
																												aria-expanded="true"
																												aria-controls="collapse-{{$index}}"
																												style="display: block; text-decoration: none; color: #337ab7;">
																												<strong class="not-hide">{{video.questionTitle}}</strong>
																											</a>
																										</h4>
																									</div>
																									<div id="collapse-{{$index}}"
																										class="panel-collapse collapse not-hide"
																										role="tabpanel"
																										aria-labelledby="heading-{{$index}}">
																										<div class="panel-body not-hide"
																											style="padding: 10px 0 5px 0;">
																											<div class="not-hide" anguvideo="anguvideo"
																												ng-model="video.videoURL" width="305"></div>
																										</div>
																									</div>
																								</div>
																							</div>
																						</div>
																					</div>
																				</dl>
																			</div>
																		</div>
																	</div>
																	<!-- end -->

																	<div class="slds-no-flex">
																		<div class="slds-dropdown-trigger slds-is-open"
																			aria-expanded="true">
																			<button ng-click="return false;"
																				class="slds-button slds-button--icon-border-filled isEmailSent disable-click"
																				aria-haspopup="true">
																				<svg aria-hidden="true"
																					class="slds-button__icon slds-button__icon--hint">
																				<use
																						xlink:href="{{'{!URLFOR($Resource.LightningCSS)}' + '/assets/icons/utility-sprite/svg/symbols.svg#down'}}"></use>
																				</svg>
																				<span class="slds-assistive-text">Show More</span>
																			</button>
																			<div class="slds-dropdown slds-dropdown--right">
																				<ul class="dropdown__list" role="menu">
																					<li class="slds-dropdown__item">
																						<p class="slds-truncate">
																							<a href="#" ng-click="deleteRefContent($index)">{!$Label.Delete}</a>
																						</p>
																					</li>
																				</ul>
																			</div>
																		</div>
																	</div>

																</dd>
															</dl>
														</div>
													</div>
													<div></div>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>

						</div>

					</div>
				</div>
			</div>
			<div ng-show="isShowPreview">
				<div  class="slds-modal slds-fade-in-open" aria-hidden="false" role="dialog">
					<div class="slds-modal__container">
						<div class="slds-modal__header">
							<a class="slds-button slds-button--icon-inverse slds-modal__close" ng-click="isShowPreview=false">
								<svg aria-hidden="true" class="slds-button__icon slds-button__icon--large">
									<use xlink:href="{{'{!URLFOR($Resource.LightningCSS)}' + '/assets/icons/utility-sprite/svg/symbols.svg#close'}}"></use>
								</svg> 
								<span class="slds-assistive-text">{!$Label.Close}</span>
							</a>
							<h2 class="slds-text-heading--medium">{!$Label.Preview_E_mail}</h2>
						</div>
						<div class="slds-modal__content slds-p-around--medium">
							<div id="divEmailPreview" class="email-preview"> 
							</div>
						</div>
						<div class="slds-modal__footer">
							<a class="slds-button slds-button--neutral slds-button--brand" ng-click="isShowPreview=false">{!$Label.Close}</a> 
						</div>
					</div>
				</div>
				<div class="slds-backdrop slds-backdrop--open " ></div>
			</div>
		</div>
		<div ng-show="showTypeCustomModal" ng-cloak="true">
			<div aria-hidden="false" role="dialog" class="slds-modal slds-fade-in-open" >
				<div class="slds-modal__container">
					<div class="slds-modal__header">
						<a class="slds-button slds-button--icon-inverse slds-modal__close" ng-click="showTypeCustomModal = false">
							<img id="close-Image" src="{!URLFOR($Resource.LightningCSS, '/assets/icons/action/close_120.png')}" alt="close" height="20" width="20"/>
						</a>
						<h2 class="slds-text-heading--medium">{{modalEntry.Title}}</h2>
					</div>
					<div class="slds-modal__content slds-p-around--medium" > 
						<div class="slds-form-element">
							<div class="slds-col slds-size--1-of-1 slds-p-bottom--x-small not-hide">
								<dl class="not-hide">
									<dt class="not-hide">
										<p class="slds-text-heading--label slds-truncate not-hide">
											{!$Label.Account}
										</p>
									</dt>
									<dd ng-show="modalEntry.Account != ''" class="slds-truncate not-hide">
										{{modalEntry.Account}}
									</dd>
								</dl>
							</div>
						</div>
						<div class="slds-form-element" ng-show="!modalEntry.isCustomContent && !isContentInterviewType">
							<div class="slds-col slds-size--1-of-1 slds-p-bottom--x-small not-hide">
								<dl class="not-hide">
									<dt class="not-hide">
										<p class="slds-text-heading--label slds-truncate not-hide">
											{!$Label.Type}
										</p>
									</dt>
									<dd class="not-hide">
										{{modalEntry.RefContentTypeName}}
									</dd>
								</dl>
							</div>
							<div class="slds-col slds-size--1-of-1 slds-p-bottom--x-small not-hide">
								<dl class="not-hide">
									<dt class="not-hide">
										<p class="slds-text-heading--label slds-truncate not-hide">
											{!$Label.Size}
										</p>
									</dt>
									<dd class="slds-truncate not-hide" ng-show="modalEntry.FileSize != ''">
										{{modalEntry.FileSize}}
									</dd>
								</dl>
							</div>
						</div>
						<div class="slds-form-element" ng-show="modalEntry.isCustomContent && !isContentInterviewType">
							<div class="slds-col slds-size--1-of-1 slds-p-bottom--x-small not-hide" ng-repeat="item in modalEntry.customContentFieldsList">
								<div class="slds-col slds-size--1-of-1 slds-p-bottom--x-small not-hide">
									<dl class="not-hide">
										<dt class="not-hide">
											<p class="slds-text-heading--label slds-truncate not-hide">
												{{item.label}}
											</p>
										</dt>
										<dd class="slds-truncate not-hide">
											<span class="slds-truncate not-hide" ng-if="item.type == 'BOOLEAN'" >
												<input type="checkbox" name="options" value="on" ng-checked="item.value == 'true' || item.value == 'TRUE'" ng-disabled="true"/>
											</span>
											<p class="not-hide" ng-if="item.type != 'BOOLEAN'" ng-bind="item.value">
											</p>
										</dd>
									</dl>
								</div>
							</div>
						</div>
						<div class="slds-form-element" ng-show="!isContentInterviewType">
							<div class="slds-col slds-size--1-of-1 slds-p-bottom--x-small not-hide">
								<dl class="not-hide">
									<dt class="not-hide">
										<p class="slds-text-heading--label slds-truncate not-hide">
											{!$Label.Summary}
										</p>
									</dt>
									<dd class="not-hide">
										{{modalEntry.Summary}}
									</dd>
								</dl>
							</div>
						</div>
					</div>
					<div class="slds-modal__footer">
						<a class="slds-button slds-button--neutral" ng-show="modalEntry.isCustomContent && !isContentInterviewType && !isContentUpdateable" ng-click="showTypeCustomModal=false">{!$Label.Close}</a>
						<a class="slds-button slds-button--neutral" ng-show="!modalEntry.isCustomContent && !isContentInterviewType && modalEntry.FileType != 'LINK' && modalEntry.FileType != 'UNKNOWN'" ng-click="downloadRefContent(modalEntry.ContentId,modalEntry.FileType);">{!$Label.Download}</a>
						<a class="slds-button slds-button--neutral" ng-show="!modalEntry.isCustomContent && !isContentInterviewType && modalEntry.FileType == 'LINK'" ng-click="downloadRefContent(modalEntry.ContentId, modalEntry.FileType);">{!$Label.Open}</a>
						<a ng-show="isContentUpdateable && !isContentInterviewType" href="/{{modalEntry.RefContentId}}" ng-click="showTypeCustomModal=false" target="_blank" class="slds-button slds-button--neutral">{!$Label.View_Details}</a>
					</div>
				</div>
			</div>
			<div class="slds-backdrop slds-backdrop--open"></div>
		</div>
	</apex:form>
	<div ng-show="isloading" class="slds-spinner--medium" id="loading">
		<img ng-show="isloading" id="loading-image"
			src="{!URLFOR($Resource.LightningCSS, '/assets/images/spinners/slds_spinner_brand.gif')}"
			alt="Loading..." />
	</div>
</body>
	</html>
<c:HelpOverlays /> 
</apex:page>