<!--
 * ReferenceEdge
 * 
 * Point of Reference, Inc. - Copyright 2014 All rights reserved.
 *
 * @company : Point of Reference, Inc.
 * @website : www.point-of-reference.com
 *
 * Disclaimer: THIS SOFTWARE IS PROVIDED "AS-IS" BY POINT OF REFERENCE ("POR"), 
 * WITH NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY OF THE SOFTWARE, 
 * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT. 
 * POR SHALL NOT BE LIABLE FOR ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING, 
 * MODIFYING OR DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES. POR IS NOT LIABLE FOR, 
 * AND MAKES NO REPRESENTATIONS OR WARRANTIES REGARDING, THE ACTIONS OR OMISSIONS OF 
 * ANY THIRD PARTIES (OR THE PRODUCTS OR SERVICES OFFERED BY ANY THIRD PARTIES) INCLUDING, 
 * WITHOUT LIMIATION, SALESFORCE.COM. COPY, USE OR DISTRIBUTION PROHIBITED WITHOUT EXPRESS 
 * WRITTEN CONSENT FROM COMPANY.
 -->
<apex:page controller="IssueRewardController" sideBar="false" id="pageId" tabStyle="Reward__c" applyHtmlTag="true" applyBodyTag="false" docType="html-5.0">
    <apex:outputPanel rendered="{!!isSLDS}">
	    <!-- Messages -->
	    <apex:pageMessages id="pgmsgId"/>
	    <!-- Add POR_ModalLoader Component-->
	    <c:POR_ModalLoader id="PORLoader"/>
	    <apex:pageMessage summary="{!$Label.Insufficient_Privileges}" strength="3" severity="Info" 
	    							rendered="{!IF(isFullLicenseAccessible,NOT(IsPageAccessible),isFullLicenseAccessible)}" />
	    <apex:pageMessage summary="{!$Label.User_License}" strength="3" severity="Info" rendered="{!NOT(isFullLicenseAccessible)}" />
	    <!-- Java Script -->
	    <apex:outputPanel id="jsPanel">
	        <script>
	            var isContactReferenceable = {!contactReferenceability};
				var isSalesUser = {!isSalesUser};
				var isContactSelected = {!isContactSelected};
				var accountMSG = '{!JSENCODE(status)}'.replace('@@@1', '{!$Label.Account}');
				var contactMSG = '{!JSENCODE(status)}'.replace('@@@1', '{!$Label.Contact}');
				var userId = '{!JSENCODE(userId)}';
				
				function showPopup() {
				    var state;
				    
				    if (isSalesUser == true) {
				        saveReward();
				    } else {
				        jQuery(".issueReward").each(function() {
				            jQuery(this).addClass('btnDisabled');
				            jQuery(this).attr('disabled', true);
				        });
				
				        if (isContactSelected && !isContactReferenceable) {
				            state = confirm(contactMSG);
				        } else if ({!!accountReferenceability}) {
				            state = confirm(accountMSG);
				        }
				
				        if (typeof state != 'undefined' && !state) {
				            jQuery(".issueReward").each(function() {
				                jQuery(this).removeClass('btnDisabled');
				                jQuery(this).attr('disabled', false);
				            });
				        } else {
				            saveReward();
				        }
				    }
				    return false;
				}
				
				/* Function used to redirect to previous page.- re #1112 */
		    	function returnToPrevious() { 
		    		 
		    		if (userId == null || userId == '') {
		    			window.location = '/'+ '{!returnUrl}';
		    		} else {
		    			window.location = '{!returnUrl}';
		    		} 
		    	}
	        </script>
	    </apex:outputPanel>
	    <style>
	        .pbSubheader
	        {
	        	background-image : none !important;
	        }
	    </style>
	    <!-- Form -->
	    <apex:form id="frmId" rendered="{!AND(IsPageAccessible,isFullLicenseAccessible)}">
	        <apex:actionFunction name="saveReward" action="{!save}"/>
	        <apex:actionFunction name="findReferenceStatus" oncomplete="PORHideLoading();" immediate="true" action="{!getContactReferenceStatus}" rerender="jsPanel,testPanel">
	            <apex:param assignTo="{!selectedContact}" value="" name="paramName"/>
	        </apex:actionFunction>
	        <apex:actionFunction name="findReferenceStatusAccount" oncomplete="PORHideLoading();" immediate="true" action="{!getAccountReferenceStatus}" rerender="jsPanel">
	            <apex:param assignTo="{!selectedAccount}" value="" name="paramName"/>
	        </apex:actionFunction>
	        <!-- Section Header-->
	        <apex:sectionHeader title="{!$Label.Issue_Reward}"/>
	        <apex:pageMessage summary="{!$Label.X1000_records}" strength="3" severity="Info" rendered="{!isLimitExceeded}" />
	        <!-- Page Block -->
	        <apex:pageBlock id="pbId" title="{!$Label.Issue_Reward}" mode="edit">
	            <!-- Page Block Buttons-->
	            <apex:pageBlockButtons id="pbbId">
	                <apex:commandButton value="{!$Label.Save}" onclick="return showPopup();"  styleclass="issueReward"/>  
	                <button type="button" onclick="returnToPrevious(); return false;" style="height: 21px;">{!$Label.Cancel}</button>
	            </apex:pageBlockButtons>
	            <!-- Page Block Section-->
	            <apex:pageBlockSection id="pbsId" columns="1" title="{!$Label.Information}">
	                <apex:outputField value="{!reward.Account__c}" rendered="{!AND(AccountList.size <= 1, NOT(isSalesUser))}"/>
					<apex:outputField value="{!reward.User__c}" rendered="{!userId != null}"/>
	                <apex:pageBlockSectionItem id="accountItemId" rendered="{!AND(AccountList.size > 1,NOT(isSalesUser))}">
	                    <apex:outputLabel value="{!$Label.Account}"/>
	                    <apex:selectList value="{!reward.Account__c}" size="1" onchange="PORShowLoading();findReferenceStatusAccount(this.value);">
	                        <apex:selectOptions value="{!AccountList}"/>
	                    </apex:selectList>
	                </apex:pageBlockSectionItem>
	                <!-- Contact (When From Account)-->
	                <apex:pageBlockSectionItem id="contactItemId" rendered="{!AND(ContactList.size > 1,NOT(isSalesUser))}">
	                    <apex:outputLabel value="{!$Label.Contact}"/>
	                    <apex:selectList value="{!reward.Contact__c}" size="1" onchange="PORShowLoading();findReferenceStatus(this.value);">
	                        <apex:selectOptions value="{!ContactList}"/>
	                    </apex:selectList>
	                </apex:pageBlockSectionItem>
	                <!-- Contact (When From Contact)-->
	                <apex:outputField value="{!reward.Contact__c}" rendered="{!AND(ContactList.size = 1,NOT(isSalesUser))}"/>
	                <apex:pageBlockSectionItem id="rtItemId">
	                    <apex:outputLabel value="{!$Label.Referenceability_Activity_Type}"/>
	                    <apex:actionRegion >
	                        <apex:outputPanel styleClass="requiredInput" layout="block" >
	                            <div class="requiredBlock"></div>
	                            <apex:selectList value="{!reward.Referenceability_Type__c}"  size="1" multiselect="false">
	                                <apex:selectOptions value="{!ReferenceabilityTypeList}"/>
	                                <apex:actionsupport event="onchange" rerender="amountId" action="{!changeAmount}" />
	                            </apex:selectList>
	                        </apex:outputPanel>
	                    </apex:actionRegion>
	                </apex:pageBlockSectionItem>
	                <apex:inputField value="{!reward.Amount__c}" id="amountId" required="true"/>
	                <apex:outputField value="{!reward.RewardDate__c}"/>
	                <apex:inputField value="{!reward.Comments__c}"/>
	                <apex:outputField value="{!reward.Expiration_Date__c}"/>
	            </apex:pageBlockSection>
	        </apex:pageblock>
	    </apex:form>
    </apex:outputPanel>
    <apex:include pageName="IssueRewardSLDS" rendered="{!isSLDS}"/>
</apex:page>