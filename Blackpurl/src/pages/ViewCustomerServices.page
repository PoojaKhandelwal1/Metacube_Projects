<apex:page standardStylesheets="false" showChat="false" showHeader="false" controller="NewViewCustomerCtrl" sidebar="false" applyHtmlTag="false" applyBodyTag="false" 
    contentType="application/javascript">

    define(['Routing_AppJs_PK'], function (Routing_AppJs_PK) {
        Routing_AppJs_PK.factory('CustomerOrdersService', ['$q', function ($q) {
            return {
            	getAllCustomerOrdersListByCustomerId: function(customerId, CustomerOrdersPageSortAttrsJSON){
                	CustomerOrdersPageSortAttrsJSON = angular.toJson(CustomerOrdersPageSortAttrsJSON);
	           		return RemoteActionService($q, '{!$RemoteAction.NewViewCustomerCtrl.getAllCustomerOrdersListByCustomerId}', customerId, CustomerOrdersPageSortAttrsJSON);
	           	}
            };
        }]);
        
        Routing_AppJs_PK.factory('CustomerInfoService1', ['$q', function ($q) {
            return {
            	<!-- Start: updated the CustomerInfoService1.getCustomerInfo -> CustomerInfoService1.getCustomerDetails parameter to handle multiple parameters updated by Richa -->
            	<!-- getCustomerInfo: function(customerId, COUPageSortAttrsJSON, ActiveOrdersPageSortAttrsJSON, customersPageSortAttrsJSON, contactsPageSortAttrsJSON, CustomerOrdersPageSortAttrsJSON){
	           		COUPageSortAttrsJSON = angular.toJson(COUPageSortAttrsJSON);
                	ActiveOrdersPageSortAttrsJSON = angular.toJson(ActiveOrdersPageSortAttrsJSON);
               		CustomerOrdersPageSortAttrsJSON = angular.toJson(CustomerOrdersPageSortAttrsJSON); 
                	customersPageSortAttrsJSON = angular.toJson(customersPageSortAttrsJSON);
                	contactsPageSortAttrsJSON = angular.toJson(contactsPageSortAttrsJSON);
	           		return RemoteActionService($q, '{!$RemoteAction.NewViewCustomerCtrl.getCustomerDetail}', customerId, COUPageSortAttrsJSON, ActiveOrdersPageSortAttrsJSON, customersPageSortAttrsJSON, contactsPageSortAttrsJSON, CustomerOrdersPageSortAttrsJSON);
	           	}, -->
	           	
	           	getCustomerDetails: function(customerInfo){
	           		return RemoteActionService($q, '{!$RemoteAction.NewViewCustomerCtrl.getCustomerDetails}', customerInfo);
	           	},
	           	sentMessage: function(msgInfoJSON, MessageHistoryPageSortAttrsJSON){ 
	           		MessageHistoryPageSortAttrsJSON = angular.toJson(MessageHistoryPageSortAttrsJSON);
	           		return RemoteActionService($q, '{!$RemoteAction.NewViewCustomerCtrl.sendMessage}', angular.toJson(msgInfoJSON), MessageHistoryPageSortAttrsJSON);
	           	},
	           	getCustomerMessageHistory: function(customerId, MessageHistoryPageSortAttrsJSON){
                	MessageHistoryPageSortAttrsJSON = angular.toJson(MessageHistoryPageSortAttrsJSON);
	           		return RemoteActionService($q, '{!$RemoteAction.NewViewCustomerCtrl.getMessageListByCustomerId}', customerId, MessageHistoryPageSortAttrsJSON);
	           	},
	           	saveCustomerNotes: function(customerId, customerNotes){
	           		return RemoteActionService($q, '{!$RemoteAction.NewViewCustomerCtrl.saveNotesForCustomer}',customerId, customerNotes);
	           	}
	           	<!-- End: updated the CustomerInfoService1.getCustomerInfo -> CustomerInfoService1.getCustomerDetails parameter to handle multiple parameters updated by Richa -->
            };
        }]);  
        
        Routing_AppJs_PK.factory('CustomerOwnedUnitsService', ['$q', function ($q) {
            return {
            	getCustomerOwnedUnitById: function(couId){
	           		return RemoteActionService($q, '{!$RemoteAction.NewViewCustomerCtrl.getCOURecordById}', couId);
	           	},
	           	
	           	getCustomerOwnedUnits: function(customerId, COUPageSortAttrsJSON){
                	COUPageSortAttrsJSON = angular.toJson(COUPageSortAttrsJSON);
	           		return RemoteActionService($q, '{!$RemoteAction.NewViewCustomerCtrl.getCOUListByCustomerId}', customerId, COUPageSortAttrsJSON);
	           	},
	           	
	           	addCustomerOwnedUnit: function(customerId, customerOwnedUnitJSON, COUPageSortAttrsJSON){
                	COUPageSortAttrsJSON = angular.toJson(COUPageSortAttrsJSON);
	           		return RemoteActionService($q, '{!$RemoteAction.NewViewCustomerCtrl.saveCOU}', customerId, customerOwnedUnitJSON, COUPageSortAttrsJSON);
	           	},
	           	
	           	removeCustomerOwnedUnit: function(customerId, customerOwnedUnitId, COUPageSortAttrsJSON){
	           		COUPageSortAttrsJSON = angular.toJson(COUPageSortAttrsJSON);
	           		return RemoteActionService($q, '{!$RemoteAction.NewViewCustomerCtrl.removeCOURecord}', customerId, customerOwnedUnitId, COUPageSortAttrsJSON);
	           	}
	           	
	           	
            };
        }]);  
            
        Routing_AppJs_PK.factory('CustomerActiveOrdersService', ['$q', function ($q) {
            return {
            	getCustomerActiveOrders: function(customerId, ActiveOrdersPageSortAttrsJSON){
            		ActiveOrdersPageSortAttrsJSON = angular.toJson(ActiveOrdersPageSortAttrsJSON);
	           		return RemoteActionService($q, '{!$RemoteAction.NewViewCustomerCtrl.getActiveOrdersListByCustomerId}', customerId, ActiveOrdersPageSortAttrsJSON);
	           	}
            };
        }]);  
        
        Routing_AppJs_PK.factory('RelatedCustomersService', ['$q', function ($q) {
            return {
            	getRelatedCustomers: function(customerId, customersPageSortAttrsJSON){
                	customersPageSortAttrsJSON = angular.toJson(customersPageSortAttrsJSON);
	           		return RemoteActionService($q, '{!$RemoteAction.NewViewCustomerCtrl.getRelatedCustomerByCustomerId}', customerId, customersPageSortAttrsJSON);
	           	},
	           	
	           	addRelatedCustomer: function(customerJSON, customersPageSortAttrsJSON){
                	customerJSON = angular.toJson(customerJSON);
                	customersPageSortAttrsJSON = angular.toJson(customersPageSortAttrsJSON);
	           		return RemoteActionService($q, '{!$RemoteAction.NewViewCustomerCtrl.updateRelatedCustomer}', customerJSON, customersPageSortAttrsJSON);
	           	}
            };
        }]);  
            
        Routing_AppJs_PK.factory('CustomerContactsService', ['$q', function ($q) {
            return {
            	getCustomerContacts: function(customerId, contactsPageSortAttrsJSON){
                	contactsPageSortAttrsJSON = angular.toJson(contactsPageSortAttrsJSON);
	           		return RemoteActionService($q, '{!$RemoteAction.NewViewCustomerCtrl.getCustomerContactByCustomerId}', customerId, contactsPageSortAttrsJSON);
	           	},
	           	
	           	addCustomerContact: function(customerCotnactJSON, contactsPageSortAttrsJSON){
                	customerCotnactJSON = angular.toJson(customerCotnactJSON);
                	contactsPageSortAttrsJSON = angular.toJson(contactsPageSortAttrsJSON);
	           		return RemoteActionService($q, '{!$RemoteAction.NewViewCustomerCtrl.updateCustomerContact}', customerCotnactJSON, contactsPageSortAttrsJSON);
	           	},
	           	
	           	updateRelation: function(customerCotnactJSON, contactsPageSortAttrsJSON){
                	customerCotnactJSON = angular.toJson(customerCotnactJSON);
                	contactsPageSortAttrsJSON = angular.toJson(contactsPageSortAttrsJSON);
	           		return RemoteActionService($q, '{!$RemoteAction.NewViewCustomerCtrl.updateCustomerContactRelation}', customerCotnactJSON, contactsPageSortAttrsJSON);
	           	},
	           	
	           	removeCustomerContact: function(customerId, customerContactId, contactsPageSortAttrsJSON){
	                contactsPageSortAttrsJSON = angular.toJson(contactsPageSortAttrsJSON);
	           		return RemoteActionService($q, '{!$RemoteAction.NewViewCustomerCtrl.removeCustomerContactRecord}', customerId, customerContactId, contactsPageSortAttrsJSON);
	           	}
            };
        }]);  
        
        Routing_AppJs_PK.factory('StoreCreditService', ['$q', function ($q) {
            return {
	           	
	           	addStoreCredit: function(customerId, storeCreditJSON, storeCreditPageSortAttrsJSON){
                	storeCreditJSON = angular.toJson(storeCreditJSON);
                	storeCreditPageSortAttrsJSON = angular.toJson(storeCreditPageSortAttrsJSON);
	           		return RemoteActionService($q, '{!$RemoteAction.NewViewCustomerCtrl.saveCustomerStoreCredit}', customerId, storeCreditJSON, storeCreditPageSortAttrsJSON);
	           	},
	           	
	           	getCustomerStoreCredit: function(customerId, storeCreditPageSortAttrsJSON){
                	storeCreditPageSortAttrsJSON = angular.toJson(storeCreditPageSortAttrsJSON);
	           		return RemoteActionService($q, '{!$RemoteAction.NewViewCustomerCtrl.getCustomerStoreCreditbyCustomerId}', customerId, storeCreditPageSortAttrsJSON);
	           	}
            };
        }]); 
        
        return Routing_AppJs_PK;
    }); 
</apex:page>